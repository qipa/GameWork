// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: HSGameGuide.proto

package message;

public final class HSGameGuide {
  private HSGameGuide() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface GameGuideOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // repeated .message.GameGuide.Guide guideList = 1;
    java.util.List<message.HSGameGuide.GameGuide.Guide> 
        getGuideListList();
    message.HSGameGuide.GameGuide.Guide getGuideList(int index);
    int getGuideListCount();
    
    // repeated .message.GameGuide.BattleLayout battleLayoutList = 2;
    java.util.List<message.HSGameGuide.GameGuide.BattleLayout> 
        getBattleLayoutListList();
    message.HSGameGuide.GameGuide.BattleLayout getBattleLayoutList(int index);
    int getBattleLayoutListCount();
  }
  public static final class GameGuide extends
      com.google.protobuf.GeneratedMessageLite
      implements GameGuideOrBuilder {
    // Use GameGuide.newBuilder() to construct.
    private GameGuide(Builder builder) {
      super(builder);
    }
    private GameGuide(boolean noInit) {}
    
    private static final GameGuide defaultInstance;
    public static GameGuide getDefaultInstance() {
      return defaultInstance;
    }
    
    public GameGuide getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public interface GuideOrBuilder
        extends com.google.protobuf.MessageLiteOrBuilder {
      
      // required int32 id = 1;
      boolean hasId();
      int getId();
      
      // required bool isInterceptTouch = 2;
      boolean hasIsInterceptTouch();
      boolean getIsInterceptTouch();
      
      // required bool isShowMask = 3;
      boolean hasIsShowMask();
      boolean getIsShowMask();
      
      // required bool isShowHole = 4;
      boolean hasIsShowHole();
      boolean getIsShowHole();
      
      // required bool isPause = 5;
      boolean hasIsPause();
      boolean getIsPause();
      
      // optional .message.GameGuide.Guide.ModeType modeType = 6;
      boolean hasModeType();
      message.HSGameGuide.GameGuide.Guide.ModeType getModeType();
      
      // optional .message.GameGuide.Guide.Point modePos = 7;
      boolean hasModePos();
      message.HSGameGuide.GameGuide.Guide.Point getModePos();
      
      // optional float w = 8;
      boolean hasW();
      float getW();
      
      // optional float h = 9;
      boolean hasH();
      float getH();
      
      // optional .message.GameGuide.Guide.Point indicationSignPos = 10;
      boolean hasIndicationSignPos();
      message.HSGameGuide.GameGuide.Guide.Point getIndicationSignPos();
      
      // optional .message.GameGuide.Guide.MirrorType mirror = 11;
      boolean hasMirror();
      message.HSGameGuide.GameGuide.Guide.MirrorType getMirror();
      
      // optional float rotate = 12 [default = 0];
      boolean hasRotate();
      float getRotate();
      
      // optional .message.GameGuide.Guide.Point describeFramePos = 13;
      boolean hasDescribeFramePos();
      message.HSGameGuide.GameGuide.Guide.Point getDescribeFramePos();
      
      // optional string describe = 14 [default = ""];
      boolean hasDescribe();
      String getDescribe();
    }
    public static final class Guide extends
        com.google.protobuf.GeneratedMessageLite
        implements GuideOrBuilder {
      // Use Guide.newBuilder() to construct.
      private Guide(Builder builder) {
        super(builder);
      }
      private Guide(boolean noInit) {}
      
      private static final Guide defaultInstance;
      public static Guide getDefaultInstance() {
        return defaultInstance;
      }
      
      public Guide getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public enum ModeType
          implements com.google.protobuf.Internal.EnumLite {
        ModeType_Rect(0, 0),
        ModeType_Round(1, 1),
        ModeType_NULL(2, 2),
        ;
        
        public static final int ModeType_Rect_VALUE = 0;
        public static final int ModeType_Round_VALUE = 1;
        public static final int ModeType_NULL_VALUE = 2;
        
        
        public final int getNumber() { return value; }
        
        public static ModeType valueOf(int value) {
          switch (value) {
            case 0: return ModeType_Rect;
            case 1: return ModeType_Round;
            case 2: return ModeType_NULL;
            default: return null;
          }
        }
        
        public static com.google.protobuf.Internal.EnumLiteMap<ModeType>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static com.google.protobuf.Internal.EnumLiteMap<ModeType>
            internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<ModeType>() {
                public ModeType findValueByNumber(int number) {
                  return ModeType.valueOf(number);
                }
              };
        
        private final int value;
        
        private ModeType(int index, int value) {
          this.value = value;
        }
        
        // @@protoc_insertion_point(enum_scope:message.GameGuide.Guide.ModeType)
      }
      
      public enum MirrorType
          implements com.google.protobuf.Internal.EnumLite {
        MirrorType_X(0, 0),
        MirrorType_Y(1, 1),
        ;
        
        public static final int MirrorType_X_VALUE = 0;
        public static final int MirrorType_Y_VALUE = 1;
        
        
        public final int getNumber() { return value; }
        
        public static MirrorType valueOf(int value) {
          switch (value) {
            case 0: return MirrorType_X;
            case 1: return MirrorType_Y;
            default: return null;
          }
        }
        
        public static com.google.protobuf.Internal.EnumLiteMap<MirrorType>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static com.google.protobuf.Internal.EnumLiteMap<MirrorType>
            internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<MirrorType>() {
                public MirrorType findValueByNumber(int number) {
                  return MirrorType.valueOf(number);
                }
              };
        
        private final int value;
        
        private MirrorType(int index, int value) {
          this.value = value;
        }
        
        // @@protoc_insertion_point(enum_scope:message.GameGuide.Guide.MirrorType)
      }
      
      public interface PointOrBuilder
          extends com.google.protobuf.MessageLiteOrBuilder {
        
        // required float x = 1;
        boolean hasX();
        float getX();
        
        // required float y = 2;
        boolean hasY();
        float getY();
      }
      public static final class Point extends
          com.google.protobuf.GeneratedMessageLite
          implements PointOrBuilder {
        // Use Point.newBuilder() to construct.
        private Point(Builder builder) {
          super(builder);
        }
        private Point(boolean noInit) {}
        
        private static final Point defaultInstance;
        public static Point getDefaultInstance() {
          return defaultInstance;
        }
        
        public Point getDefaultInstanceForType() {
          return defaultInstance;
        }
        
        private int bitField0_;
        // required float x = 1;
        public static final int X_FIELD_NUMBER = 1;
        private float x_;
        public boolean hasX() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        public float getX() {
          return x_;
        }
        
        // required float y = 2;
        public static final int Y_FIELD_NUMBER = 2;
        private float y_;
        public boolean hasY() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        public float getY() {
          return y_;
        }
        
        private void initFields() {
          x_ = 0F;
          y_ = 0F;
        }
        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized != -1) return isInitialized == 1;
          
          if (!hasX()) {
            memoizedIsInitialized = 0;
            return false;
          }
          if (!hasY()) {
            memoizedIsInitialized = 0;
            return false;
          }
          memoizedIsInitialized = 1;
          return true;
        }
        
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            output.writeFloat(1, x_);
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            output.writeFloat(2, y_);
          }
        }
        
        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
        
          size = 0;
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(1, x_);
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(2, y_);
          }
          memoizedSerializedSize = size;
          return size;
        }
        
        private static final long serialVersionUID = 0L;
        @java.lang.Override
        protected java.lang.Object writeReplace()
            throws java.io.ObjectStreamException {
          return super.writeReplace();
        }
        
        public static message.HSGameGuide.GameGuide.Guide.Point parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return newBuilder().mergeFrom(data).buildParsed();
        }
        public static message.HSGameGuide.GameGuide.Guide.Point parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return newBuilder().mergeFrom(data, extensionRegistry)
                   .buildParsed();
        }
        public static message.HSGameGuide.GameGuide.Guide.Point parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return newBuilder().mergeFrom(data).buildParsed();
        }
        public static message.HSGameGuide.GameGuide.Guide.Point parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return newBuilder().mergeFrom(data, extensionRegistry)
                   .buildParsed();
        }
        public static message.HSGameGuide.GameGuide.Guide.Point parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return newBuilder().mergeFrom(input).buildParsed();
        }
        public static message.HSGameGuide.GameGuide.Guide.Point parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return newBuilder().mergeFrom(input, extensionRegistry)
                   .buildParsed();
        }
        public static message.HSGameGuide.GameGuide.Guide.Point parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          Builder builder = newBuilder();
          if (builder.mergeDelimitedFrom(input)) {
            return builder.buildParsed();
          } else {
            return null;
          }
        }
        public static message.HSGameGuide.GameGuide.Guide.Point parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          Builder builder = newBuilder();
          if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
            return builder.buildParsed();
          } else {
            return null;
          }
        }
        public static message.HSGameGuide.GameGuide.Guide.Point parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return newBuilder().mergeFrom(input).buildParsed();
        }
        public static message.HSGameGuide.GameGuide.Guide.Point parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return newBuilder().mergeFrom(input, extensionRegistry)
                   .buildParsed();
        }
        
        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(message.HSGameGuide.GameGuide.Guide.Point prototype) {
          return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }
        
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageLite.Builder<
              message.HSGameGuide.GameGuide.Guide.Point, Builder>
            implements message.HSGameGuide.GameGuide.Guide.PointOrBuilder {
          // Construct using message.HSGameGuide.GameGuide.Guide.Point.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }
          
          private void maybeForceBuilderInitialization() {
          }
          private static Builder create() {
            return new Builder();
          }
          
          public Builder clear() {
            super.clear();
            x_ = 0F;
            bitField0_ = (bitField0_ & ~0x00000001);
            y_ = 0F;
            bitField0_ = (bitField0_ & ~0x00000002);
            return this;
          }
          
          public Builder clone() {
            return create().mergeFrom(buildPartial());
          }
          
          public message.HSGameGuide.GameGuide.Guide.Point getDefaultInstanceForType() {
            return message.HSGameGuide.GameGuide.Guide.Point.getDefaultInstance();
          }
          
          public message.HSGameGuide.GameGuide.Guide.Point build() {
            message.HSGameGuide.GameGuide.Guide.Point result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }
          
          private message.HSGameGuide.GameGuide.Guide.Point buildParsed()
              throws com.google.protobuf.InvalidProtocolBufferException {
            message.HSGameGuide.GameGuide.Guide.Point result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(
                result).asInvalidProtocolBufferException();
            }
            return result;
          }
          
          public message.HSGameGuide.GameGuide.Guide.Point buildPartial() {
            message.HSGameGuide.GameGuide.Guide.Point result = new message.HSGameGuide.GameGuide.Guide.Point(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
              to_bitField0_ |= 0x00000001;
            }
            result.x_ = x_;
            if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
              to_bitField0_ |= 0x00000002;
            }
            result.y_ = y_;
            result.bitField0_ = to_bitField0_;
            return result;
          }
          
          public Builder mergeFrom(message.HSGameGuide.GameGuide.Guide.Point other) {
            if (other == message.HSGameGuide.GameGuide.Guide.Point.getDefaultInstance()) return this;
            if (other.hasX()) {
              setX(other.getX());
            }
            if (other.hasY()) {
              setY(other.getY());
            }
            return this;
          }
          
          public final boolean isInitialized() {
            if (!hasX()) {
              
              return false;
            }
            if (!hasY()) {
              
              return false;
            }
            return true;
          }
          
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            while (true) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  
                  return this;
                default: {
                  if (!parseUnknownField(input, extensionRegistry, tag)) {
                    
                    return this;
                  }
                  break;
                }
                case 13: {
                  bitField0_ |= 0x00000001;
                  x_ = input.readFloat();
                  break;
                }
                case 21: {
                  bitField0_ |= 0x00000002;
                  y_ = input.readFloat();
                  break;
                }
              }
            }
          }
          
          private int bitField0_;
          
          // required float x = 1;
          private float x_ ;
          public boolean hasX() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
          }
          public float getX() {
            return x_;
          }
          public Builder setX(float value) {
            bitField0_ |= 0x00000001;
            x_ = value;
            
            return this;
          }
          public Builder clearX() {
            bitField0_ = (bitField0_ & ~0x00000001);
            x_ = 0F;
            
            return this;
          }
          
          // required float y = 2;
          private float y_ ;
          public boolean hasY() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
          }
          public float getY() {
            return y_;
          }
          public Builder setY(float value) {
            bitField0_ |= 0x00000002;
            y_ = value;
            
            return this;
          }
          public Builder clearY() {
            bitField0_ = (bitField0_ & ~0x00000002);
            y_ = 0F;
            
            return this;
          }
          
          // @@protoc_insertion_point(builder_scope:message.GameGuide.Guide.Point)
        }
        
        static {
          defaultInstance = new Point(true);
          defaultInstance.initFields();
        }
        
        // @@protoc_insertion_point(class_scope:message.GameGuide.Guide.Point)
      }
      
      private int bitField0_;
      // required int32 id = 1;
      public static final int ID_FIELD_NUMBER = 1;
      private int id_;
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getId() {
        return id_;
      }
      
      // required bool isInterceptTouch = 2;
      public static final int ISINTERCEPTTOUCH_FIELD_NUMBER = 2;
      private boolean isInterceptTouch_;
      public boolean hasIsInterceptTouch() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public boolean getIsInterceptTouch() {
        return isInterceptTouch_;
      }
      
      // required bool isShowMask = 3;
      public static final int ISSHOWMASK_FIELD_NUMBER = 3;
      private boolean isShowMask_;
      public boolean hasIsShowMask() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public boolean getIsShowMask() {
        return isShowMask_;
      }
      
      // required bool isShowHole = 4;
      public static final int ISSHOWHOLE_FIELD_NUMBER = 4;
      private boolean isShowHole_;
      public boolean hasIsShowHole() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public boolean getIsShowHole() {
        return isShowHole_;
      }
      
      // required bool isPause = 5;
      public static final int ISPAUSE_FIELD_NUMBER = 5;
      private boolean isPause_;
      public boolean hasIsPause() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public boolean getIsPause() {
        return isPause_;
      }
      
      // optional .message.GameGuide.Guide.ModeType modeType = 6;
      public static final int MODETYPE_FIELD_NUMBER = 6;
      private message.HSGameGuide.GameGuide.Guide.ModeType modeType_;
      public boolean hasModeType() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public message.HSGameGuide.GameGuide.Guide.ModeType getModeType() {
        return modeType_;
      }
      
      // optional .message.GameGuide.Guide.Point modePos = 7;
      public static final int MODEPOS_FIELD_NUMBER = 7;
      private message.HSGameGuide.GameGuide.Guide.Point modePos_;
      public boolean hasModePos() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public message.HSGameGuide.GameGuide.Guide.Point getModePos() {
        return modePos_;
      }
      
      // optional float w = 8;
      public static final int W_FIELD_NUMBER = 8;
      private float w_;
      public boolean hasW() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public float getW() {
        return w_;
      }
      
      // optional float h = 9;
      public static final int H_FIELD_NUMBER = 9;
      private float h_;
      public boolean hasH() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public float getH() {
        return h_;
      }
      
      // optional .message.GameGuide.Guide.Point indicationSignPos = 10;
      public static final int INDICATIONSIGNPOS_FIELD_NUMBER = 10;
      private message.HSGameGuide.GameGuide.Guide.Point indicationSignPos_;
      public boolean hasIndicationSignPos() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      public message.HSGameGuide.GameGuide.Guide.Point getIndicationSignPos() {
        return indicationSignPos_;
      }
      
      // optional .message.GameGuide.Guide.MirrorType mirror = 11;
      public static final int MIRROR_FIELD_NUMBER = 11;
      private message.HSGameGuide.GameGuide.Guide.MirrorType mirror_;
      public boolean hasMirror() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      public message.HSGameGuide.GameGuide.Guide.MirrorType getMirror() {
        return mirror_;
      }
      
      // optional float rotate = 12 [default = 0];
      public static final int ROTATE_FIELD_NUMBER = 12;
      private float rotate_;
      public boolean hasRotate() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      public float getRotate() {
        return rotate_;
      }
      
      // optional .message.GameGuide.Guide.Point describeFramePos = 13;
      public static final int DESCRIBEFRAMEPOS_FIELD_NUMBER = 13;
      private message.HSGameGuide.GameGuide.Guide.Point describeFramePos_;
      public boolean hasDescribeFramePos() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      public message.HSGameGuide.GameGuide.Guide.Point getDescribeFramePos() {
        return describeFramePos_;
      }
      
      // optional string describe = 14 [default = ""];
      public static final int DESCRIBE_FIELD_NUMBER = 14;
      private java.lang.Object describe_;
      public boolean hasDescribe() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      public String getDescribe() {
        java.lang.Object ref = describe_;
        if (ref instanceof String) {
          return (String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (com.google.protobuf.Internal.isValidUtf8(bs)) {
            describe_ = s;
          }
          return s;
        }
      }
      private com.google.protobuf.ByteString getDescribeBytes() {
        java.lang.Object ref = describe_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8((String) ref);
          describe_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      
      private void initFields() {
        id_ = 0;
        isInterceptTouch_ = false;
        isShowMask_ = false;
        isShowHole_ = false;
        isPause_ = false;
        modeType_ = message.HSGameGuide.GameGuide.Guide.ModeType.ModeType_Rect;
        modePos_ = message.HSGameGuide.GameGuide.Guide.Point.getDefaultInstance();
        w_ = 0F;
        h_ = 0F;
        indicationSignPos_ = message.HSGameGuide.GameGuide.Guide.Point.getDefaultInstance();
        mirror_ = message.HSGameGuide.GameGuide.Guide.MirrorType.MirrorType_X;
        rotate_ = 0F;
        describeFramePos_ = message.HSGameGuide.GameGuide.Guide.Point.getDefaultInstance();
        describe_ = "";
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;
        
        if (!hasId()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasIsInterceptTouch()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasIsShowMask()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasIsShowHole()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasIsPause()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (hasModePos()) {
          if (!getModePos().isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
        }
        if (hasIndicationSignPos()) {
          if (!getIndicationSignPos().isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
        }
        if (hasDescribeFramePos()) {
          if (!getDescribeFramePos().isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
        }
        memoizedIsInitialized = 1;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(1, id_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBool(2, isInterceptTouch_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeBool(3, isShowMask_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeBool(4, isShowHole_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeBool(5, isPause_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeEnum(6, modeType_.getNumber());
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          output.writeMessage(7, modePos_);
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          output.writeFloat(8, w_);
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          output.writeFloat(9, h_);
        }
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          output.writeMessage(10, indicationSignPos_);
        }
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          output.writeEnum(11, mirror_.getNumber());
        }
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          output.writeFloat(12, rotate_);
        }
        if (((bitField0_ & 0x00001000) == 0x00001000)) {
          output.writeMessage(13, describeFramePos_);
        }
        if (((bitField0_ & 0x00002000) == 0x00002000)) {
          output.writeBytes(14, getDescribeBytes());
        }
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, id_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(2, isInterceptTouch_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(3, isShowMask_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(4, isShowHole_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(5, isPause_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(6, modeType_.getNumber());
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(7, modePos_);
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(8, w_);
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(9, h_);
        }
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10, indicationSignPos_);
        }
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(11, mirror_.getNumber());
        }
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(12, rotate_);
        }
        if (((bitField0_ & 0x00001000) == 0x00001000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(13, describeFramePos_);
        }
        if (((bitField0_ & 0x00002000) == 0x00002000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(14, getDescribeBytes());
        }
        memoizedSerializedSize = size;
        return size;
      }
      
      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }
      
      public static message.HSGameGuide.GameGuide.Guide parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static message.HSGameGuide.GameGuide.Guide parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static message.HSGameGuide.GameGuide.Guide parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static message.HSGameGuide.GameGuide.Guide parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static message.HSGameGuide.GameGuide.Guide parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static message.HSGameGuide.GameGuide.Guide parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static message.HSGameGuide.GameGuide.Guide parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static message.HSGameGuide.GameGuide.Guide parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static message.HSGameGuide.GameGuide.Guide parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static message.HSGameGuide.GameGuide.Guide parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(message.HSGameGuide.GameGuide.Guide prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            message.HSGameGuide.GameGuide.Guide, Builder>
          implements message.HSGameGuide.GameGuide.GuideOrBuilder {
        // Construct using message.HSGameGuide.GameGuide.Guide.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }
        
        private void maybeForceBuilderInitialization() {
        }
        private static Builder create() {
          return new Builder();
        }
        
        public Builder clear() {
          super.clear();
          id_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          isInterceptTouch_ = false;
          bitField0_ = (bitField0_ & ~0x00000002);
          isShowMask_ = false;
          bitField0_ = (bitField0_ & ~0x00000004);
          isShowHole_ = false;
          bitField0_ = (bitField0_ & ~0x00000008);
          isPause_ = false;
          bitField0_ = (bitField0_ & ~0x00000010);
          modeType_ = message.HSGameGuide.GameGuide.Guide.ModeType.ModeType_Rect;
          bitField0_ = (bitField0_ & ~0x00000020);
          modePos_ = message.HSGameGuide.GameGuide.Guide.Point.getDefaultInstance();
          bitField0_ = (bitField0_ & ~0x00000040);
          w_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000080);
          h_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000100);
          indicationSignPos_ = message.HSGameGuide.GameGuide.Guide.Point.getDefaultInstance();
          bitField0_ = (bitField0_ & ~0x00000200);
          mirror_ = message.HSGameGuide.GameGuide.Guide.MirrorType.MirrorType_X;
          bitField0_ = (bitField0_ & ~0x00000400);
          rotate_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000800);
          describeFramePos_ = message.HSGameGuide.GameGuide.Guide.Point.getDefaultInstance();
          bitField0_ = (bitField0_ & ~0x00001000);
          describe_ = "";
          bitField0_ = (bitField0_ & ~0x00002000);
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }
        
        public message.HSGameGuide.GameGuide.Guide getDefaultInstanceForType() {
          return message.HSGameGuide.GameGuide.Guide.getDefaultInstance();
        }
        
        public message.HSGameGuide.GameGuide.Guide build() {
          message.HSGameGuide.GameGuide.Guide result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }
        
        private message.HSGameGuide.GameGuide.Guide buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          message.HSGameGuide.GameGuide.Guide result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return result;
        }
        
        public message.HSGameGuide.GameGuide.Guide buildPartial() {
          message.HSGameGuide.GameGuide.Guide result = new message.HSGameGuide.GameGuide.Guide(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.id_ = id_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.isInterceptTouch_ = isInterceptTouch_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.isShowMask_ = isShowMask_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.isShowHole_ = isShowHole_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.isPause_ = isPause_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          result.modeType_ = modeType_;
          if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
            to_bitField0_ |= 0x00000040;
          }
          result.modePos_ = modePos_;
          if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
            to_bitField0_ |= 0x00000080;
          }
          result.w_ = w_;
          if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
            to_bitField0_ |= 0x00000100;
          }
          result.h_ = h_;
          if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
            to_bitField0_ |= 0x00000200;
          }
          result.indicationSignPos_ = indicationSignPos_;
          if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
            to_bitField0_ |= 0x00000400;
          }
          result.mirror_ = mirror_;
          if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
            to_bitField0_ |= 0x00000800;
          }
          result.rotate_ = rotate_;
          if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
            to_bitField0_ |= 0x00001000;
          }
          result.describeFramePos_ = describeFramePos_;
          if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
            to_bitField0_ |= 0x00002000;
          }
          result.describe_ = describe_;
          result.bitField0_ = to_bitField0_;
          return result;
        }
        
        public Builder mergeFrom(message.HSGameGuide.GameGuide.Guide other) {
          if (other == message.HSGameGuide.GameGuide.Guide.getDefaultInstance()) return this;
          if (other.hasId()) {
            setId(other.getId());
          }
          if (other.hasIsInterceptTouch()) {
            setIsInterceptTouch(other.getIsInterceptTouch());
          }
          if (other.hasIsShowMask()) {
            setIsShowMask(other.getIsShowMask());
          }
          if (other.hasIsShowHole()) {
            setIsShowHole(other.getIsShowHole());
          }
          if (other.hasIsPause()) {
            setIsPause(other.getIsPause());
          }
          if (other.hasModeType()) {
            setModeType(other.getModeType());
          }
          if (other.hasModePos()) {
            mergeModePos(other.getModePos());
          }
          if (other.hasW()) {
            setW(other.getW());
          }
          if (other.hasH()) {
            setH(other.getH());
          }
          if (other.hasIndicationSignPos()) {
            mergeIndicationSignPos(other.getIndicationSignPos());
          }
          if (other.hasMirror()) {
            setMirror(other.getMirror());
          }
          if (other.hasRotate()) {
            setRotate(other.getRotate());
          }
          if (other.hasDescribeFramePos()) {
            mergeDescribeFramePos(other.getDescribeFramePos());
          }
          if (other.hasDescribe()) {
            setDescribe(other.getDescribe());
          }
          return this;
        }
        
        public final boolean isInitialized() {
          if (!hasId()) {
            
            return false;
          }
          if (!hasIsInterceptTouch()) {
            
            return false;
          }
          if (!hasIsShowMask()) {
            
            return false;
          }
          if (!hasIsShowHole()) {
            
            return false;
          }
          if (!hasIsPause()) {
            
            return false;
          }
          if (hasModePos()) {
            if (!getModePos().isInitialized()) {
              
              return false;
            }
          }
          if (hasIndicationSignPos()) {
            if (!getIndicationSignPos().isInitialized()) {
              
              return false;
            }
          }
          if (hasDescribeFramePos()) {
            if (!getDescribeFramePos().isInitialized()) {
              
              return false;
            }
          }
          return true;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                
                return this;
              default: {
                if (!parseUnknownField(input, extensionRegistry, tag)) {
                  
                  return this;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                id_ = input.readInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                isInterceptTouch_ = input.readBool();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                isShowMask_ = input.readBool();
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                isShowHole_ = input.readBool();
                break;
              }
              case 40: {
                bitField0_ |= 0x00000010;
                isPause_ = input.readBool();
                break;
              }
              case 48: {
                int rawValue = input.readEnum();
                message.HSGameGuide.GameGuide.Guide.ModeType value = message.HSGameGuide.GameGuide.Guide.ModeType.valueOf(rawValue);
                if (value != null) {
                  bitField0_ |= 0x00000020;
                  modeType_ = value;
                }
                break;
              }
              case 58: {
                message.HSGameGuide.GameGuide.Guide.Point.Builder subBuilder = message.HSGameGuide.GameGuide.Guide.Point.newBuilder();
                if (hasModePos()) {
                  subBuilder.mergeFrom(getModePos());
                }
                input.readMessage(subBuilder, extensionRegistry);
                setModePos(subBuilder.buildPartial());
                break;
              }
              case 69: {
                bitField0_ |= 0x00000080;
                w_ = input.readFloat();
                break;
              }
              case 77: {
                bitField0_ |= 0x00000100;
                h_ = input.readFloat();
                break;
              }
              case 82: {
                message.HSGameGuide.GameGuide.Guide.Point.Builder subBuilder = message.HSGameGuide.GameGuide.Guide.Point.newBuilder();
                if (hasIndicationSignPos()) {
                  subBuilder.mergeFrom(getIndicationSignPos());
                }
                input.readMessage(subBuilder, extensionRegistry);
                setIndicationSignPos(subBuilder.buildPartial());
                break;
              }
              case 88: {
                int rawValue = input.readEnum();
                message.HSGameGuide.GameGuide.Guide.MirrorType value = message.HSGameGuide.GameGuide.Guide.MirrorType.valueOf(rawValue);
                if (value != null) {
                  bitField0_ |= 0x00000400;
                  mirror_ = value;
                }
                break;
              }
              case 101: {
                bitField0_ |= 0x00000800;
                rotate_ = input.readFloat();
                break;
              }
              case 106: {
                message.HSGameGuide.GameGuide.Guide.Point.Builder subBuilder = message.HSGameGuide.GameGuide.Guide.Point.newBuilder();
                if (hasDescribeFramePos()) {
                  subBuilder.mergeFrom(getDescribeFramePos());
                }
                input.readMessage(subBuilder, extensionRegistry);
                setDescribeFramePos(subBuilder.buildPartial());
                break;
              }
              case 114: {
                bitField0_ |= 0x00002000;
                describe_ = input.readBytes();
                break;
              }
            }
          }
        }
        
        private int bitField0_;
        
        // required int32 id = 1;
        private int id_ ;
        public boolean hasId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        public int getId() {
          return id_;
        }
        public Builder setId(int value) {
          bitField0_ |= 0x00000001;
          id_ = value;
          
          return this;
        }
        public Builder clearId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          id_ = 0;
          
          return this;
        }
        
        // required bool isInterceptTouch = 2;
        private boolean isInterceptTouch_ ;
        public boolean hasIsInterceptTouch() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        public boolean getIsInterceptTouch() {
          return isInterceptTouch_;
        }
        public Builder setIsInterceptTouch(boolean value) {
          bitField0_ |= 0x00000002;
          isInterceptTouch_ = value;
          
          return this;
        }
        public Builder clearIsInterceptTouch() {
          bitField0_ = (bitField0_ & ~0x00000002);
          isInterceptTouch_ = false;
          
          return this;
        }
        
        // required bool isShowMask = 3;
        private boolean isShowMask_ ;
        public boolean hasIsShowMask() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        public boolean getIsShowMask() {
          return isShowMask_;
        }
        public Builder setIsShowMask(boolean value) {
          bitField0_ |= 0x00000004;
          isShowMask_ = value;
          
          return this;
        }
        public Builder clearIsShowMask() {
          bitField0_ = (bitField0_ & ~0x00000004);
          isShowMask_ = false;
          
          return this;
        }
        
        // required bool isShowHole = 4;
        private boolean isShowHole_ ;
        public boolean hasIsShowHole() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        public boolean getIsShowHole() {
          return isShowHole_;
        }
        public Builder setIsShowHole(boolean value) {
          bitField0_ |= 0x00000008;
          isShowHole_ = value;
          
          return this;
        }
        public Builder clearIsShowHole() {
          bitField0_ = (bitField0_ & ~0x00000008);
          isShowHole_ = false;
          
          return this;
        }
        
        // required bool isPause = 5;
        private boolean isPause_ ;
        public boolean hasIsPause() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        public boolean getIsPause() {
          return isPause_;
        }
        public Builder setIsPause(boolean value) {
          bitField0_ |= 0x00000010;
          isPause_ = value;
          
          return this;
        }
        public Builder clearIsPause() {
          bitField0_ = (bitField0_ & ~0x00000010);
          isPause_ = false;
          
          return this;
        }
        
        // optional .message.GameGuide.Guide.ModeType modeType = 6;
        private message.HSGameGuide.GameGuide.Guide.ModeType modeType_ = message.HSGameGuide.GameGuide.Guide.ModeType.ModeType_Rect;
        public boolean hasModeType() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        public message.HSGameGuide.GameGuide.Guide.ModeType getModeType() {
          return modeType_;
        }
        public Builder setModeType(message.HSGameGuide.GameGuide.Guide.ModeType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000020;
          modeType_ = value;
          
          return this;
        }
        public Builder clearModeType() {
          bitField0_ = (bitField0_ & ~0x00000020);
          modeType_ = message.HSGameGuide.GameGuide.Guide.ModeType.ModeType_Rect;
          
          return this;
        }
        
        // optional .message.GameGuide.Guide.Point modePos = 7;
        private message.HSGameGuide.GameGuide.Guide.Point modePos_ = message.HSGameGuide.GameGuide.Guide.Point.getDefaultInstance();
        public boolean hasModePos() {
          return ((bitField0_ & 0x00000040) == 0x00000040);
        }
        public message.HSGameGuide.GameGuide.Guide.Point getModePos() {
          return modePos_;
        }
        public Builder setModePos(message.HSGameGuide.GameGuide.Guide.Point value) {
          if (value == null) {
            throw new NullPointerException();
          }
          modePos_ = value;
          
          bitField0_ |= 0x00000040;
          return this;
        }
        public Builder setModePos(
            message.HSGameGuide.GameGuide.Guide.Point.Builder builderForValue) {
          modePos_ = builderForValue.build();
          
          bitField0_ |= 0x00000040;
          return this;
        }
        public Builder mergeModePos(message.HSGameGuide.GameGuide.Guide.Point value) {
          if (((bitField0_ & 0x00000040) == 0x00000040) &&
              modePos_ != message.HSGameGuide.GameGuide.Guide.Point.getDefaultInstance()) {
            modePos_ =
              message.HSGameGuide.GameGuide.Guide.Point.newBuilder(modePos_).mergeFrom(value).buildPartial();
          } else {
            modePos_ = value;
          }
          
          bitField0_ |= 0x00000040;
          return this;
        }
        public Builder clearModePos() {
          modePos_ = message.HSGameGuide.GameGuide.Guide.Point.getDefaultInstance();
          
          bitField0_ = (bitField0_ & ~0x00000040);
          return this;
        }
        
        // optional float w = 8;
        private float w_ ;
        public boolean hasW() {
          return ((bitField0_ & 0x00000080) == 0x00000080);
        }
        public float getW() {
          return w_;
        }
        public Builder setW(float value) {
          bitField0_ |= 0x00000080;
          w_ = value;
          
          return this;
        }
        public Builder clearW() {
          bitField0_ = (bitField0_ & ~0x00000080);
          w_ = 0F;
          
          return this;
        }
        
        // optional float h = 9;
        private float h_ ;
        public boolean hasH() {
          return ((bitField0_ & 0x00000100) == 0x00000100);
        }
        public float getH() {
          return h_;
        }
        public Builder setH(float value) {
          bitField0_ |= 0x00000100;
          h_ = value;
          
          return this;
        }
        public Builder clearH() {
          bitField0_ = (bitField0_ & ~0x00000100);
          h_ = 0F;
          
          return this;
        }
        
        // optional .message.GameGuide.Guide.Point indicationSignPos = 10;
        private message.HSGameGuide.GameGuide.Guide.Point indicationSignPos_ = message.HSGameGuide.GameGuide.Guide.Point.getDefaultInstance();
        public boolean hasIndicationSignPos() {
          return ((bitField0_ & 0x00000200) == 0x00000200);
        }
        public message.HSGameGuide.GameGuide.Guide.Point getIndicationSignPos() {
          return indicationSignPos_;
        }
        public Builder setIndicationSignPos(message.HSGameGuide.GameGuide.Guide.Point value) {
          if (value == null) {
            throw new NullPointerException();
          }
          indicationSignPos_ = value;
          
          bitField0_ |= 0x00000200;
          return this;
        }
        public Builder setIndicationSignPos(
            message.HSGameGuide.GameGuide.Guide.Point.Builder builderForValue) {
          indicationSignPos_ = builderForValue.build();
          
          bitField0_ |= 0x00000200;
          return this;
        }
        public Builder mergeIndicationSignPos(message.HSGameGuide.GameGuide.Guide.Point value) {
          if (((bitField0_ & 0x00000200) == 0x00000200) &&
              indicationSignPos_ != message.HSGameGuide.GameGuide.Guide.Point.getDefaultInstance()) {
            indicationSignPos_ =
              message.HSGameGuide.GameGuide.Guide.Point.newBuilder(indicationSignPos_).mergeFrom(value).buildPartial();
          } else {
            indicationSignPos_ = value;
          }
          
          bitField0_ |= 0x00000200;
          return this;
        }
        public Builder clearIndicationSignPos() {
          indicationSignPos_ = message.HSGameGuide.GameGuide.Guide.Point.getDefaultInstance();
          
          bitField0_ = (bitField0_ & ~0x00000200);
          return this;
        }
        
        // optional .message.GameGuide.Guide.MirrorType mirror = 11;
        private message.HSGameGuide.GameGuide.Guide.MirrorType mirror_ = message.HSGameGuide.GameGuide.Guide.MirrorType.MirrorType_X;
        public boolean hasMirror() {
          return ((bitField0_ & 0x00000400) == 0x00000400);
        }
        public message.HSGameGuide.GameGuide.Guide.MirrorType getMirror() {
          return mirror_;
        }
        public Builder setMirror(message.HSGameGuide.GameGuide.Guide.MirrorType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000400;
          mirror_ = value;
          
          return this;
        }
        public Builder clearMirror() {
          bitField0_ = (bitField0_ & ~0x00000400);
          mirror_ = message.HSGameGuide.GameGuide.Guide.MirrorType.MirrorType_X;
          
          return this;
        }
        
        // optional float rotate = 12 [default = 0];
        private float rotate_ ;
        public boolean hasRotate() {
          return ((bitField0_ & 0x00000800) == 0x00000800);
        }
        public float getRotate() {
          return rotate_;
        }
        public Builder setRotate(float value) {
          bitField0_ |= 0x00000800;
          rotate_ = value;
          
          return this;
        }
        public Builder clearRotate() {
          bitField0_ = (bitField0_ & ~0x00000800);
          rotate_ = 0F;
          
          return this;
        }
        
        // optional .message.GameGuide.Guide.Point describeFramePos = 13;
        private message.HSGameGuide.GameGuide.Guide.Point describeFramePos_ = message.HSGameGuide.GameGuide.Guide.Point.getDefaultInstance();
        public boolean hasDescribeFramePos() {
          return ((bitField0_ & 0x00001000) == 0x00001000);
        }
        public message.HSGameGuide.GameGuide.Guide.Point getDescribeFramePos() {
          return describeFramePos_;
        }
        public Builder setDescribeFramePos(message.HSGameGuide.GameGuide.Guide.Point value) {
          if (value == null) {
            throw new NullPointerException();
          }
          describeFramePos_ = value;
          
          bitField0_ |= 0x00001000;
          return this;
        }
        public Builder setDescribeFramePos(
            message.HSGameGuide.GameGuide.Guide.Point.Builder builderForValue) {
          describeFramePos_ = builderForValue.build();
          
          bitField0_ |= 0x00001000;
          return this;
        }
        public Builder mergeDescribeFramePos(message.HSGameGuide.GameGuide.Guide.Point value) {
          if (((bitField0_ & 0x00001000) == 0x00001000) &&
              describeFramePos_ != message.HSGameGuide.GameGuide.Guide.Point.getDefaultInstance()) {
            describeFramePos_ =
              message.HSGameGuide.GameGuide.Guide.Point.newBuilder(describeFramePos_).mergeFrom(value).buildPartial();
          } else {
            describeFramePos_ = value;
          }
          
          bitField0_ |= 0x00001000;
          return this;
        }
        public Builder clearDescribeFramePos() {
          describeFramePos_ = message.HSGameGuide.GameGuide.Guide.Point.getDefaultInstance();
          
          bitField0_ = (bitField0_ & ~0x00001000);
          return this;
        }
        
        // optional string describe = 14 [default = ""];
        private java.lang.Object describe_ = "";
        public boolean hasDescribe() {
          return ((bitField0_ & 0x00002000) == 0x00002000);
        }
        public String getDescribe() {
          java.lang.Object ref = describe_;
          if (!(ref instanceof String)) {
            String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
            describe_ = s;
            return s;
          } else {
            return (String) ref;
          }
        }
        public Builder setDescribe(String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00002000;
          describe_ = value;
          
          return this;
        }
        public Builder clearDescribe() {
          bitField0_ = (bitField0_ & ~0x00002000);
          describe_ = getDefaultInstance().getDescribe();
          
          return this;
        }
        void setDescribe(com.google.protobuf.ByteString value) {
          bitField0_ |= 0x00002000;
          describe_ = value;
          
        }
        
        // @@protoc_insertion_point(builder_scope:message.GameGuide.Guide)
      }
      
      static {
        defaultInstance = new Guide(true);
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:message.GameGuide.Guide)
    }
    
    public interface BattleLayoutOrBuilder
        extends com.google.protobuf.MessageLiteOrBuilder {
      
      // required int32 id = 1;
      boolean hasId();
      int getId();
      
      // repeated .message.GameGuide.BattleLayout.BalloonInfo balloonInfoList = 2;
      java.util.List<message.HSGameGuide.GameGuide.BattleLayout.BalloonInfo> 
          getBalloonInfoListList();
      message.HSGameGuide.GameGuide.BattleLayout.BalloonInfo getBalloonInfoList(int index);
      int getBalloonInfoListCount();
      
      // repeated int32 destroyBalloonIDList = 3;
      java.util.List<java.lang.Integer> getDestroyBalloonIDListList();
      int getDestroyBalloonIDListCount();
      int getDestroyBalloonIDList(int index);
      
      // repeated .message.GameGuide.BattleLayout.Move moveList = 4;
      java.util.List<message.HSGameGuide.GameGuide.BattleLayout.Move> 
          getMoveListList();
      message.HSGameGuide.GameGuide.BattleLayout.Move getMoveList(int index);
      int getMoveListCount();
    }
    public static final class BattleLayout extends
        com.google.protobuf.GeneratedMessageLite
        implements BattleLayoutOrBuilder {
      // Use BattleLayout.newBuilder() to construct.
      private BattleLayout(Builder builder) {
        super(builder);
      }
      private BattleLayout(boolean noInit) {}
      
      private static final BattleLayout defaultInstance;
      public static BattleLayout getDefaultInstance() {
        return defaultInstance;
      }
      
      public BattleLayout getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public interface BalloonInfoOrBuilder
          extends com.google.protobuf.MessageLiteOrBuilder {
        
        // required int32 id = 1;
        boolean hasId();
        int getId();
        
        // required float x = 2;
        boolean hasX();
        float getX();
        
        // required float y = 3;
        boolean hasY();
        float getY();
        
        // required int32 color = 4;
        boolean hasColor();
        int getColor();
      }
      public static final class BalloonInfo extends
          com.google.protobuf.GeneratedMessageLite
          implements BalloonInfoOrBuilder {
        // Use BalloonInfo.newBuilder() to construct.
        private BalloonInfo(Builder builder) {
          super(builder);
        }
        private BalloonInfo(boolean noInit) {}
        
        private static final BalloonInfo defaultInstance;
        public static BalloonInfo getDefaultInstance() {
          return defaultInstance;
        }
        
        public BalloonInfo getDefaultInstanceForType() {
          return defaultInstance;
        }
        
        private int bitField0_;
        // required int32 id = 1;
        public static final int ID_FIELD_NUMBER = 1;
        private int id_;
        public boolean hasId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        public int getId() {
          return id_;
        }
        
        // required float x = 2;
        public static final int X_FIELD_NUMBER = 2;
        private float x_;
        public boolean hasX() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        public float getX() {
          return x_;
        }
        
        // required float y = 3;
        public static final int Y_FIELD_NUMBER = 3;
        private float y_;
        public boolean hasY() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        public float getY() {
          return y_;
        }
        
        // required int32 color = 4;
        public static final int COLOR_FIELD_NUMBER = 4;
        private int color_;
        public boolean hasColor() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        public int getColor() {
          return color_;
        }
        
        private void initFields() {
          id_ = 0;
          x_ = 0F;
          y_ = 0F;
          color_ = 0;
        }
        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized != -1) return isInitialized == 1;
          
          if (!hasId()) {
            memoizedIsInitialized = 0;
            return false;
          }
          if (!hasX()) {
            memoizedIsInitialized = 0;
            return false;
          }
          if (!hasY()) {
            memoizedIsInitialized = 0;
            return false;
          }
          if (!hasColor()) {
            memoizedIsInitialized = 0;
            return false;
          }
          memoizedIsInitialized = 1;
          return true;
        }
        
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            output.writeInt32(1, id_);
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            output.writeFloat(2, x_);
          }
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            output.writeFloat(3, y_);
          }
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            output.writeInt32(4, color_);
          }
        }
        
        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
        
          size = 0;
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(1, id_);
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(2, x_);
          }
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(3, y_);
          }
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(4, color_);
          }
          memoizedSerializedSize = size;
          return size;
        }
        
        private static final long serialVersionUID = 0L;
        @java.lang.Override
        protected java.lang.Object writeReplace()
            throws java.io.ObjectStreamException {
          return super.writeReplace();
        }
        
        public static message.HSGameGuide.GameGuide.BattleLayout.BalloonInfo parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return newBuilder().mergeFrom(data).buildParsed();
        }
        public static message.HSGameGuide.GameGuide.BattleLayout.BalloonInfo parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return newBuilder().mergeFrom(data, extensionRegistry)
                   .buildParsed();
        }
        public static message.HSGameGuide.GameGuide.BattleLayout.BalloonInfo parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return newBuilder().mergeFrom(data).buildParsed();
        }
        public static message.HSGameGuide.GameGuide.BattleLayout.BalloonInfo parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return newBuilder().mergeFrom(data, extensionRegistry)
                   .buildParsed();
        }
        public static message.HSGameGuide.GameGuide.BattleLayout.BalloonInfo parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return newBuilder().mergeFrom(input).buildParsed();
        }
        public static message.HSGameGuide.GameGuide.BattleLayout.BalloonInfo parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return newBuilder().mergeFrom(input, extensionRegistry)
                   .buildParsed();
        }
        public static message.HSGameGuide.GameGuide.BattleLayout.BalloonInfo parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          Builder builder = newBuilder();
          if (builder.mergeDelimitedFrom(input)) {
            return builder.buildParsed();
          } else {
            return null;
          }
        }
        public static message.HSGameGuide.GameGuide.BattleLayout.BalloonInfo parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          Builder builder = newBuilder();
          if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
            return builder.buildParsed();
          } else {
            return null;
          }
        }
        public static message.HSGameGuide.GameGuide.BattleLayout.BalloonInfo parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return newBuilder().mergeFrom(input).buildParsed();
        }
        public static message.HSGameGuide.GameGuide.BattleLayout.BalloonInfo parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return newBuilder().mergeFrom(input, extensionRegistry)
                   .buildParsed();
        }
        
        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(message.HSGameGuide.GameGuide.BattleLayout.BalloonInfo prototype) {
          return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }
        
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageLite.Builder<
              message.HSGameGuide.GameGuide.BattleLayout.BalloonInfo, Builder>
            implements message.HSGameGuide.GameGuide.BattleLayout.BalloonInfoOrBuilder {
          // Construct using message.HSGameGuide.GameGuide.BattleLayout.BalloonInfo.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }
          
          private void maybeForceBuilderInitialization() {
          }
          private static Builder create() {
            return new Builder();
          }
          
          public Builder clear() {
            super.clear();
            id_ = 0;
            bitField0_ = (bitField0_ & ~0x00000001);
            x_ = 0F;
            bitField0_ = (bitField0_ & ~0x00000002);
            y_ = 0F;
            bitField0_ = (bitField0_ & ~0x00000004);
            color_ = 0;
            bitField0_ = (bitField0_ & ~0x00000008);
            return this;
          }
          
          public Builder clone() {
            return create().mergeFrom(buildPartial());
          }
          
          public message.HSGameGuide.GameGuide.BattleLayout.BalloonInfo getDefaultInstanceForType() {
            return message.HSGameGuide.GameGuide.BattleLayout.BalloonInfo.getDefaultInstance();
          }
          
          public message.HSGameGuide.GameGuide.BattleLayout.BalloonInfo build() {
            message.HSGameGuide.GameGuide.BattleLayout.BalloonInfo result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }
          
          private message.HSGameGuide.GameGuide.BattleLayout.BalloonInfo buildParsed()
              throws com.google.protobuf.InvalidProtocolBufferException {
            message.HSGameGuide.GameGuide.BattleLayout.BalloonInfo result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(
                result).asInvalidProtocolBufferException();
            }
            return result;
          }
          
          public message.HSGameGuide.GameGuide.BattleLayout.BalloonInfo buildPartial() {
            message.HSGameGuide.GameGuide.BattleLayout.BalloonInfo result = new message.HSGameGuide.GameGuide.BattleLayout.BalloonInfo(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
              to_bitField0_ |= 0x00000001;
            }
            result.id_ = id_;
            if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
              to_bitField0_ |= 0x00000002;
            }
            result.x_ = x_;
            if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
              to_bitField0_ |= 0x00000004;
            }
            result.y_ = y_;
            if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
              to_bitField0_ |= 0x00000008;
            }
            result.color_ = color_;
            result.bitField0_ = to_bitField0_;
            return result;
          }
          
          public Builder mergeFrom(message.HSGameGuide.GameGuide.BattleLayout.BalloonInfo other) {
            if (other == message.HSGameGuide.GameGuide.BattleLayout.BalloonInfo.getDefaultInstance()) return this;
            if (other.hasId()) {
              setId(other.getId());
            }
            if (other.hasX()) {
              setX(other.getX());
            }
            if (other.hasY()) {
              setY(other.getY());
            }
            if (other.hasColor()) {
              setColor(other.getColor());
            }
            return this;
          }
          
          public final boolean isInitialized() {
            if (!hasId()) {
              
              return false;
            }
            if (!hasX()) {
              
              return false;
            }
            if (!hasY()) {
              
              return false;
            }
            if (!hasColor()) {
              
              return false;
            }
            return true;
          }
          
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            while (true) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  
                  return this;
                default: {
                  if (!parseUnknownField(input, extensionRegistry, tag)) {
                    
                    return this;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  id_ = input.readInt32();
                  break;
                }
                case 21: {
                  bitField0_ |= 0x00000002;
                  x_ = input.readFloat();
                  break;
                }
                case 29: {
                  bitField0_ |= 0x00000004;
                  y_ = input.readFloat();
                  break;
                }
                case 32: {
                  bitField0_ |= 0x00000008;
                  color_ = input.readInt32();
                  break;
                }
              }
            }
          }
          
          private int bitField0_;
          
          // required int32 id = 1;
          private int id_ ;
          public boolean hasId() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
          }
          public int getId() {
            return id_;
          }
          public Builder setId(int value) {
            bitField0_ |= 0x00000001;
            id_ = value;
            
            return this;
          }
          public Builder clearId() {
            bitField0_ = (bitField0_ & ~0x00000001);
            id_ = 0;
            
            return this;
          }
          
          // required float x = 2;
          private float x_ ;
          public boolean hasX() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
          }
          public float getX() {
            return x_;
          }
          public Builder setX(float value) {
            bitField0_ |= 0x00000002;
            x_ = value;
            
            return this;
          }
          public Builder clearX() {
            bitField0_ = (bitField0_ & ~0x00000002);
            x_ = 0F;
            
            return this;
          }
          
          // required float y = 3;
          private float y_ ;
          public boolean hasY() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
          }
          public float getY() {
            return y_;
          }
          public Builder setY(float value) {
            bitField0_ |= 0x00000004;
            y_ = value;
            
            return this;
          }
          public Builder clearY() {
            bitField0_ = (bitField0_ & ~0x00000004);
            y_ = 0F;
            
            return this;
          }
          
          // required int32 color = 4;
          private int color_ ;
          public boolean hasColor() {
            return ((bitField0_ & 0x00000008) == 0x00000008);
          }
          public int getColor() {
            return color_;
          }
          public Builder setColor(int value) {
            bitField0_ |= 0x00000008;
            color_ = value;
            
            return this;
          }
          public Builder clearColor() {
            bitField0_ = (bitField0_ & ~0x00000008);
            color_ = 0;
            
            return this;
          }
          
          // @@protoc_insertion_point(builder_scope:message.GameGuide.BattleLayout.BalloonInfo)
        }
        
        static {
          defaultInstance = new BalloonInfo(true);
          defaultInstance.initFields();
        }
        
        // @@protoc_insertion_point(class_scope:message.GameGuide.BattleLayout.BalloonInfo)
      }
      
      public interface MoveOrBuilder
          extends com.google.protobuf.MessageLiteOrBuilder {
        
        // required int32 beginID = 1;
        boolean hasBeginID();
        int getBeginID();
        
        // required int32 endID = 2;
        boolean hasEndID();
        int getEndID();
      }
      public static final class Move extends
          com.google.protobuf.GeneratedMessageLite
          implements MoveOrBuilder {
        // Use Move.newBuilder() to construct.
        private Move(Builder builder) {
          super(builder);
        }
        private Move(boolean noInit) {}
        
        private static final Move defaultInstance;
        public static Move getDefaultInstance() {
          return defaultInstance;
        }
        
        public Move getDefaultInstanceForType() {
          return defaultInstance;
        }
        
        private int bitField0_;
        // required int32 beginID = 1;
        public static final int BEGINID_FIELD_NUMBER = 1;
        private int beginID_;
        public boolean hasBeginID() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        public int getBeginID() {
          return beginID_;
        }
        
        // required int32 endID = 2;
        public static final int ENDID_FIELD_NUMBER = 2;
        private int endID_;
        public boolean hasEndID() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        public int getEndID() {
          return endID_;
        }
        
        private void initFields() {
          beginID_ = 0;
          endID_ = 0;
        }
        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized != -1) return isInitialized == 1;
          
          if (!hasBeginID()) {
            memoizedIsInitialized = 0;
            return false;
          }
          if (!hasEndID()) {
            memoizedIsInitialized = 0;
            return false;
          }
          memoizedIsInitialized = 1;
          return true;
        }
        
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            output.writeInt32(1, beginID_);
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            output.writeInt32(2, endID_);
          }
        }
        
        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
        
          size = 0;
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(1, beginID_);
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(2, endID_);
          }
          memoizedSerializedSize = size;
          return size;
        }
        
        private static final long serialVersionUID = 0L;
        @java.lang.Override
        protected java.lang.Object writeReplace()
            throws java.io.ObjectStreamException {
          return super.writeReplace();
        }
        
        public static message.HSGameGuide.GameGuide.BattleLayout.Move parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return newBuilder().mergeFrom(data).buildParsed();
        }
        public static message.HSGameGuide.GameGuide.BattleLayout.Move parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return newBuilder().mergeFrom(data, extensionRegistry)
                   .buildParsed();
        }
        public static message.HSGameGuide.GameGuide.BattleLayout.Move parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return newBuilder().mergeFrom(data).buildParsed();
        }
        public static message.HSGameGuide.GameGuide.BattleLayout.Move parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return newBuilder().mergeFrom(data, extensionRegistry)
                   .buildParsed();
        }
        public static message.HSGameGuide.GameGuide.BattleLayout.Move parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return newBuilder().mergeFrom(input).buildParsed();
        }
        public static message.HSGameGuide.GameGuide.BattleLayout.Move parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return newBuilder().mergeFrom(input, extensionRegistry)
                   .buildParsed();
        }
        public static message.HSGameGuide.GameGuide.BattleLayout.Move parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          Builder builder = newBuilder();
          if (builder.mergeDelimitedFrom(input)) {
            return builder.buildParsed();
          } else {
            return null;
          }
        }
        public static message.HSGameGuide.GameGuide.BattleLayout.Move parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          Builder builder = newBuilder();
          if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
            return builder.buildParsed();
          } else {
            return null;
          }
        }
        public static message.HSGameGuide.GameGuide.BattleLayout.Move parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return newBuilder().mergeFrom(input).buildParsed();
        }
        public static message.HSGameGuide.GameGuide.BattleLayout.Move parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return newBuilder().mergeFrom(input, extensionRegistry)
                   .buildParsed();
        }
        
        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(message.HSGameGuide.GameGuide.BattleLayout.Move prototype) {
          return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }
        
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageLite.Builder<
              message.HSGameGuide.GameGuide.BattleLayout.Move, Builder>
            implements message.HSGameGuide.GameGuide.BattleLayout.MoveOrBuilder {
          // Construct using message.HSGameGuide.GameGuide.BattleLayout.Move.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }
          
          private void maybeForceBuilderInitialization() {
          }
          private static Builder create() {
            return new Builder();
          }
          
          public Builder clear() {
            super.clear();
            beginID_ = 0;
            bitField0_ = (bitField0_ & ~0x00000001);
            endID_ = 0;
            bitField0_ = (bitField0_ & ~0x00000002);
            return this;
          }
          
          public Builder clone() {
            return create().mergeFrom(buildPartial());
          }
          
          public message.HSGameGuide.GameGuide.BattleLayout.Move getDefaultInstanceForType() {
            return message.HSGameGuide.GameGuide.BattleLayout.Move.getDefaultInstance();
          }
          
          public message.HSGameGuide.GameGuide.BattleLayout.Move build() {
            message.HSGameGuide.GameGuide.BattleLayout.Move result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }
          
          private message.HSGameGuide.GameGuide.BattleLayout.Move buildParsed()
              throws com.google.protobuf.InvalidProtocolBufferException {
            message.HSGameGuide.GameGuide.BattleLayout.Move result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(
                result).asInvalidProtocolBufferException();
            }
            return result;
          }
          
          public message.HSGameGuide.GameGuide.BattleLayout.Move buildPartial() {
            message.HSGameGuide.GameGuide.BattleLayout.Move result = new message.HSGameGuide.GameGuide.BattleLayout.Move(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
              to_bitField0_ |= 0x00000001;
            }
            result.beginID_ = beginID_;
            if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
              to_bitField0_ |= 0x00000002;
            }
            result.endID_ = endID_;
            result.bitField0_ = to_bitField0_;
            return result;
          }
          
          public Builder mergeFrom(message.HSGameGuide.GameGuide.BattleLayout.Move other) {
            if (other == message.HSGameGuide.GameGuide.BattleLayout.Move.getDefaultInstance()) return this;
            if (other.hasBeginID()) {
              setBeginID(other.getBeginID());
            }
            if (other.hasEndID()) {
              setEndID(other.getEndID());
            }
            return this;
          }
          
          public final boolean isInitialized() {
            if (!hasBeginID()) {
              
              return false;
            }
            if (!hasEndID()) {
              
              return false;
            }
            return true;
          }
          
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            while (true) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  
                  return this;
                default: {
                  if (!parseUnknownField(input, extensionRegistry, tag)) {
                    
                    return this;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  beginID_ = input.readInt32();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  endID_ = input.readInt32();
                  break;
                }
              }
            }
          }
          
          private int bitField0_;
          
          // required int32 beginID = 1;
          private int beginID_ ;
          public boolean hasBeginID() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
          }
          public int getBeginID() {
            return beginID_;
          }
          public Builder setBeginID(int value) {
            bitField0_ |= 0x00000001;
            beginID_ = value;
            
            return this;
          }
          public Builder clearBeginID() {
            bitField0_ = (bitField0_ & ~0x00000001);
            beginID_ = 0;
            
            return this;
          }
          
          // required int32 endID = 2;
          private int endID_ ;
          public boolean hasEndID() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
          }
          public int getEndID() {
            return endID_;
          }
          public Builder setEndID(int value) {
            bitField0_ |= 0x00000002;
            endID_ = value;
            
            return this;
          }
          public Builder clearEndID() {
            bitField0_ = (bitField0_ & ~0x00000002);
            endID_ = 0;
            
            return this;
          }
          
          // @@protoc_insertion_point(builder_scope:message.GameGuide.BattleLayout.Move)
        }
        
        static {
          defaultInstance = new Move(true);
          defaultInstance.initFields();
        }
        
        // @@protoc_insertion_point(class_scope:message.GameGuide.BattleLayout.Move)
      }
      
      private int bitField0_;
      // required int32 id = 1;
      public static final int ID_FIELD_NUMBER = 1;
      private int id_;
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getId() {
        return id_;
      }
      
      // repeated .message.GameGuide.BattleLayout.BalloonInfo balloonInfoList = 2;
      public static final int BALLOONINFOLIST_FIELD_NUMBER = 2;
      private java.util.List<message.HSGameGuide.GameGuide.BattleLayout.BalloonInfo> balloonInfoList_;
      public java.util.List<message.HSGameGuide.GameGuide.BattleLayout.BalloonInfo> getBalloonInfoListList() {
        return balloonInfoList_;
      }
      public java.util.List<? extends message.HSGameGuide.GameGuide.BattleLayout.BalloonInfoOrBuilder> 
          getBalloonInfoListOrBuilderList() {
        return balloonInfoList_;
      }
      public int getBalloonInfoListCount() {
        return balloonInfoList_.size();
      }
      public message.HSGameGuide.GameGuide.BattleLayout.BalloonInfo getBalloonInfoList(int index) {
        return balloonInfoList_.get(index);
      }
      public message.HSGameGuide.GameGuide.BattleLayout.BalloonInfoOrBuilder getBalloonInfoListOrBuilder(
          int index) {
        return balloonInfoList_.get(index);
      }
      
      // repeated int32 destroyBalloonIDList = 3;
      public static final int DESTROYBALLOONIDLIST_FIELD_NUMBER = 3;
      private java.util.List<java.lang.Integer> destroyBalloonIDList_;
      public java.util.List<java.lang.Integer>
          getDestroyBalloonIDListList() {
        return destroyBalloonIDList_;
      }
      public int getDestroyBalloonIDListCount() {
        return destroyBalloonIDList_.size();
      }
      public int getDestroyBalloonIDList(int index) {
        return destroyBalloonIDList_.get(index);
      }
      
      // repeated .message.GameGuide.BattleLayout.Move moveList = 4;
      public static final int MOVELIST_FIELD_NUMBER = 4;
      private java.util.List<message.HSGameGuide.GameGuide.BattleLayout.Move> moveList_;
      public java.util.List<message.HSGameGuide.GameGuide.BattleLayout.Move> getMoveListList() {
        return moveList_;
      }
      public java.util.List<? extends message.HSGameGuide.GameGuide.BattleLayout.MoveOrBuilder> 
          getMoveListOrBuilderList() {
        return moveList_;
      }
      public int getMoveListCount() {
        return moveList_.size();
      }
      public message.HSGameGuide.GameGuide.BattleLayout.Move getMoveList(int index) {
        return moveList_.get(index);
      }
      public message.HSGameGuide.GameGuide.BattleLayout.MoveOrBuilder getMoveListOrBuilder(
          int index) {
        return moveList_.get(index);
      }
      
      private void initFields() {
        id_ = 0;
        balloonInfoList_ = java.util.Collections.emptyList();
        destroyBalloonIDList_ = java.util.Collections.emptyList();;
        moveList_ = java.util.Collections.emptyList();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;
        
        if (!hasId()) {
          memoizedIsInitialized = 0;
          return false;
        }
        for (int i = 0; i < getBalloonInfoListCount(); i++) {
          if (!getBalloonInfoList(i).isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
        }
        for (int i = 0; i < getMoveListCount(); i++) {
          if (!getMoveList(i).isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
        }
        memoizedIsInitialized = 1;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(1, id_);
        }
        for (int i = 0; i < balloonInfoList_.size(); i++) {
          output.writeMessage(2, balloonInfoList_.get(i));
        }
        for (int i = 0; i < destroyBalloonIDList_.size(); i++) {
          output.writeInt32(3, destroyBalloonIDList_.get(i));
        }
        for (int i = 0; i < moveList_.size(); i++) {
          output.writeMessage(4, moveList_.get(i));
        }
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, id_);
        }
        for (int i = 0; i < balloonInfoList_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, balloonInfoList_.get(i));
        }
        {
          int dataSize = 0;
          for (int i = 0; i < destroyBalloonIDList_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(destroyBalloonIDList_.get(i));
          }
          size += dataSize;
          size += 1 * getDestroyBalloonIDListList().size();
        }
        for (int i = 0; i < moveList_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, moveList_.get(i));
        }
        memoizedSerializedSize = size;
        return size;
      }
      
      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }
      
      public static message.HSGameGuide.GameGuide.BattleLayout parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static message.HSGameGuide.GameGuide.BattleLayout parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static message.HSGameGuide.GameGuide.BattleLayout parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static message.HSGameGuide.GameGuide.BattleLayout parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static message.HSGameGuide.GameGuide.BattleLayout parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static message.HSGameGuide.GameGuide.BattleLayout parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static message.HSGameGuide.GameGuide.BattleLayout parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static message.HSGameGuide.GameGuide.BattleLayout parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static message.HSGameGuide.GameGuide.BattleLayout parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static message.HSGameGuide.GameGuide.BattleLayout parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(message.HSGameGuide.GameGuide.BattleLayout prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            message.HSGameGuide.GameGuide.BattleLayout, Builder>
          implements message.HSGameGuide.GameGuide.BattleLayoutOrBuilder {
        // Construct using message.HSGameGuide.GameGuide.BattleLayout.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }
        
        private void maybeForceBuilderInitialization() {
        }
        private static Builder create() {
          return new Builder();
        }
        
        public Builder clear() {
          super.clear();
          id_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          balloonInfoList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          destroyBalloonIDList_ = java.util.Collections.emptyList();;
          bitField0_ = (bitField0_ & ~0x00000004);
          moveList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }
        
        public message.HSGameGuide.GameGuide.BattleLayout getDefaultInstanceForType() {
          return message.HSGameGuide.GameGuide.BattleLayout.getDefaultInstance();
        }
        
        public message.HSGameGuide.GameGuide.BattleLayout build() {
          message.HSGameGuide.GameGuide.BattleLayout result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }
        
        private message.HSGameGuide.GameGuide.BattleLayout buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          message.HSGameGuide.GameGuide.BattleLayout result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return result;
        }
        
        public message.HSGameGuide.GameGuide.BattleLayout buildPartial() {
          message.HSGameGuide.GameGuide.BattleLayout result = new message.HSGameGuide.GameGuide.BattleLayout(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.id_ = id_;
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            balloonInfoList_ = java.util.Collections.unmodifiableList(balloonInfoList_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.balloonInfoList_ = balloonInfoList_;
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            destroyBalloonIDList_ = java.util.Collections.unmodifiableList(destroyBalloonIDList_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.destroyBalloonIDList_ = destroyBalloonIDList_;
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            moveList_ = java.util.Collections.unmodifiableList(moveList_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.moveList_ = moveList_;
          result.bitField0_ = to_bitField0_;
          return result;
        }
        
        public Builder mergeFrom(message.HSGameGuide.GameGuide.BattleLayout other) {
          if (other == message.HSGameGuide.GameGuide.BattleLayout.getDefaultInstance()) return this;
          if (other.hasId()) {
            setId(other.getId());
          }
          if (!other.balloonInfoList_.isEmpty()) {
            if (balloonInfoList_.isEmpty()) {
              balloonInfoList_ = other.balloonInfoList_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureBalloonInfoListIsMutable();
              balloonInfoList_.addAll(other.balloonInfoList_);
            }
            
          }
          if (!other.destroyBalloonIDList_.isEmpty()) {
            if (destroyBalloonIDList_.isEmpty()) {
              destroyBalloonIDList_ = other.destroyBalloonIDList_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureDestroyBalloonIDListIsMutable();
              destroyBalloonIDList_.addAll(other.destroyBalloonIDList_);
            }
            
          }
          if (!other.moveList_.isEmpty()) {
            if (moveList_.isEmpty()) {
              moveList_ = other.moveList_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureMoveListIsMutable();
              moveList_.addAll(other.moveList_);
            }
            
          }
          return this;
        }
        
        public final boolean isInitialized() {
          if (!hasId()) {
            
            return false;
          }
          for (int i = 0; i < getBalloonInfoListCount(); i++) {
            if (!getBalloonInfoList(i).isInitialized()) {
              
              return false;
            }
          }
          for (int i = 0; i < getMoveListCount(); i++) {
            if (!getMoveList(i).isInitialized()) {
              
              return false;
            }
          }
          return true;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                
                return this;
              default: {
                if (!parseUnknownField(input, extensionRegistry, tag)) {
                  
                  return this;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                id_ = input.readInt32();
                break;
              }
              case 18: {
                message.HSGameGuide.GameGuide.BattleLayout.BalloonInfo.Builder subBuilder = message.HSGameGuide.GameGuide.BattleLayout.BalloonInfo.newBuilder();
                input.readMessage(subBuilder, extensionRegistry);
                addBalloonInfoList(subBuilder.buildPartial());
                break;
              }
              case 24: {
                ensureDestroyBalloonIDListIsMutable();
                destroyBalloonIDList_.add(input.readInt32());
                break;
              }
              case 26: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                while (input.getBytesUntilLimit() > 0) {
                  addDestroyBalloonIDList(input.readInt32());
                }
                input.popLimit(limit);
                break;
              }
              case 34: {
                message.HSGameGuide.GameGuide.BattleLayout.Move.Builder subBuilder = message.HSGameGuide.GameGuide.BattleLayout.Move.newBuilder();
                input.readMessage(subBuilder, extensionRegistry);
                addMoveList(subBuilder.buildPartial());
                break;
              }
            }
          }
        }
        
        private int bitField0_;
        
        // required int32 id = 1;
        private int id_ ;
        public boolean hasId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        public int getId() {
          return id_;
        }
        public Builder setId(int value) {
          bitField0_ |= 0x00000001;
          id_ = value;
          
          return this;
        }
        public Builder clearId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          id_ = 0;
          
          return this;
        }
        
        // repeated .message.GameGuide.BattleLayout.BalloonInfo balloonInfoList = 2;
        private java.util.List<message.HSGameGuide.GameGuide.BattleLayout.BalloonInfo> balloonInfoList_ =
          java.util.Collections.emptyList();
        private void ensureBalloonInfoListIsMutable() {
          if (!((bitField0_ & 0x00000002) == 0x00000002)) {
            balloonInfoList_ = new java.util.ArrayList<message.HSGameGuide.GameGuide.BattleLayout.BalloonInfo>(balloonInfoList_);
            bitField0_ |= 0x00000002;
           }
        }
        
        public java.util.List<message.HSGameGuide.GameGuide.BattleLayout.BalloonInfo> getBalloonInfoListList() {
          return java.util.Collections.unmodifiableList(balloonInfoList_);
        }
        public int getBalloonInfoListCount() {
          return balloonInfoList_.size();
        }
        public message.HSGameGuide.GameGuide.BattleLayout.BalloonInfo getBalloonInfoList(int index) {
          return balloonInfoList_.get(index);
        }
        public Builder setBalloonInfoList(
            int index, message.HSGameGuide.GameGuide.BattleLayout.BalloonInfo value) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBalloonInfoListIsMutable();
          balloonInfoList_.set(index, value);
          
          return this;
        }
        public Builder setBalloonInfoList(
            int index, message.HSGameGuide.GameGuide.BattleLayout.BalloonInfo.Builder builderForValue) {
          ensureBalloonInfoListIsMutable();
          balloonInfoList_.set(index, builderForValue.build());
          
          return this;
        }
        public Builder addBalloonInfoList(message.HSGameGuide.GameGuide.BattleLayout.BalloonInfo value) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBalloonInfoListIsMutable();
          balloonInfoList_.add(value);
          
          return this;
        }
        public Builder addBalloonInfoList(
            int index, message.HSGameGuide.GameGuide.BattleLayout.BalloonInfo value) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBalloonInfoListIsMutable();
          balloonInfoList_.add(index, value);
          
          return this;
        }
        public Builder addBalloonInfoList(
            message.HSGameGuide.GameGuide.BattleLayout.BalloonInfo.Builder builderForValue) {
          ensureBalloonInfoListIsMutable();
          balloonInfoList_.add(builderForValue.build());
          
          return this;
        }
        public Builder addBalloonInfoList(
            int index, message.HSGameGuide.GameGuide.BattleLayout.BalloonInfo.Builder builderForValue) {
          ensureBalloonInfoListIsMutable();
          balloonInfoList_.add(index, builderForValue.build());
          
          return this;
        }
        public Builder addAllBalloonInfoList(
            java.lang.Iterable<? extends message.HSGameGuide.GameGuide.BattleLayout.BalloonInfo> values) {
          ensureBalloonInfoListIsMutable();
          super.addAll(values, balloonInfoList_);
          
          return this;
        }
        public Builder clearBalloonInfoList() {
          balloonInfoList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          
          return this;
        }
        public Builder removeBalloonInfoList(int index) {
          ensureBalloonInfoListIsMutable();
          balloonInfoList_.remove(index);
          
          return this;
        }
        
        // repeated int32 destroyBalloonIDList = 3;
        private java.util.List<java.lang.Integer> destroyBalloonIDList_ = java.util.Collections.emptyList();;
        private void ensureDestroyBalloonIDListIsMutable() {
          if (!((bitField0_ & 0x00000004) == 0x00000004)) {
            destroyBalloonIDList_ = new java.util.ArrayList<java.lang.Integer>(destroyBalloonIDList_);
            bitField0_ |= 0x00000004;
           }
        }
        public java.util.List<java.lang.Integer>
            getDestroyBalloonIDListList() {
          return java.util.Collections.unmodifiableList(destroyBalloonIDList_);
        }
        public int getDestroyBalloonIDListCount() {
          return destroyBalloonIDList_.size();
        }
        public int getDestroyBalloonIDList(int index) {
          return destroyBalloonIDList_.get(index);
        }
        public Builder setDestroyBalloonIDList(
            int index, int value) {
          ensureDestroyBalloonIDListIsMutable();
          destroyBalloonIDList_.set(index, value);
          
          return this;
        }
        public Builder addDestroyBalloonIDList(int value) {
          ensureDestroyBalloonIDListIsMutable();
          destroyBalloonIDList_.add(value);
          
          return this;
        }
        public Builder addAllDestroyBalloonIDList(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          ensureDestroyBalloonIDListIsMutable();
          super.addAll(values, destroyBalloonIDList_);
          
          return this;
        }
        public Builder clearDestroyBalloonIDList() {
          destroyBalloonIDList_ = java.util.Collections.emptyList();;
          bitField0_ = (bitField0_ & ~0x00000004);
          
          return this;
        }
        
        // repeated .message.GameGuide.BattleLayout.Move moveList = 4;
        private java.util.List<message.HSGameGuide.GameGuide.BattleLayout.Move> moveList_ =
          java.util.Collections.emptyList();
        private void ensureMoveListIsMutable() {
          if (!((bitField0_ & 0x00000008) == 0x00000008)) {
            moveList_ = new java.util.ArrayList<message.HSGameGuide.GameGuide.BattleLayout.Move>(moveList_);
            bitField0_ |= 0x00000008;
           }
        }
        
        public java.util.List<message.HSGameGuide.GameGuide.BattleLayout.Move> getMoveListList() {
          return java.util.Collections.unmodifiableList(moveList_);
        }
        public int getMoveListCount() {
          return moveList_.size();
        }
        public message.HSGameGuide.GameGuide.BattleLayout.Move getMoveList(int index) {
          return moveList_.get(index);
        }
        public Builder setMoveList(
            int index, message.HSGameGuide.GameGuide.BattleLayout.Move value) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMoveListIsMutable();
          moveList_.set(index, value);
          
          return this;
        }
        public Builder setMoveList(
            int index, message.HSGameGuide.GameGuide.BattleLayout.Move.Builder builderForValue) {
          ensureMoveListIsMutable();
          moveList_.set(index, builderForValue.build());
          
          return this;
        }
        public Builder addMoveList(message.HSGameGuide.GameGuide.BattleLayout.Move value) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMoveListIsMutable();
          moveList_.add(value);
          
          return this;
        }
        public Builder addMoveList(
            int index, message.HSGameGuide.GameGuide.BattleLayout.Move value) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMoveListIsMutable();
          moveList_.add(index, value);
          
          return this;
        }
        public Builder addMoveList(
            message.HSGameGuide.GameGuide.BattleLayout.Move.Builder builderForValue) {
          ensureMoveListIsMutable();
          moveList_.add(builderForValue.build());
          
          return this;
        }
        public Builder addMoveList(
            int index, message.HSGameGuide.GameGuide.BattleLayout.Move.Builder builderForValue) {
          ensureMoveListIsMutable();
          moveList_.add(index, builderForValue.build());
          
          return this;
        }
        public Builder addAllMoveList(
            java.lang.Iterable<? extends message.HSGameGuide.GameGuide.BattleLayout.Move> values) {
          ensureMoveListIsMutable();
          super.addAll(values, moveList_);
          
          return this;
        }
        public Builder clearMoveList() {
          moveList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          
          return this;
        }
        public Builder removeMoveList(int index) {
          ensureMoveListIsMutable();
          moveList_.remove(index);
          
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:message.GameGuide.BattleLayout)
      }
      
      static {
        defaultInstance = new BattleLayout(true);
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:message.GameGuide.BattleLayout)
    }
    
    // repeated .message.GameGuide.Guide guideList = 1;
    public static final int GUIDELIST_FIELD_NUMBER = 1;
    private java.util.List<message.HSGameGuide.GameGuide.Guide> guideList_;
    public java.util.List<message.HSGameGuide.GameGuide.Guide> getGuideListList() {
      return guideList_;
    }
    public java.util.List<? extends message.HSGameGuide.GameGuide.GuideOrBuilder> 
        getGuideListOrBuilderList() {
      return guideList_;
    }
    public int getGuideListCount() {
      return guideList_.size();
    }
    public message.HSGameGuide.GameGuide.Guide getGuideList(int index) {
      return guideList_.get(index);
    }
    public message.HSGameGuide.GameGuide.GuideOrBuilder getGuideListOrBuilder(
        int index) {
      return guideList_.get(index);
    }
    
    // repeated .message.GameGuide.BattleLayout battleLayoutList = 2;
    public static final int BATTLELAYOUTLIST_FIELD_NUMBER = 2;
    private java.util.List<message.HSGameGuide.GameGuide.BattleLayout> battleLayoutList_;
    public java.util.List<message.HSGameGuide.GameGuide.BattleLayout> getBattleLayoutListList() {
      return battleLayoutList_;
    }
    public java.util.List<? extends message.HSGameGuide.GameGuide.BattleLayoutOrBuilder> 
        getBattleLayoutListOrBuilderList() {
      return battleLayoutList_;
    }
    public int getBattleLayoutListCount() {
      return battleLayoutList_.size();
    }
    public message.HSGameGuide.GameGuide.BattleLayout getBattleLayoutList(int index) {
      return battleLayoutList_.get(index);
    }
    public message.HSGameGuide.GameGuide.BattleLayoutOrBuilder getBattleLayoutListOrBuilder(
        int index) {
      return battleLayoutList_.get(index);
    }
    
    private void initFields() {
      guideList_ = java.util.Collections.emptyList();
      battleLayoutList_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      for (int i = 0; i < getGuideListCount(); i++) {
        if (!getGuideList(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getBattleLayoutListCount(); i++) {
        if (!getBattleLayoutList(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < guideList_.size(); i++) {
        output.writeMessage(1, guideList_.get(i));
      }
      for (int i = 0; i < battleLayoutList_.size(); i++) {
        output.writeMessage(2, battleLayoutList_.get(i));
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (int i = 0; i < guideList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, guideList_.get(i));
      }
      for (int i = 0; i < battleLayoutList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, battleLayoutList_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static message.HSGameGuide.GameGuide parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static message.HSGameGuide.GameGuide parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static message.HSGameGuide.GameGuide parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static message.HSGameGuide.GameGuide parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static message.HSGameGuide.GameGuide parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static message.HSGameGuide.GameGuide parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static message.HSGameGuide.GameGuide parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static message.HSGameGuide.GameGuide parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static message.HSGameGuide.GameGuide parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static message.HSGameGuide.GameGuide parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(message.HSGameGuide.GameGuide prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          message.HSGameGuide.GameGuide, Builder>
        implements message.HSGameGuide.GameGuideOrBuilder {
      // Construct using message.HSGameGuide.GameGuide.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        guideList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        battleLayoutList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public message.HSGameGuide.GameGuide getDefaultInstanceForType() {
        return message.HSGameGuide.GameGuide.getDefaultInstance();
      }
      
      public message.HSGameGuide.GameGuide build() {
        message.HSGameGuide.GameGuide result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private message.HSGameGuide.GameGuide buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        message.HSGameGuide.GameGuide result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public message.HSGameGuide.GameGuide buildPartial() {
        message.HSGameGuide.GameGuide result = new message.HSGameGuide.GameGuide(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          guideList_ = java.util.Collections.unmodifiableList(guideList_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.guideList_ = guideList_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          battleLayoutList_ = java.util.Collections.unmodifiableList(battleLayoutList_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.battleLayoutList_ = battleLayoutList_;
        return result;
      }
      
      public Builder mergeFrom(message.HSGameGuide.GameGuide other) {
        if (other == message.HSGameGuide.GameGuide.getDefaultInstance()) return this;
        if (!other.guideList_.isEmpty()) {
          if (guideList_.isEmpty()) {
            guideList_ = other.guideList_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureGuideListIsMutable();
            guideList_.addAll(other.guideList_);
          }
          
        }
        if (!other.battleLayoutList_.isEmpty()) {
          if (battleLayoutList_.isEmpty()) {
            battleLayoutList_ = other.battleLayoutList_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureBattleLayoutListIsMutable();
            battleLayoutList_.addAll(other.battleLayoutList_);
          }
          
        }
        return this;
      }
      
      public final boolean isInitialized() {
        for (int i = 0; i < getGuideListCount(); i++) {
          if (!getGuideList(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getBattleLayoutListCount(); i++) {
          if (!getBattleLayoutList(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 10: {
              message.HSGameGuide.GameGuide.Guide.Builder subBuilder = message.HSGameGuide.GameGuide.Guide.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addGuideList(subBuilder.buildPartial());
              break;
            }
            case 18: {
              message.HSGameGuide.GameGuide.BattleLayout.Builder subBuilder = message.HSGameGuide.GameGuide.BattleLayout.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addBattleLayoutList(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // repeated .message.GameGuide.Guide guideList = 1;
      private java.util.List<message.HSGameGuide.GameGuide.Guide> guideList_ =
        java.util.Collections.emptyList();
      private void ensureGuideListIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          guideList_ = new java.util.ArrayList<message.HSGameGuide.GameGuide.Guide>(guideList_);
          bitField0_ |= 0x00000001;
         }
      }
      
      public java.util.List<message.HSGameGuide.GameGuide.Guide> getGuideListList() {
        return java.util.Collections.unmodifiableList(guideList_);
      }
      public int getGuideListCount() {
        return guideList_.size();
      }
      public message.HSGameGuide.GameGuide.Guide getGuideList(int index) {
        return guideList_.get(index);
      }
      public Builder setGuideList(
          int index, message.HSGameGuide.GameGuide.Guide value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureGuideListIsMutable();
        guideList_.set(index, value);
        
        return this;
      }
      public Builder setGuideList(
          int index, message.HSGameGuide.GameGuide.Guide.Builder builderForValue) {
        ensureGuideListIsMutable();
        guideList_.set(index, builderForValue.build());
        
        return this;
      }
      public Builder addGuideList(message.HSGameGuide.GameGuide.Guide value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureGuideListIsMutable();
        guideList_.add(value);
        
        return this;
      }
      public Builder addGuideList(
          int index, message.HSGameGuide.GameGuide.Guide value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureGuideListIsMutable();
        guideList_.add(index, value);
        
        return this;
      }
      public Builder addGuideList(
          message.HSGameGuide.GameGuide.Guide.Builder builderForValue) {
        ensureGuideListIsMutable();
        guideList_.add(builderForValue.build());
        
        return this;
      }
      public Builder addGuideList(
          int index, message.HSGameGuide.GameGuide.Guide.Builder builderForValue) {
        ensureGuideListIsMutable();
        guideList_.add(index, builderForValue.build());
        
        return this;
      }
      public Builder addAllGuideList(
          java.lang.Iterable<? extends message.HSGameGuide.GameGuide.Guide> values) {
        ensureGuideListIsMutable();
        super.addAll(values, guideList_);
        
        return this;
      }
      public Builder clearGuideList() {
        guideList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        
        return this;
      }
      public Builder removeGuideList(int index) {
        ensureGuideListIsMutable();
        guideList_.remove(index);
        
        return this;
      }
      
      // repeated .message.GameGuide.BattleLayout battleLayoutList = 2;
      private java.util.List<message.HSGameGuide.GameGuide.BattleLayout> battleLayoutList_ =
        java.util.Collections.emptyList();
      private void ensureBattleLayoutListIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          battleLayoutList_ = new java.util.ArrayList<message.HSGameGuide.GameGuide.BattleLayout>(battleLayoutList_);
          bitField0_ |= 0x00000002;
         }
      }
      
      public java.util.List<message.HSGameGuide.GameGuide.BattleLayout> getBattleLayoutListList() {
        return java.util.Collections.unmodifiableList(battleLayoutList_);
      }
      public int getBattleLayoutListCount() {
        return battleLayoutList_.size();
      }
      public message.HSGameGuide.GameGuide.BattleLayout getBattleLayoutList(int index) {
        return battleLayoutList_.get(index);
      }
      public Builder setBattleLayoutList(
          int index, message.HSGameGuide.GameGuide.BattleLayout value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBattleLayoutListIsMutable();
        battleLayoutList_.set(index, value);
        
        return this;
      }
      public Builder setBattleLayoutList(
          int index, message.HSGameGuide.GameGuide.BattleLayout.Builder builderForValue) {
        ensureBattleLayoutListIsMutable();
        battleLayoutList_.set(index, builderForValue.build());
        
        return this;
      }
      public Builder addBattleLayoutList(message.HSGameGuide.GameGuide.BattleLayout value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBattleLayoutListIsMutable();
        battleLayoutList_.add(value);
        
        return this;
      }
      public Builder addBattleLayoutList(
          int index, message.HSGameGuide.GameGuide.BattleLayout value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBattleLayoutListIsMutable();
        battleLayoutList_.add(index, value);
        
        return this;
      }
      public Builder addBattleLayoutList(
          message.HSGameGuide.GameGuide.BattleLayout.Builder builderForValue) {
        ensureBattleLayoutListIsMutable();
        battleLayoutList_.add(builderForValue.build());
        
        return this;
      }
      public Builder addBattleLayoutList(
          int index, message.HSGameGuide.GameGuide.BattleLayout.Builder builderForValue) {
        ensureBattleLayoutListIsMutable();
        battleLayoutList_.add(index, builderForValue.build());
        
        return this;
      }
      public Builder addAllBattleLayoutList(
          java.lang.Iterable<? extends message.HSGameGuide.GameGuide.BattleLayout> values) {
        ensureBattleLayoutListIsMutable();
        super.addAll(values, battleLayoutList_);
        
        return this;
      }
      public Builder clearBattleLayoutList() {
        battleLayoutList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        
        return this;
      }
      public Builder removeBattleLayoutList(int index) {
        ensureBattleLayoutListIsMutable();
        battleLayoutList_.remove(index);
        
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:message.GameGuide)
    }
    
    static {
      defaultInstance = new GameGuide(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:message.GameGuide)
  }
  
  
  static {
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
