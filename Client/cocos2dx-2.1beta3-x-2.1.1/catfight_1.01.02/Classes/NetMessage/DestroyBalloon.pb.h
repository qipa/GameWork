// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DestroyBalloon.proto

#ifndef PROTOBUF_DestroyBalloon_2eproto__INCLUDED
#define PROTOBUF_DestroyBalloon_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

namespace message {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_DestroyBalloon_2eproto();
void protobuf_AssignDesc_DestroyBalloon_2eproto();
void protobuf_ShutdownFile_DestroyBalloon_2eproto();

class DestroyBalloonRequest;
class DestroyBalloonRequest_DestroyBalloonInfo;
class DestroyBalloonResponse;

enum DestroyBalloonRequest_Type {
  DestroyBalloonRequest_Type_BALLOON_COLOR_Petrifaction = 0,
  DestroyBalloonRequest_Type_BALLOON_COLOR_Camouflage = 1,
  DestroyBalloonRequest_Type_BALLOON_COLOR_Normal = 2
};
bool DestroyBalloonRequest_Type_IsValid(int value);
const DestroyBalloonRequest_Type DestroyBalloonRequest_Type_Type_MIN = DestroyBalloonRequest_Type_BALLOON_COLOR_Petrifaction;
const DestroyBalloonRequest_Type DestroyBalloonRequest_Type_Type_MAX = DestroyBalloonRequest_Type_BALLOON_COLOR_Normal;
const int DestroyBalloonRequest_Type_Type_ARRAYSIZE = DestroyBalloonRequest_Type_Type_MAX + 1;

// ===================================================================

class DestroyBalloonRequest_DestroyBalloonInfo : public ::google::protobuf::MessageLite {
 public:
  DestroyBalloonRequest_DestroyBalloonInfo();
  virtual ~DestroyBalloonRequest_DestroyBalloonInfo();

  DestroyBalloonRequest_DestroyBalloonInfo(const DestroyBalloonRequest_DestroyBalloonInfo& from);

  inline DestroyBalloonRequest_DestroyBalloonInfo& operator=(const DestroyBalloonRequest_DestroyBalloonInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const DestroyBalloonRequest_DestroyBalloonInfo& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const DestroyBalloonRequest_DestroyBalloonInfo* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(DestroyBalloonRequest_DestroyBalloonInfo* other);

  // implements Message ----------------------------------------------

  DestroyBalloonRequest_DestroyBalloonInfo* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const DestroyBalloonRequest_DestroyBalloonInfo& from);
  void MergeFrom(const DestroyBalloonRequest_DestroyBalloonInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .message.DestroyBalloonRequest.Type type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::message::DestroyBalloonRequest_Type type() const;
  inline void set_type(::message::DestroyBalloonRequest_Type value);

  // required int32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:message.DestroyBalloonRequest.DestroyBalloonInfo)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_count();
  inline void clear_has_count();

  int type_;
  ::google::protobuf::int32 count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_DestroyBalloon_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_DestroyBalloon_2eproto();
  #endif
  friend void protobuf_AssignDesc_DestroyBalloon_2eproto();
  friend void protobuf_ShutdownFile_DestroyBalloon_2eproto();

  void InitAsDefaultInstance();
  static DestroyBalloonRequest_DestroyBalloonInfo* default_instance_;
};
// -------------------------------------------------------------------

class DestroyBalloonRequest : public ::google::protobuf::MessageLite {
 public:
  DestroyBalloonRequest();
  virtual ~DestroyBalloonRequest();

  DestroyBalloonRequest(const DestroyBalloonRequest& from);

  inline DestroyBalloonRequest& operator=(const DestroyBalloonRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const DestroyBalloonRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const DestroyBalloonRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(DestroyBalloonRequest* other);

  // implements Message ----------------------------------------------

  DestroyBalloonRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const DestroyBalloonRequest& from);
  void MergeFrom(const DestroyBalloonRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  typedef DestroyBalloonRequest_DestroyBalloonInfo DestroyBalloonInfo;

  typedef DestroyBalloonRequest_Type Type;
  static const Type BALLOON_COLOR_Petrifaction = DestroyBalloonRequest_Type_BALLOON_COLOR_Petrifaction;
  static const Type BALLOON_COLOR_Camouflage = DestroyBalloonRequest_Type_BALLOON_COLOR_Camouflage;
  static const Type BALLOON_COLOR_Normal = DestroyBalloonRequest_Type_BALLOON_COLOR_Normal;
  static inline bool Type_IsValid(int value) {
    return DestroyBalloonRequest_Type_IsValid(value);
  }
  static const Type Type_MIN =
    DestroyBalloonRequest_Type_Type_MIN;
  static const Type Type_MAX =
    DestroyBalloonRequest_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    DestroyBalloonRequest_Type_Type_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // required string dungoenId = 1;
  inline bool has_dungoenid() const;
  inline void clear_dungoenid();
  static const int kDungoenIdFieldNumber = 1;
  inline const ::std::string& dungoenid() const;
  inline void set_dungoenid(const ::std::string& value);
  inline void set_dungoenid(const char* value);
  inline void set_dungoenid(const char* value, size_t size);
  inline ::std::string* mutable_dungoenid();
  inline ::std::string* release_dungoenid();
  inline void set_allocated_dungoenid(::std::string* dungoenid);

  // repeated .message.DestroyBalloonRequest.DestroyBalloonInfo destroyBalloon = 2;
  inline int destroyballoon_size() const;
  inline void clear_destroyballoon();
  static const int kDestroyBalloonFieldNumber = 2;
  inline const ::message::DestroyBalloonRequest_DestroyBalloonInfo& destroyballoon(int index) const;
  inline ::message::DestroyBalloonRequest_DestroyBalloonInfo* mutable_destroyballoon(int index);
  inline ::message::DestroyBalloonRequest_DestroyBalloonInfo* add_destroyballoon();
  inline const ::google::protobuf::RepeatedPtrField< ::message::DestroyBalloonRequest_DestroyBalloonInfo >&
      destroyballoon() const;
  inline ::google::protobuf::RepeatedPtrField< ::message::DestroyBalloonRequest_DestroyBalloonInfo >*
      mutable_destroyballoon();

  // @@protoc_insertion_point(class_scope:message.DestroyBalloonRequest)
 private:
  inline void set_has_dungoenid();
  inline void clear_has_dungoenid();

  ::std::string* dungoenid_;
  ::google::protobuf::RepeatedPtrField< ::message::DestroyBalloonRequest_DestroyBalloonInfo > destroyballoon_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_DestroyBalloon_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_DestroyBalloon_2eproto();
  #endif
  friend void protobuf_AssignDesc_DestroyBalloon_2eproto();
  friend void protobuf_ShutdownFile_DestroyBalloon_2eproto();

  void InitAsDefaultInstance();
  static DestroyBalloonRequest* default_instance_;
};
// -------------------------------------------------------------------

class DestroyBalloonResponse : public ::google::protobuf::MessageLite {
 public:
  DestroyBalloonResponse();
  virtual ~DestroyBalloonResponse();

  DestroyBalloonResponse(const DestroyBalloonResponse& from);

  inline DestroyBalloonResponse& operator=(const DestroyBalloonResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const DestroyBalloonResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const DestroyBalloonResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(DestroyBalloonResponse* other);

  // implements Message ----------------------------------------------

  DestroyBalloonResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const DestroyBalloonResponse& from);
  void MergeFrom(const DestroyBalloonResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:message.DestroyBalloonResponse)
 private:


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_DestroyBalloon_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_DestroyBalloon_2eproto();
  #endif
  friend void protobuf_AssignDesc_DestroyBalloon_2eproto();
  friend void protobuf_ShutdownFile_DestroyBalloon_2eproto();

  void InitAsDefaultInstance();
  static DestroyBalloonResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// DestroyBalloonRequest_DestroyBalloonInfo

// required .message.DestroyBalloonRequest.Type type = 1;
inline bool DestroyBalloonRequest_DestroyBalloonInfo::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DestroyBalloonRequest_DestroyBalloonInfo::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DestroyBalloonRequest_DestroyBalloonInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DestroyBalloonRequest_DestroyBalloonInfo::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::message::DestroyBalloonRequest_Type DestroyBalloonRequest_DestroyBalloonInfo::type() const {
  return static_cast< ::message::DestroyBalloonRequest_Type >(type_);
}
inline void DestroyBalloonRequest_DestroyBalloonInfo::set_type(::message::DestroyBalloonRequest_Type value) {
  assert(::message::DestroyBalloonRequest_Type_IsValid(value));
  set_has_type();
  type_ = value;
}

// required int32 count = 2;
inline bool DestroyBalloonRequest_DestroyBalloonInfo::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DestroyBalloonRequest_DestroyBalloonInfo::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DestroyBalloonRequest_DestroyBalloonInfo::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DestroyBalloonRequest_DestroyBalloonInfo::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 DestroyBalloonRequest_DestroyBalloonInfo::count() const {
  return count_;
}
inline void DestroyBalloonRequest_DestroyBalloonInfo::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
}

// -------------------------------------------------------------------

// DestroyBalloonRequest

// required string dungoenId = 1;
inline bool DestroyBalloonRequest::has_dungoenid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DestroyBalloonRequest::set_has_dungoenid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DestroyBalloonRequest::clear_has_dungoenid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DestroyBalloonRequest::clear_dungoenid() {
  if (dungoenid_ != &::google::protobuf::internal::kEmptyString) {
    dungoenid_->clear();
  }
  clear_has_dungoenid();
}
inline const ::std::string& DestroyBalloonRequest::dungoenid() const {
  return *dungoenid_;
}
inline void DestroyBalloonRequest::set_dungoenid(const ::std::string& value) {
  set_has_dungoenid();
  if (dungoenid_ == &::google::protobuf::internal::kEmptyString) {
    dungoenid_ = new ::std::string;
  }
  dungoenid_->assign(value);
}
inline void DestroyBalloonRequest::set_dungoenid(const char* value) {
  set_has_dungoenid();
  if (dungoenid_ == &::google::protobuf::internal::kEmptyString) {
    dungoenid_ = new ::std::string;
  }
  dungoenid_->assign(value);
}
inline void DestroyBalloonRequest::set_dungoenid(const char* value, size_t size) {
  set_has_dungoenid();
  if (dungoenid_ == &::google::protobuf::internal::kEmptyString) {
    dungoenid_ = new ::std::string;
  }
  dungoenid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DestroyBalloonRequest::mutable_dungoenid() {
  set_has_dungoenid();
  if (dungoenid_ == &::google::protobuf::internal::kEmptyString) {
    dungoenid_ = new ::std::string;
  }
  return dungoenid_;
}
inline ::std::string* DestroyBalloonRequest::release_dungoenid() {
  clear_has_dungoenid();
  if (dungoenid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = dungoenid_;
    dungoenid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void DestroyBalloonRequest::set_allocated_dungoenid(::std::string* dungoenid) {
  if (dungoenid_ != &::google::protobuf::internal::kEmptyString) {
    delete dungoenid_;
  }
  if (dungoenid) {
    set_has_dungoenid();
    dungoenid_ = dungoenid;
  } else {
    clear_has_dungoenid();
    dungoenid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated .message.DestroyBalloonRequest.DestroyBalloonInfo destroyBalloon = 2;
inline int DestroyBalloonRequest::destroyballoon_size() const {
  return destroyballoon_.size();
}
inline void DestroyBalloonRequest::clear_destroyballoon() {
  destroyballoon_.Clear();
}
inline const ::message::DestroyBalloonRequest_DestroyBalloonInfo& DestroyBalloonRequest::destroyballoon(int index) const {
  return destroyballoon_.Get(index);
}
inline ::message::DestroyBalloonRequest_DestroyBalloonInfo* DestroyBalloonRequest::mutable_destroyballoon(int index) {
  return destroyballoon_.Mutable(index);
}
inline ::message::DestroyBalloonRequest_DestroyBalloonInfo* DestroyBalloonRequest::add_destroyballoon() {
  return destroyballoon_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::message::DestroyBalloonRequest_DestroyBalloonInfo >&
DestroyBalloonRequest::destroyballoon() const {
  return destroyballoon_;
}
inline ::google::protobuf::RepeatedPtrField< ::message::DestroyBalloonRequest_DestroyBalloonInfo >*
DestroyBalloonRequest::mutable_destroyballoon() {
  return &destroyballoon_;
}

// -------------------------------------------------------------------

// DestroyBalloonResponse


// @@protoc_insertion_point(namespace_scope)

}  // namespace message

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_DestroyBalloon_2eproto__INCLUDED
