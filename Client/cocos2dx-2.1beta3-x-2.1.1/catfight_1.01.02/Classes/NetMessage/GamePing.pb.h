// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GamePing.proto

#ifndef PROTOBUF_GamePing_2eproto__INCLUDED
#define PROTOBUF_GamePing_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "Heartbeat.pb.h"
// @@protoc_insertion_point(includes)

namespace message {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_GamePing_2eproto();
void protobuf_AssignDesc_GamePing_2eproto();
void protobuf_ShutdownFile_GamePing_2eproto();

class GamePingRequest;
class GamePingResponse;

// ===================================================================

class GamePingRequest : public ::google::protobuf::MessageLite {
 public:
  GamePingRequest();
  virtual ~GamePingRequest();

  GamePingRequest(const GamePingRequest& from);

  inline GamePingRequest& operator=(const GamePingRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const GamePingRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GamePingRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GamePingRequest* other);

  // implements Message ----------------------------------------------

  GamePingRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GamePingRequest& from);
  void MergeFrom(const GamePingRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .message.HeartbeatRequest gamePingRequest = 1;
  inline bool has_gamepingrequest() const;
  inline void clear_gamepingrequest();
  static const int kGamePingRequestFieldNumber = 1;
  inline const ::message::HeartbeatRequest& gamepingrequest() const;
  inline ::message::HeartbeatRequest* mutable_gamepingrequest();
  inline ::message::HeartbeatRequest* release_gamepingrequest();
  inline void set_allocated_gamepingrequest(::message::HeartbeatRequest* gamepingrequest);

  // @@protoc_insertion_point(class_scope:message.GamePingRequest)
 private:
  inline void set_has_gamepingrequest();
  inline void clear_has_gamepingrequest();

  ::message::HeartbeatRequest* gamepingrequest_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_GamePing_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_GamePing_2eproto();
  #endif
  friend void protobuf_AssignDesc_GamePing_2eproto();
  friend void protobuf_ShutdownFile_GamePing_2eproto();

  void InitAsDefaultInstance();
  static GamePingRequest* default_instance_;
};
// -------------------------------------------------------------------

class GamePingResponse : public ::google::protobuf::MessageLite {
 public:
  GamePingResponse();
  virtual ~GamePingResponse();

  GamePingResponse(const GamePingResponse& from);

  inline GamePingResponse& operator=(const GamePingResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const GamePingResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GamePingResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GamePingResponse* other);

  // implements Message ----------------------------------------------

  GamePingResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GamePingResponse& from);
  void MergeFrom(const GamePingResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .message.HeartbeatResponse gamePingResponse = 1;
  inline bool has_gamepingresponse() const;
  inline void clear_gamepingresponse();
  static const int kGamePingResponseFieldNumber = 1;
  inline const ::message::HeartbeatResponse& gamepingresponse() const;
  inline ::message::HeartbeatResponse* mutable_gamepingresponse();
  inline ::message::HeartbeatResponse* release_gamepingresponse();
  inline void set_allocated_gamepingresponse(::message::HeartbeatResponse* gamepingresponse);

  // @@protoc_insertion_point(class_scope:message.GamePingResponse)
 private:
  inline void set_has_gamepingresponse();
  inline void clear_has_gamepingresponse();

  ::message::HeartbeatResponse* gamepingresponse_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_GamePing_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_GamePing_2eproto();
  #endif
  friend void protobuf_AssignDesc_GamePing_2eproto();
  friend void protobuf_ShutdownFile_GamePing_2eproto();

  void InitAsDefaultInstance();
  static GamePingResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// GamePingRequest

// required .message.HeartbeatRequest gamePingRequest = 1;
inline bool GamePingRequest::has_gamepingrequest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GamePingRequest::set_has_gamepingrequest() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GamePingRequest::clear_has_gamepingrequest() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GamePingRequest::clear_gamepingrequest() {
  if (gamepingrequest_ != NULL) gamepingrequest_->::message::HeartbeatRequest::Clear();
  clear_has_gamepingrequest();
}
inline const ::message::HeartbeatRequest& GamePingRequest::gamepingrequest() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return gamepingrequest_ != NULL ? *gamepingrequest_ : *default_instance().gamepingrequest_;
#else
  return gamepingrequest_ != NULL ? *gamepingrequest_ : *default_instance_->gamepingrequest_;
#endif
}
inline ::message::HeartbeatRequest* GamePingRequest::mutable_gamepingrequest() {
  set_has_gamepingrequest();
  if (gamepingrequest_ == NULL) gamepingrequest_ = new ::message::HeartbeatRequest;
  return gamepingrequest_;
}
inline ::message::HeartbeatRequest* GamePingRequest::release_gamepingrequest() {
  clear_has_gamepingrequest();
  ::message::HeartbeatRequest* temp = gamepingrequest_;
  gamepingrequest_ = NULL;
  return temp;
}
inline void GamePingRequest::set_allocated_gamepingrequest(::message::HeartbeatRequest* gamepingrequest) {
  delete gamepingrequest_;
  gamepingrequest_ = gamepingrequest;
  if (gamepingrequest) {
    set_has_gamepingrequest();
  } else {
    clear_has_gamepingrequest();
  }
}

// -------------------------------------------------------------------

// GamePingResponse

// required .message.HeartbeatResponse gamePingResponse = 1;
inline bool GamePingResponse::has_gamepingresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GamePingResponse::set_has_gamepingresponse() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GamePingResponse::clear_has_gamepingresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GamePingResponse::clear_gamepingresponse() {
  if (gamepingresponse_ != NULL) gamepingresponse_->::message::HeartbeatResponse::Clear();
  clear_has_gamepingresponse();
}
inline const ::message::HeartbeatResponse& GamePingResponse::gamepingresponse() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return gamepingresponse_ != NULL ? *gamepingresponse_ : *default_instance().gamepingresponse_;
#else
  return gamepingresponse_ != NULL ? *gamepingresponse_ : *default_instance_->gamepingresponse_;
#endif
}
inline ::message::HeartbeatResponse* GamePingResponse::mutable_gamepingresponse() {
  set_has_gamepingresponse();
  if (gamepingresponse_ == NULL) gamepingresponse_ = new ::message::HeartbeatResponse;
  return gamepingresponse_;
}
inline ::message::HeartbeatResponse* GamePingResponse::release_gamepingresponse() {
  clear_has_gamepingresponse();
  ::message::HeartbeatResponse* temp = gamepingresponse_;
  gamepingresponse_ = NULL;
  return temp;
}
inline void GamePingResponse::set_allocated_gamepingresponse(::message::HeartbeatResponse* gamepingresponse) {
  delete gamepingresponse_;
  gamepingresponse_ = gamepingresponse;
  if (gamepingresponse) {
    set_has_gamepingresponse();
  } else {
    clear_has_gamepingresponse();
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace message

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_GamePing_2eproto__INCLUDED
