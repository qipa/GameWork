// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Heartbeat.proto

#ifndef PROTOBUF_Heartbeat_2eproto__INCLUDED
#define PROTOBUF_Heartbeat_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

namespace message {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Heartbeat_2eproto();
void protobuf_AssignDesc_Heartbeat_2eproto();
void protobuf_ShutdownFile_Heartbeat_2eproto();

class HeartbeatRequest;
class HeartbeatResponse;

enum HeartbeatResponse_ResponseStatus {
  HeartbeatResponse_ResponseStatus_OK = 1
};
bool HeartbeatResponse_ResponseStatus_IsValid(int value);
const HeartbeatResponse_ResponseStatus HeartbeatResponse_ResponseStatus_ResponseStatus_MIN = HeartbeatResponse_ResponseStatus_OK;
const HeartbeatResponse_ResponseStatus HeartbeatResponse_ResponseStatus_ResponseStatus_MAX = HeartbeatResponse_ResponseStatus_OK;
const int HeartbeatResponse_ResponseStatus_ResponseStatus_ARRAYSIZE = HeartbeatResponse_ResponseStatus_ResponseStatus_MAX + 1;

// ===================================================================

class HeartbeatRequest : public ::google::protobuf::MessageLite {
 public:
  HeartbeatRequest();
  virtual ~HeartbeatRequest();

  HeartbeatRequest(const HeartbeatRequest& from);

  inline HeartbeatRequest& operator=(const HeartbeatRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const HeartbeatRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const HeartbeatRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(HeartbeatRequest* other);

  // implements Message ----------------------------------------------

  HeartbeatRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const HeartbeatRequest& from);
  void MergeFrom(const HeartbeatRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:message.HeartbeatRequest)
 private:


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_Heartbeat_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_Heartbeat_2eproto();
  #endif
  friend void protobuf_AssignDesc_Heartbeat_2eproto();
  friend void protobuf_ShutdownFile_Heartbeat_2eproto();

  void InitAsDefaultInstance();
  static HeartbeatRequest* default_instance_;
};
// -------------------------------------------------------------------

class HeartbeatResponse : public ::google::protobuf::MessageLite {
 public:
  HeartbeatResponse();
  virtual ~HeartbeatResponse();

  HeartbeatResponse(const HeartbeatResponse& from);

  inline HeartbeatResponse& operator=(const HeartbeatResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const HeartbeatResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const HeartbeatResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(HeartbeatResponse* other);

  // implements Message ----------------------------------------------

  HeartbeatResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const HeartbeatResponse& from);
  void MergeFrom(const HeartbeatResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  typedef HeartbeatResponse_ResponseStatus ResponseStatus;
  static const ResponseStatus OK = HeartbeatResponse_ResponseStatus_OK;
  static inline bool ResponseStatus_IsValid(int value) {
    return HeartbeatResponse_ResponseStatus_IsValid(value);
  }
  static const ResponseStatus ResponseStatus_MIN =
    HeartbeatResponse_ResponseStatus_ResponseStatus_MIN;
  static const ResponseStatus ResponseStatus_MAX =
    HeartbeatResponse_ResponseStatus_ResponseStatus_MAX;
  static const int ResponseStatus_ARRAYSIZE =
    HeartbeatResponse_ResponseStatus_ResponseStatus_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // required .message.HeartbeatResponse.ResponseStatus status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::message::HeartbeatResponse_ResponseStatus status() const;
  inline void set_status(::message::HeartbeatResponse_ResponseStatus value);

  // @@protoc_insertion_point(class_scope:message.HeartbeatResponse)
 private:
  inline void set_has_status();
  inline void clear_has_status();

  int status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_Heartbeat_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_Heartbeat_2eproto();
  #endif
  friend void protobuf_AssignDesc_Heartbeat_2eproto();
  friend void protobuf_ShutdownFile_Heartbeat_2eproto();

  void InitAsDefaultInstance();
  static HeartbeatResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// HeartbeatRequest

// -------------------------------------------------------------------

// HeartbeatResponse

// required .message.HeartbeatResponse.ResponseStatus status = 1;
inline bool HeartbeatResponse::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HeartbeatResponse::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HeartbeatResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HeartbeatResponse::clear_status() {
  status_ = 1;
  clear_has_status();
}
inline ::message::HeartbeatResponse_ResponseStatus HeartbeatResponse::status() const {
  return static_cast< ::message::HeartbeatResponse_ResponseStatus >(status_);
}
inline void HeartbeatResponse::set_status(::message::HeartbeatResponse_ResponseStatus value) {
  assert(::message::HeartbeatResponse_ResponseStatus_IsValid(value));
  set_has_status();
  status_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace message

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Heartbeat_2eproto__INCLUDED
