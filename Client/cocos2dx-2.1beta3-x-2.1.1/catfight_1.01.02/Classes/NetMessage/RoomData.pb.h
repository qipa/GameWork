// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RoomData.proto

#ifndef PROTOBUF_RoomData_2eproto__INCLUDED
#define PROTOBUF_RoomData_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

namespace message {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_RoomData_2eproto();
void protobuf_AssignDesc_RoomData_2eproto();
void protobuf_ShutdownFile_RoomData_2eproto();

class RoomDataRequest;
class RoomDataResponse;
class RoomDataResponse_Room;

// ===================================================================

class RoomDataRequest : public ::google::protobuf::MessageLite {
 public:
  RoomDataRequest();
  virtual ~RoomDataRequest();

  RoomDataRequest(const RoomDataRequest& from);

  inline RoomDataRequest& operator=(const RoomDataRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const RoomDataRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const RoomDataRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(RoomDataRequest* other);

  // implements Message ----------------------------------------------

  RoomDataRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const RoomDataRequest& from);
  void MergeFrom(const RoomDataRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:message.RoomDataRequest)
 private:


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_RoomData_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_RoomData_2eproto();
  #endif
  friend void protobuf_AssignDesc_RoomData_2eproto();
  friend void protobuf_ShutdownFile_RoomData_2eproto();

  void InitAsDefaultInstance();
  static RoomDataRequest* default_instance_;
};
// -------------------------------------------------------------------

class RoomDataResponse_Room : public ::google::protobuf::MessageLite {
 public:
  RoomDataResponse_Room();
  virtual ~RoomDataResponse_Room();

  RoomDataResponse_Room(const RoomDataResponse_Room& from);

  inline RoomDataResponse_Room& operator=(const RoomDataResponse_Room& from) {
    CopyFrom(from);
    return *this;
  }

  static const RoomDataResponse_Room& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const RoomDataResponse_Room* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(RoomDataResponse_Room* other);

  // implements Message ----------------------------------------------

  RoomDataResponse_Room* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const RoomDataResponse_Room& from);
  void MergeFrom(const RoomDataResponse_Room& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 playerCount = 2;
  inline bool has_playercount() const;
  inline void clear_playercount();
  static const int kPlayerCountFieldNumber = 2;
  inline ::google::protobuf::uint32 playercount() const;
  inline void set_playercount(::google::protobuf::uint32 value);

  // required int32 stakeGold = 3;
  inline bool has_stakegold() const;
  inline void clear_stakegold();
  static const int kStakeGoldFieldNumber = 3;
  inline ::google::protobuf::int32 stakegold() const;
  inline void set_stakegold(::google::protobuf::int32 value);

  // required int32 sweepStakeGold = 4;
  inline bool has_sweepstakegold() const;
  inline void clear_sweepstakegold();
  static const int kSweepStakeGoldFieldNumber = 4;
  inline ::google::protobuf::int32 sweepstakegold() const;
  inline void set_sweepstakegold(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:message.RoomDataResponse.Room)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_playercount();
  inline void clear_has_playercount();
  inline void set_has_stakegold();
  inline void clear_has_stakegold();
  inline void set_has_sweepstakegold();
  inline void clear_has_sweepstakegold();

  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 playercount_;
  ::google::protobuf::int32 stakegold_;
  ::google::protobuf::int32 sweepstakegold_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_RoomData_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_RoomData_2eproto();
  #endif
  friend void protobuf_AssignDesc_RoomData_2eproto();
  friend void protobuf_ShutdownFile_RoomData_2eproto();

  void InitAsDefaultInstance();
  static RoomDataResponse_Room* default_instance_;
};
// -------------------------------------------------------------------

class RoomDataResponse : public ::google::protobuf::MessageLite {
 public:
  RoomDataResponse();
  virtual ~RoomDataResponse();

  RoomDataResponse(const RoomDataResponse& from);

  inline RoomDataResponse& operator=(const RoomDataResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const RoomDataResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const RoomDataResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(RoomDataResponse* other);

  // implements Message ----------------------------------------------

  RoomDataResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const RoomDataResponse& from);
  void MergeFrom(const RoomDataResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  typedef RoomDataResponse_Room Room;

  // accessors -------------------------------------------------------

  // repeated .message.RoomDataResponse.Room roomList = 1;
  inline int roomlist_size() const;
  inline void clear_roomlist();
  static const int kRoomListFieldNumber = 1;
  inline const ::message::RoomDataResponse_Room& roomlist(int index) const;
  inline ::message::RoomDataResponse_Room* mutable_roomlist(int index);
  inline ::message::RoomDataResponse_Room* add_roomlist();
  inline const ::google::protobuf::RepeatedPtrField< ::message::RoomDataResponse_Room >&
      roomlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::message::RoomDataResponse_Room >*
      mutable_roomlist();

  // @@protoc_insertion_point(class_scope:message.RoomDataResponse)
 private:

  ::google::protobuf::RepeatedPtrField< ::message::RoomDataResponse_Room > roomlist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_RoomData_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_RoomData_2eproto();
  #endif
  friend void protobuf_AssignDesc_RoomData_2eproto();
  friend void protobuf_ShutdownFile_RoomData_2eproto();

  void InitAsDefaultInstance();
  static RoomDataResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// RoomDataRequest

// -------------------------------------------------------------------

// RoomDataResponse_Room

// required uint32 id = 1;
inline bool RoomDataResponse_Room::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoomDataResponse_Room::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoomDataResponse_Room::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoomDataResponse_Room::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 RoomDataResponse_Room::id() const {
  return id_;
}
inline void RoomDataResponse_Room::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required uint32 playerCount = 2;
inline bool RoomDataResponse_Room::has_playercount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoomDataResponse_Room::set_has_playercount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoomDataResponse_Room::clear_has_playercount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoomDataResponse_Room::clear_playercount() {
  playercount_ = 0u;
  clear_has_playercount();
}
inline ::google::protobuf::uint32 RoomDataResponse_Room::playercount() const {
  return playercount_;
}
inline void RoomDataResponse_Room::set_playercount(::google::protobuf::uint32 value) {
  set_has_playercount();
  playercount_ = value;
}

// required int32 stakeGold = 3;
inline bool RoomDataResponse_Room::has_stakegold() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RoomDataResponse_Room::set_has_stakegold() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RoomDataResponse_Room::clear_has_stakegold() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RoomDataResponse_Room::clear_stakegold() {
  stakegold_ = 0;
  clear_has_stakegold();
}
inline ::google::protobuf::int32 RoomDataResponse_Room::stakegold() const {
  return stakegold_;
}
inline void RoomDataResponse_Room::set_stakegold(::google::protobuf::int32 value) {
  set_has_stakegold();
  stakegold_ = value;
}

// required int32 sweepStakeGold = 4;
inline bool RoomDataResponse_Room::has_sweepstakegold() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RoomDataResponse_Room::set_has_sweepstakegold() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RoomDataResponse_Room::clear_has_sweepstakegold() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RoomDataResponse_Room::clear_sweepstakegold() {
  sweepstakegold_ = 0;
  clear_has_sweepstakegold();
}
inline ::google::protobuf::int32 RoomDataResponse_Room::sweepstakegold() const {
  return sweepstakegold_;
}
inline void RoomDataResponse_Room::set_sweepstakegold(::google::protobuf::int32 value) {
  set_has_sweepstakegold();
  sweepstakegold_ = value;
}

// -------------------------------------------------------------------

// RoomDataResponse

// repeated .message.RoomDataResponse.Room roomList = 1;
inline int RoomDataResponse::roomlist_size() const {
  return roomlist_.size();
}
inline void RoomDataResponse::clear_roomlist() {
  roomlist_.Clear();
}
inline const ::message::RoomDataResponse_Room& RoomDataResponse::roomlist(int index) const {
  return roomlist_.Get(index);
}
inline ::message::RoomDataResponse_Room* RoomDataResponse::mutable_roomlist(int index) {
  return roomlist_.Mutable(index);
}
inline ::message::RoomDataResponse_Room* RoomDataResponse::add_roomlist() {
  return roomlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::message::RoomDataResponse_Room >&
RoomDataResponse::roomlist() const {
  return roomlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::message::RoomDataResponse_Room >*
RoomDataResponse::mutable_roomlist() {
  return &roomlist_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace message

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_RoomData_2eproto__INCLUDED
