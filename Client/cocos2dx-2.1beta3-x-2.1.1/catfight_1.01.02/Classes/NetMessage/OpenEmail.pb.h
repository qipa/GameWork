// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: OpenEmail.proto

#ifndef PROTOBUF_OpenEmail_2eproto__INCLUDED
#define PROTOBUF_OpenEmail_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

namespace message {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_OpenEmail_2eproto();
void protobuf_AssignDesc_OpenEmail_2eproto();
void protobuf_ShutdownFile_OpenEmail_2eproto();

class OpenEmailRequest;
class OpenEmailResponse;

enum OpenEmailResponse_OpenEmailState {
  OpenEmailResponse_OpenEmailState_Succeed = 0,
  OpenEmailResponse_OpenEmailState_Failed = 1
};
bool OpenEmailResponse_OpenEmailState_IsValid(int value);
const OpenEmailResponse_OpenEmailState OpenEmailResponse_OpenEmailState_OpenEmailState_MIN = OpenEmailResponse_OpenEmailState_Succeed;
const OpenEmailResponse_OpenEmailState OpenEmailResponse_OpenEmailState_OpenEmailState_MAX = OpenEmailResponse_OpenEmailState_Failed;
const int OpenEmailResponse_OpenEmailState_OpenEmailState_ARRAYSIZE = OpenEmailResponse_OpenEmailState_OpenEmailState_MAX + 1;

// ===================================================================

class OpenEmailRequest : public ::google::protobuf::MessageLite {
 public:
  OpenEmailRequest();
  virtual ~OpenEmailRequest();

  OpenEmailRequest(const OpenEmailRequest& from);

  inline OpenEmailRequest& operator=(const OpenEmailRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const OpenEmailRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const OpenEmailRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(OpenEmailRequest* other);

  // implements Message ----------------------------------------------

  OpenEmailRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const OpenEmailRequest& from);
  void MergeFrom(const OpenEmailRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 email_ID = 1;
  inline int email_id_size() const;
  inline void clear_email_id();
  static const int kEmailIDFieldNumber = 1;
  inline ::google::protobuf::uint64 email_id(int index) const;
  inline void set_email_id(int index, ::google::protobuf::uint64 value);
  inline void add_email_id(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      email_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_email_id();

  // @@protoc_insertion_point(class_scope:message.OpenEmailRequest)
 private:

  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > email_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_OpenEmail_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_OpenEmail_2eproto();
  #endif
  friend void protobuf_AssignDesc_OpenEmail_2eproto();
  friend void protobuf_ShutdownFile_OpenEmail_2eproto();

  void InitAsDefaultInstance();
  static OpenEmailRequest* default_instance_;
};
// -------------------------------------------------------------------

class OpenEmailResponse : public ::google::protobuf::MessageLite {
 public:
  OpenEmailResponse();
  virtual ~OpenEmailResponse();

  OpenEmailResponse(const OpenEmailResponse& from);

  inline OpenEmailResponse& operator=(const OpenEmailResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const OpenEmailResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const OpenEmailResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(OpenEmailResponse* other);

  // implements Message ----------------------------------------------

  OpenEmailResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const OpenEmailResponse& from);
  void MergeFrom(const OpenEmailResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  typedef OpenEmailResponse_OpenEmailState OpenEmailState;
  static const OpenEmailState Succeed = OpenEmailResponse_OpenEmailState_Succeed;
  static const OpenEmailState Failed = OpenEmailResponse_OpenEmailState_Failed;
  static inline bool OpenEmailState_IsValid(int value) {
    return OpenEmailResponse_OpenEmailState_IsValid(value);
  }
  static const OpenEmailState OpenEmailState_MIN =
    OpenEmailResponse_OpenEmailState_OpenEmailState_MIN;
  static const OpenEmailState OpenEmailState_MAX =
    OpenEmailResponse_OpenEmailState_OpenEmailState_MAX;
  static const int OpenEmailState_ARRAYSIZE =
    OpenEmailResponse_OpenEmailState_OpenEmailState_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // optional int32 gold = 1;
  inline bool has_gold() const;
  inline void clear_gold();
  static const int kGoldFieldNumber = 1;
  inline ::google::protobuf::int32 gold() const;
  inline void set_gold(::google::protobuf::int32 value);

  // required .message.OpenEmailResponse.OpenEmailState state = 2;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 2;
  inline ::message::OpenEmailResponse_OpenEmailState state() const;
  inline void set_state(::message::OpenEmailResponse_OpenEmailState value);

  // @@protoc_insertion_point(class_scope:message.OpenEmailResponse)
 private:
  inline void set_has_gold();
  inline void clear_has_gold();
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::int32 gold_;
  int state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_OpenEmail_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_OpenEmail_2eproto();
  #endif
  friend void protobuf_AssignDesc_OpenEmail_2eproto();
  friend void protobuf_ShutdownFile_OpenEmail_2eproto();

  void InitAsDefaultInstance();
  static OpenEmailResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// OpenEmailRequest

// repeated uint64 email_ID = 1;
inline int OpenEmailRequest::email_id_size() const {
  return email_id_.size();
}
inline void OpenEmailRequest::clear_email_id() {
  email_id_.Clear();
}
inline ::google::protobuf::uint64 OpenEmailRequest::email_id(int index) const {
  return email_id_.Get(index);
}
inline void OpenEmailRequest::set_email_id(int index, ::google::protobuf::uint64 value) {
  email_id_.Set(index, value);
}
inline void OpenEmailRequest::add_email_id(::google::protobuf::uint64 value) {
  email_id_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
OpenEmailRequest::email_id() const {
  return email_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
OpenEmailRequest::mutable_email_id() {
  return &email_id_;
}

// -------------------------------------------------------------------

// OpenEmailResponse

// optional int32 gold = 1;
inline bool OpenEmailResponse::has_gold() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OpenEmailResponse::set_has_gold() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OpenEmailResponse::clear_has_gold() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OpenEmailResponse::clear_gold() {
  gold_ = 0;
  clear_has_gold();
}
inline ::google::protobuf::int32 OpenEmailResponse::gold() const {
  return gold_;
}
inline void OpenEmailResponse::set_gold(::google::protobuf::int32 value) {
  set_has_gold();
  gold_ = value;
}

// required .message.OpenEmailResponse.OpenEmailState state = 2;
inline bool OpenEmailResponse::has_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OpenEmailResponse::set_has_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OpenEmailResponse::clear_has_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OpenEmailResponse::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::message::OpenEmailResponse_OpenEmailState OpenEmailResponse::state() const {
  return static_cast< ::message::OpenEmailResponse_OpenEmailState >(state_);
}
inline void OpenEmailResponse::set_state(::message::OpenEmailResponse_OpenEmailState value) {
  assert(::message::OpenEmailResponse_OpenEmailState_IsValid(value));
  set_has_state();
  state_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace message

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_OpenEmail_2eproto__INCLUDED
