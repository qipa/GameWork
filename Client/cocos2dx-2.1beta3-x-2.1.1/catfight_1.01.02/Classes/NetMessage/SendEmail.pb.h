// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SendEmail.proto

#ifndef PROTOBUF_SendEmail_2eproto__INCLUDED
#define PROTOBUF_SendEmail_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

namespace message {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_SendEmail_2eproto();
void protobuf_AssignDesc_SendEmail_2eproto();
void protobuf_ShutdownFile_SendEmail_2eproto();

class SendEmailRequest;
class SendEmailResponse;

enum SendEmailResponse_SendEmailStatus {
  SendEmailResponse_SendEmailStatus_Success = 0,
  SendEmailResponse_SendEmailStatus_Fail = 1
};
bool SendEmailResponse_SendEmailStatus_IsValid(int value);
const SendEmailResponse_SendEmailStatus SendEmailResponse_SendEmailStatus_SendEmailStatus_MIN = SendEmailResponse_SendEmailStatus_Success;
const SendEmailResponse_SendEmailStatus SendEmailResponse_SendEmailStatus_SendEmailStatus_MAX = SendEmailResponse_SendEmailStatus_Fail;
const int SendEmailResponse_SendEmailStatus_SendEmailStatus_ARRAYSIZE = SendEmailResponse_SendEmailStatus_SendEmailStatus_MAX + 1;

// ===================================================================

class SendEmailRequest : public ::google::protobuf::MessageLite {
 public:
  SendEmailRequest();
  virtual ~SendEmailRequest();

  SendEmailRequest(const SendEmailRequest& from);

  inline SendEmailRequest& operator=(const SendEmailRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const SendEmailRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const SendEmailRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(SendEmailRequest* other);

  // implements Message ----------------------------------------------

  SendEmailRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const SendEmailRequest& from);
  void MergeFrom(const SendEmailRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string game_UUID = 1;
  inline bool has_game_uuid() const;
  inline void clear_game_uuid();
  static const int kGameUUIDFieldNumber = 1;
  inline const ::std::string& game_uuid() const;
  inline void set_game_uuid(const ::std::string& value);
  inline void set_game_uuid(const char* value);
  inline void set_game_uuid(const char* value, size_t size);
  inline ::std::string* mutable_game_uuid();
  inline ::std::string* release_game_uuid();
  inline void set_allocated_game_uuid(::std::string* game_uuid);

  // @@protoc_insertion_point(class_scope:message.SendEmailRequest)
 private:
  inline void set_has_game_uuid();
  inline void clear_has_game_uuid();

  ::std::string* game_uuid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_SendEmail_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_SendEmail_2eproto();
  #endif
  friend void protobuf_AssignDesc_SendEmail_2eproto();
  friend void protobuf_ShutdownFile_SendEmail_2eproto();

  void InitAsDefaultInstance();
  static SendEmailRequest* default_instance_;
};
// -------------------------------------------------------------------

class SendEmailResponse : public ::google::protobuf::MessageLite {
 public:
  SendEmailResponse();
  virtual ~SendEmailResponse();

  SendEmailResponse(const SendEmailResponse& from);

  inline SendEmailResponse& operator=(const SendEmailResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const SendEmailResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const SendEmailResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(SendEmailResponse* other);

  // implements Message ----------------------------------------------

  SendEmailResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const SendEmailResponse& from);
  void MergeFrom(const SendEmailResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  typedef SendEmailResponse_SendEmailStatus SendEmailStatus;
  static const SendEmailStatus Success = SendEmailResponse_SendEmailStatus_Success;
  static const SendEmailStatus Fail = SendEmailResponse_SendEmailStatus_Fail;
  static inline bool SendEmailStatus_IsValid(int value) {
    return SendEmailResponse_SendEmailStatus_IsValid(value);
  }
  static const SendEmailStatus SendEmailStatus_MIN =
    SendEmailResponse_SendEmailStatus_SendEmailStatus_MIN;
  static const SendEmailStatus SendEmailStatus_MAX =
    SendEmailResponse_SendEmailStatus_SendEmailStatus_MAX;
  static const int SendEmailStatus_ARRAYSIZE =
    SendEmailResponse_SendEmailStatus_SendEmailStatus_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // required .message.SendEmailResponse.SendEmailStatus status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::message::SendEmailResponse_SendEmailStatus status() const;
  inline void set_status(::message::SendEmailResponse_SendEmailStatus value);

  // @@protoc_insertion_point(class_scope:message.SendEmailResponse)
 private:
  inline void set_has_status();
  inline void clear_has_status();

  int status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_SendEmail_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_SendEmail_2eproto();
  #endif
  friend void protobuf_AssignDesc_SendEmail_2eproto();
  friend void protobuf_ShutdownFile_SendEmail_2eproto();

  void InitAsDefaultInstance();
  static SendEmailResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// SendEmailRequest

// required string game_UUID = 1;
inline bool SendEmailRequest::has_game_uuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SendEmailRequest::set_has_game_uuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SendEmailRequest::clear_has_game_uuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SendEmailRequest::clear_game_uuid() {
  if (game_uuid_ != &::google::protobuf::internal::kEmptyString) {
    game_uuid_->clear();
  }
  clear_has_game_uuid();
}
inline const ::std::string& SendEmailRequest::game_uuid() const {
  return *game_uuid_;
}
inline void SendEmailRequest::set_game_uuid(const ::std::string& value) {
  set_has_game_uuid();
  if (game_uuid_ == &::google::protobuf::internal::kEmptyString) {
    game_uuid_ = new ::std::string;
  }
  game_uuid_->assign(value);
}
inline void SendEmailRequest::set_game_uuid(const char* value) {
  set_has_game_uuid();
  if (game_uuid_ == &::google::protobuf::internal::kEmptyString) {
    game_uuid_ = new ::std::string;
  }
  game_uuid_->assign(value);
}
inline void SendEmailRequest::set_game_uuid(const char* value, size_t size) {
  set_has_game_uuid();
  if (game_uuid_ == &::google::protobuf::internal::kEmptyString) {
    game_uuid_ = new ::std::string;
  }
  game_uuid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SendEmailRequest::mutable_game_uuid() {
  set_has_game_uuid();
  if (game_uuid_ == &::google::protobuf::internal::kEmptyString) {
    game_uuid_ = new ::std::string;
  }
  return game_uuid_;
}
inline ::std::string* SendEmailRequest::release_game_uuid() {
  clear_has_game_uuid();
  if (game_uuid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = game_uuid_;
    game_uuid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SendEmailRequest::set_allocated_game_uuid(::std::string* game_uuid) {
  if (game_uuid_ != &::google::protobuf::internal::kEmptyString) {
    delete game_uuid_;
  }
  if (game_uuid) {
    set_has_game_uuid();
    game_uuid_ = game_uuid;
  } else {
    clear_has_game_uuid();
    game_uuid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// SendEmailResponse

// required .message.SendEmailResponse.SendEmailStatus status = 1;
inline bool SendEmailResponse::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SendEmailResponse::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SendEmailResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SendEmailResponse::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::message::SendEmailResponse_SendEmailStatus SendEmailResponse::status() const {
  return static_cast< ::message::SendEmailResponse_SendEmailStatus >(status_);
}
inline void SendEmailResponse::set_status(::message::SendEmailResponse_SendEmailStatus value) {
  assert(::message::SendEmailResponse_SendEmailStatus_IsValid(value));
  set_has_status();
  status_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace message

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_SendEmail_2eproto__INCLUDED
