// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Email.proto

#ifndef PROTOBUF_Email_2eproto__INCLUDED
#define PROTOBUF_Email_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

namespace message {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Email_2eproto();
void protobuf_AssignDesc_Email_2eproto();
void protobuf_ShutdownFile_Email_2eproto();

class EmailRequest;
class EmailResponse;
class EmailResponse_EmailInfo;

// ===================================================================

class EmailRequest : public ::google::protobuf::MessageLite {
 public:
  EmailRequest();
  virtual ~EmailRequest();

  EmailRequest(const EmailRequest& from);

  inline EmailRequest& operator=(const EmailRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const EmailRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const EmailRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(EmailRequest* other);

  // implements Message ----------------------------------------------

  EmailRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const EmailRequest& from);
  void MergeFrom(const EmailRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:message.EmailRequest)
 private:


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_Email_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_Email_2eproto();
  #endif
  friend void protobuf_AssignDesc_Email_2eproto();
  friend void protobuf_ShutdownFile_Email_2eproto();

  void InitAsDefaultInstance();
  static EmailRequest* default_instance_;
};
// -------------------------------------------------------------------

class EmailResponse_EmailInfo : public ::google::protobuf::MessageLite {
 public:
  EmailResponse_EmailInfo();
  virtual ~EmailResponse_EmailInfo();

  EmailResponse_EmailInfo(const EmailResponse_EmailInfo& from);

  inline EmailResponse_EmailInfo& operator=(const EmailResponse_EmailInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const EmailResponse_EmailInfo& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const EmailResponse_EmailInfo* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(EmailResponse_EmailInfo* other);

  // implements Message ----------------------------------------------

  EmailResponse_EmailInfo* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const EmailResponse_EmailInfo& from);
  void MergeFrom(const EmailResponse_EmailInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 email_ID = 1;
  inline bool has_email_id() const;
  inline void clear_email_id();
  static const int kEmailIDFieldNumber = 1;
  inline ::google::protobuf::uint64 email_id() const;
  inline void set_email_id(::google::protobuf::uint64 value);

  // required string givePalyerName = 2;
  inline bool has_givepalyername() const;
  inline void clear_givepalyername();
  static const int kGivePalyerNameFieldNumber = 2;
  inline const ::std::string& givepalyername() const;
  inline void set_givepalyername(const ::std::string& value);
  inline void set_givepalyername(const char* value);
  inline void set_givepalyername(const char* value, size_t size);
  inline ::std::string* mutable_givepalyername();
  inline ::std::string* release_givepalyername();
  inline void set_allocated_givepalyername(::std::string* givepalyername);

  // @@protoc_insertion_point(class_scope:message.EmailResponse.EmailInfo)
 private:
  inline void set_has_email_id();
  inline void clear_has_email_id();
  inline void set_has_givepalyername();
  inline void clear_has_givepalyername();

  ::google::protobuf::uint64 email_id_;
  ::std::string* givepalyername_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_Email_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_Email_2eproto();
  #endif
  friend void protobuf_AssignDesc_Email_2eproto();
  friend void protobuf_ShutdownFile_Email_2eproto();

  void InitAsDefaultInstance();
  static EmailResponse_EmailInfo* default_instance_;
};
// -------------------------------------------------------------------

class EmailResponse : public ::google::protobuf::MessageLite {
 public:
  EmailResponse();
  virtual ~EmailResponse();

  EmailResponse(const EmailResponse& from);

  inline EmailResponse& operator=(const EmailResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const EmailResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const EmailResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(EmailResponse* other);

  // implements Message ----------------------------------------------

  EmailResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const EmailResponse& from);
  void MergeFrom(const EmailResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  typedef EmailResponse_EmailInfo EmailInfo;

  // accessors -------------------------------------------------------

  // repeated .message.EmailResponse.EmailInfo emailList = 1;
  inline int emaillist_size() const;
  inline void clear_emaillist();
  static const int kEmailListFieldNumber = 1;
  inline const ::message::EmailResponse_EmailInfo& emaillist(int index) const;
  inline ::message::EmailResponse_EmailInfo* mutable_emaillist(int index);
  inline ::message::EmailResponse_EmailInfo* add_emaillist();
  inline const ::google::protobuf::RepeatedPtrField< ::message::EmailResponse_EmailInfo >&
      emaillist() const;
  inline ::google::protobuf::RepeatedPtrField< ::message::EmailResponse_EmailInfo >*
      mutable_emaillist();

  // @@protoc_insertion_point(class_scope:message.EmailResponse)
 private:

  ::google::protobuf::RepeatedPtrField< ::message::EmailResponse_EmailInfo > emaillist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_Email_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_Email_2eproto();
  #endif
  friend void protobuf_AssignDesc_Email_2eproto();
  friend void protobuf_ShutdownFile_Email_2eproto();

  void InitAsDefaultInstance();
  static EmailResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// EmailRequest

// -------------------------------------------------------------------

// EmailResponse_EmailInfo

// required uint64 email_ID = 1;
inline bool EmailResponse_EmailInfo::has_email_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EmailResponse_EmailInfo::set_has_email_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EmailResponse_EmailInfo::clear_has_email_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EmailResponse_EmailInfo::clear_email_id() {
  email_id_ = GOOGLE_ULONGLONG(0);
  clear_has_email_id();
}
inline ::google::protobuf::uint64 EmailResponse_EmailInfo::email_id() const {
  return email_id_;
}
inline void EmailResponse_EmailInfo::set_email_id(::google::protobuf::uint64 value) {
  set_has_email_id();
  email_id_ = value;
}

// required string givePalyerName = 2;
inline bool EmailResponse_EmailInfo::has_givepalyername() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EmailResponse_EmailInfo::set_has_givepalyername() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EmailResponse_EmailInfo::clear_has_givepalyername() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EmailResponse_EmailInfo::clear_givepalyername() {
  if (givepalyername_ != &::google::protobuf::internal::kEmptyString) {
    givepalyername_->clear();
  }
  clear_has_givepalyername();
}
inline const ::std::string& EmailResponse_EmailInfo::givepalyername() const {
  return *givepalyername_;
}
inline void EmailResponse_EmailInfo::set_givepalyername(const ::std::string& value) {
  set_has_givepalyername();
  if (givepalyername_ == &::google::protobuf::internal::kEmptyString) {
    givepalyername_ = new ::std::string;
  }
  givepalyername_->assign(value);
}
inline void EmailResponse_EmailInfo::set_givepalyername(const char* value) {
  set_has_givepalyername();
  if (givepalyername_ == &::google::protobuf::internal::kEmptyString) {
    givepalyername_ = new ::std::string;
  }
  givepalyername_->assign(value);
}
inline void EmailResponse_EmailInfo::set_givepalyername(const char* value, size_t size) {
  set_has_givepalyername();
  if (givepalyername_ == &::google::protobuf::internal::kEmptyString) {
    givepalyername_ = new ::std::string;
  }
  givepalyername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* EmailResponse_EmailInfo::mutable_givepalyername() {
  set_has_givepalyername();
  if (givepalyername_ == &::google::protobuf::internal::kEmptyString) {
    givepalyername_ = new ::std::string;
  }
  return givepalyername_;
}
inline ::std::string* EmailResponse_EmailInfo::release_givepalyername() {
  clear_has_givepalyername();
  if (givepalyername_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = givepalyername_;
    givepalyername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void EmailResponse_EmailInfo::set_allocated_givepalyername(::std::string* givepalyername) {
  if (givepalyername_ != &::google::protobuf::internal::kEmptyString) {
    delete givepalyername_;
  }
  if (givepalyername) {
    set_has_givepalyername();
    givepalyername_ = givepalyername;
  } else {
    clear_has_givepalyername();
    givepalyername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// EmailResponse

// repeated .message.EmailResponse.EmailInfo emailList = 1;
inline int EmailResponse::emaillist_size() const {
  return emaillist_.size();
}
inline void EmailResponse::clear_emaillist() {
  emaillist_.Clear();
}
inline const ::message::EmailResponse_EmailInfo& EmailResponse::emaillist(int index) const {
  return emaillist_.Get(index);
}
inline ::message::EmailResponse_EmailInfo* EmailResponse::mutable_emaillist(int index) {
  return emaillist_.Mutable(index);
}
inline ::message::EmailResponse_EmailInfo* EmailResponse::add_emaillist() {
  return emaillist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::message::EmailResponse_EmailInfo >&
EmailResponse::emaillist() const {
  return emaillist_;
}
inline ::google::protobuf::RepeatedPtrField< ::message::EmailResponse_EmailInfo >*
EmailResponse::mutable_emaillist() {
  return &emaillist_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace message

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Email_2eproto__INCLUDED
