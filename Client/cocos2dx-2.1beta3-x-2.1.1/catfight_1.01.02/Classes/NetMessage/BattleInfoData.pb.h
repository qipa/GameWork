// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BattleInfoData.proto

#ifndef PROTOBUF_BattleInfoData_2eproto__INCLUDED
#define PROTOBUF_BattleInfoData_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

namespace message {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_BattleInfoData_2eproto();
void protobuf_AssignDesc_BattleInfoData_2eproto();
void protobuf_ShutdownFile_BattleInfoData_2eproto();

class BattleInfo;
class BattleInfo_Balloon;
class BattleInfo_DropPetrifactionBalloon;

// ===================================================================

class BattleInfo_Balloon : public ::google::protobuf::MessageLite {
 public:
  BattleInfo_Balloon();
  virtual ~BattleInfo_Balloon();

  BattleInfo_Balloon(const BattleInfo_Balloon& from);

  inline BattleInfo_Balloon& operator=(const BattleInfo_Balloon& from) {
    CopyFrom(from);
    return *this;
  }

  static const BattleInfo_Balloon& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const BattleInfo_Balloon* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(BattleInfo_Balloon* other);

  // implements Message ----------------------------------------------

  BattleInfo_Balloon* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const BattleInfo_Balloon& from);
  void MergeFrom(const BattleInfo_Balloon& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required float x = 2;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 2;
  inline float x() const;
  inline void set_x(float value);

  // required float y = 3;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 3;
  inline float y() const;
  inline void set_y(float value);

  // required float angle = 4;
  inline bool has_angle() const;
  inline void clear_angle();
  static const int kAngleFieldNumber = 4;
  inline float angle() const;
  inline void set_angle(float value);

  // required int32 colorType = 5;
  inline bool has_colortype() const;
  inline void clear_colortype();
  static const int kColorTypeFieldNumber = 5;
  inline ::google::protobuf::int32 colortype() const;
  inline void set_colortype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:message.BattleInfo.Balloon)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_angle();
  inline void clear_has_angle();
  inline void set_has_colortype();
  inline void clear_has_colortype();

  ::google::protobuf::int32 id_;
  float x_;
  float y_;
  float angle_;
  ::google::protobuf::int32 colortype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_BattleInfoData_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_BattleInfoData_2eproto();
  #endif
  friend void protobuf_AssignDesc_BattleInfoData_2eproto();
  friend void protobuf_ShutdownFile_BattleInfoData_2eproto();

  void InitAsDefaultInstance();
  static BattleInfo_Balloon* default_instance_;
};
// -------------------------------------------------------------------

class BattleInfo_DropPetrifactionBalloon : public ::google::protobuf::MessageLite {
 public:
  BattleInfo_DropPetrifactionBalloon();
  virtual ~BattleInfo_DropPetrifactionBalloon();

  BattleInfo_DropPetrifactionBalloon(const BattleInfo_DropPetrifactionBalloon& from);

  inline BattleInfo_DropPetrifactionBalloon& operator=(const BattleInfo_DropPetrifactionBalloon& from) {
    CopyFrom(from);
    return *this;
  }

  static const BattleInfo_DropPetrifactionBalloon& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const BattleInfo_DropPetrifactionBalloon* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(BattleInfo_DropPetrifactionBalloon* other);

  // implements Message ----------------------------------------------

  BattleInfo_DropPetrifactionBalloon* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const BattleInfo_DropPetrifactionBalloon& from);
  void MergeFrom(const BattleInfo_DropPetrifactionBalloon& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 count = 1;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 1;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);

  // required int32 willChangeColorType = 2;
  inline bool has_willchangecolortype() const;
  inline void clear_willchangecolortype();
  static const int kWillChangeColorTypeFieldNumber = 2;
  inline ::google::protobuf::int32 willchangecolortype() const;
  inline void set_willchangecolortype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:message.BattleInfo.DropPetrifactionBalloon)
 private:
  inline void set_has_count();
  inline void clear_has_count();
  inline void set_has_willchangecolortype();
  inline void clear_has_willchangecolortype();

  ::google::protobuf::int32 count_;
  ::google::protobuf::int32 willchangecolortype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_BattleInfoData_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_BattleInfoData_2eproto();
  #endif
  friend void protobuf_AssignDesc_BattleInfoData_2eproto();
  friend void protobuf_ShutdownFile_BattleInfoData_2eproto();

  void InitAsDefaultInstance();
  static BattleInfo_DropPetrifactionBalloon* default_instance_;
};
// -------------------------------------------------------------------

class BattleInfo : public ::google::protobuf::MessageLite {
 public:
  BattleInfo();
  virtual ~BattleInfo();

  BattleInfo(const BattleInfo& from);

  inline BattleInfo& operator=(const BattleInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const BattleInfo& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const BattleInfo* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(BattleInfo* other);

  // implements Message ----------------------------------------------

  BattleInfo* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const BattleInfo& from);
  void MergeFrom(const BattleInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  typedef BattleInfo_Balloon Balloon;
  typedef BattleInfo_DropPetrifactionBalloon DropPetrifactionBalloon;

  // accessors -------------------------------------------------------

  // required string id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline const ::std::string& id() const;
  inline void set_id(const ::std::string& value);
  inline void set_id(const char* value);
  inline void set_id(const char* value, size_t size);
  inline ::std::string* mutable_id();
  inline ::std::string* release_id();
  inline void set_allocated_id(::std::string* id);

  // required int64 timestamp = 2;
  inline bool has_timestamp() const;
  inline void clear_timestamp();
  static const int kTimestampFieldNumber = 2;
  inline ::google::protobuf::int64 timestamp() const;
  inline void set_timestamp(::google::protobuf::int64 value);

  // repeated .message.BattleInfo.Balloon balloonDataList = 3;
  inline int balloondatalist_size() const;
  inline void clear_balloondatalist();
  static const int kBalloonDataListFieldNumber = 3;
  inline const ::message::BattleInfo_Balloon& balloondatalist(int index) const;
  inline ::message::BattleInfo_Balloon* mutable_balloondatalist(int index);
  inline ::message::BattleInfo_Balloon* add_balloondatalist();
  inline const ::google::protobuf::RepeatedPtrField< ::message::BattleInfo_Balloon >&
      balloondatalist() const;
  inline ::google::protobuf::RepeatedPtrField< ::message::BattleInfo_Balloon >*
      mutable_balloondatalist();

  // repeated .message.BattleInfo.DropPetrifactionBalloon dropPetrifactionList = 4;
  inline int droppetrifactionlist_size() const;
  inline void clear_droppetrifactionlist();
  static const int kDropPetrifactionListFieldNumber = 4;
  inline const ::message::BattleInfo_DropPetrifactionBalloon& droppetrifactionlist(int index) const;
  inline ::message::BattleInfo_DropPetrifactionBalloon* mutable_droppetrifactionlist(int index);
  inline ::message::BattleInfo_DropPetrifactionBalloon* add_droppetrifactionlist();
  inline const ::google::protobuf::RepeatedPtrField< ::message::BattleInfo_DropPetrifactionBalloon >&
      droppetrifactionlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::message::BattleInfo_DropPetrifactionBalloon >*
      mutable_droppetrifactionlist();

  // repeated int32 userPropID = 5;
  inline int userpropid_size() const;
  inline void clear_userpropid();
  static const int kUserPropIDFieldNumber = 5;
  inline ::google::protobuf::int32 userpropid(int index) const;
  inline void set_userpropid(int index, ::google::protobuf::int32 value);
  inline void add_userpropid(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      userpropid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_userpropid();

  // @@protoc_insertion_point(class_scope:message.BattleInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_timestamp();
  inline void clear_has_timestamp();

  ::std::string* id_;
  ::google::protobuf::int64 timestamp_;
  ::google::protobuf::RepeatedPtrField< ::message::BattleInfo_Balloon > balloondatalist_;
  ::google::protobuf::RepeatedPtrField< ::message::BattleInfo_DropPetrifactionBalloon > droppetrifactionlist_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > userpropid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_BattleInfoData_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_BattleInfoData_2eproto();
  #endif
  friend void protobuf_AssignDesc_BattleInfoData_2eproto();
  friend void protobuf_ShutdownFile_BattleInfoData_2eproto();

  void InitAsDefaultInstance();
  static BattleInfo* default_instance_;
};
// ===================================================================


// ===================================================================

// BattleInfo_Balloon

// required int32 id = 1;
inline bool BattleInfo_Balloon::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BattleInfo_Balloon::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BattleInfo_Balloon::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BattleInfo_Balloon::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 BattleInfo_Balloon::id() const {
  return id_;
}
inline void BattleInfo_Balloon::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// required float x = 2;
inline bool BattleInfo_Balloon::has_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BattleInfo_Balloon::set_has_x() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BattleInfo_Balloon::clear_has_x() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BattleInfo_Balloon::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline float BattleInfo_Balloon::x() const {
  return x_;
}
inline void BattleInfo_Balloon::set_x(float value) {
  set_has_x();
  x_ = value;
}

// required float y = 3;
inline bool BattleInfo_Balloon::has_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BattleInfo_Balloon::set_has_y() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BattleInfo_Balloon::clear_has_y() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BattleInfo_Balloon::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline float BattleInfo_Balloon::y() const {
  return y_;
}
inline void BattleInfo_Balloon::set_y(float value) {
  set_has_y();
  y_ = value;
}

// required float angle = 4;
inline bool BattleInfo_Balloon::has_angle() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BattleInfo_Balloon::set_has_angle() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BattleInfo_Balloon::clear_has_angle() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BattleInfo_Balloon::clear_angle() {
  angle_ = 0;
  clear_has_angle();
}
inline float BattleInfo_Balloon::angle() const {
  return angle_;
}
inline void BattleInfo_Balloon::set_angle(float value) {
  set_has_angle();
  angle_ = value;
}

// required int32 colorType = 5;
inline bool BattleInfo_Balloon::has_colortype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BattleInfo_Balloon::set_has_colortype() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BattleInfo_Balloon::clear_has_colortype() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BattleInfo_Balloon::clear_colortype() {
  colortype_ = 0;
  clear_has_colortype();
}
inline ::google::protobuf::int32 BattleInfo_Balloon::colortype() const {
  return colortype_;
}
inline void BattleInfo_Balloon::set_colortype(::google::protobuf::int32 value) {
  set_has_colortype();
  colortype_ = value;
}

// -------------------------------------------------------------------

// BattleInfo_DropPetrifactionBalloon

// required int32 count = 1;
inline bool BattleInfo_DropPetrifactionBalloon::has_count() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BattleInfo_DropPetrifactionBalloon::set_has_count() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BattleInfo_DropPetrifactionBalloon::clear_has_count() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BattleInfo_DropPetrifactionBalloon::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 BattleInfo_DropPetrifactionBalloon::count() const {
  return count_;
}
inline void BattleInfo_DropPetrifactionBalloon::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
}

// required int32 willChangeColorType = 2;
inline bool BattleInfo_DropPetrifactionBalloon::has_willchangecolortype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BattleInfo_DropPetrifactionBalloon::set_has_willchangecolortype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BattleInfo_DropPetrifactionBalloon::clear_has_willchangecolortype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BattleInfo_DropPetrifactionBalloon::clear_willchangecolortype() {
  willchangecolortype_ = 0;
  clear_has_willchangecolortype();
}
inline ::google::protobuf::int32 BattleInfo_DropPetrifactionBalloon::willchangecolortype() const {
  return willchangecolortype_;
}
inline void BattleInfo_DropPetrifactionBalloon::set_willchangecolortype(::google::protobuf::int32 value) {
  set_has_willchangecolortype();
  willchangecolortype_ = value;
}

// -------------------------------------------------------------------

// BattleInfo

// required string id = 1;
inline bool BattleInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BattleInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BattleInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BattleInfo::clear_id() {
  if (id_ != &::google::protobuf::internal::kEmptyString) {
    id_->clear();
  }
  clear_has_id();
}
inline const ::std::string& BattleInfo::id() const {
  return *id_;
}
inline void BattleInfo::set_id(const ::std::string& value) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    id_ = new ::std::string;
  }
  id_->assign(value);
}
inline void BattleInfo::set_id(const char* value) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    id_ = new ::std::string;
  }
  id_->assign(value);
}
inline void BattleInfo::set_id(const char* value, size_t size) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    id_ = new ::std::string;
  }
  id_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BattleInfo::mutable_id() {
  set_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    id_ = new ::std::string;
  }
  return id_;
}
inline ::std::string* BattleInfo::release_id() {
  clear_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = id_;
    id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void BattleInfo::set_allocated_id(::std::string* id) {
  if (id_ != &::google::protobuf::internal::kEmptyString) {
    delete id_;
  }
  if (id) {
    set_has_id();
    id_ = id;
  } else {
    clear_has_id();
    id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int64 timestamp = 2;
inline bool BattleInfo::has_timestamp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BattleInfo::set_has_timestamp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BattleInfo::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BattleInfo::clear_timestamp() {
  timestamp_ = GOOGLE_LONGLONG(0);
  clear_has_timestamp();
}
inline ::google::protobuf::int64 BattleInfo::timestamp() const {
  return timestamp_;
}
inline void BattleInfo::set_timestamp(::google::protobuf::int64 value) {
  set_has_timestamp();
  timestamp_ = value;
}

// repeated .message.BattleInfo.Balloon balloonDataList = 3;
inline int BattleInfo::balloondatalist_size() const {
  return balloondatalist_.size();
}
inline void BattleInfo::clear_balloondatalist() {
  balloondatalist_.Clear();
}
inline const ::message::BattleInfo_Balloon& BattleInfo::balloondatalist(int index) const {
  return balloondatalist_.Get(index);
}
inline ::message::BattleInfo_Balloon* BattleInfo::mutable_balloondatalist(int index) {
  return balloondatalist_.Mutable(index);
}
inline ::message::BattleInfo_Balloon* BattleInfo::add_balloondatalist() {
  return balloondatalist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::message::BattleInfo_Balloon >&
BattleInfo::balloondatalist() const {
  return balloondatalist_;
}
inline ::google::protobuf::RepeatedPtrField< ::message::BattleInfo_Balloon >*
BattleInfo::mutable_balloondatalist() {
  return &balloondatalist_;
}

// repeated .message.BattleInfo.DropPetrifactionBalloon dropPetrifactionList = 4;
inline int BattleInfo::droppetrifactionlist_size() const {
  return droppetrifactionlist_.size();
}
inline void BattleInfo::clear_droppetrifactionlist() {
  droppetrifactionlist_.Clear();
}
inline const ::message::BattleInfo_DropPetrifactionBalloon& BattleInfo::droppetrifactionlist(int index) const {
  return droppetrifactionlist_.Get(index);
}
inline ::message::BattleInfo_DropPetrifactionBalloon* BattleInfo::mutable_droppetrifactionlist(int index) {
  return droppetrifactionlist_.Mutable(index);
}
inline ::message::BattleInfo_DropPetrifactionBalloon* BattleInfo::add_droppetrifactionlist() {
  return droppetrifactionlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::message::BattleInfo_DropPetrifactionBalloon >&
BattleInfo::droppetrifactionlist() const {
  return droppetrifactionlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::message::BattleInfo_DropPetrifactionBalloon >*
BattleInfo::mutable_droppetrifactionlist() {
  return &droppetrifactionlist_;
}

// repeated int32 userPropID = 5;
inline int BattleInfo::userpropid_size() const {
  return userpropid_.size();
}
inline void BattleInfo::clear_userpropid() {
  userpropid_.Clear();
}
inline ::google::protobuf::int32 BattleInfo::userpropid(int index) const {
  return userpropid_.Get(index);
}
inline void BattleInfo::set_userpropid(int index, ::google::protobuf::int32 value) {
  userpropid_.Set(index, value);
}
inline void BattleInfo::add_userpropid(::google::protobuf::int32 value) {
  userpropid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BattleInfo::userpropid() const {
  return userpropid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BattleInfo::mutable_userpropid() {
  return &userpropid_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace message

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_BattleInfoData_2eproto__INCLUDED
