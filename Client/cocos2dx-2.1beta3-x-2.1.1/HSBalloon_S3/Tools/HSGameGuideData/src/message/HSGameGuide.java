// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: HSGameGuide.proto

package message;

public final class HSGameGuide {
  private HSGameGuide() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface GameGuideOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // repeated .message.GameGuide.Guide guideList = 1;
    java.util.List<message.HSGameGuide.GameGuide.Guide> 
        getGuideListList();
    message.HSGameGuide.GameGuide.Guide getGuideList(int index);
    int getGuideListCount();
  }
  public static final class GameGuide extends
      com.google.protobuf.GeneratedMessageLite
      implements GameGuideOrBuilder {
    // Use GameGuide.newBuilder() to construct.
    private GameGuide(Builder builder) {
      super(builder);
    }
    private GameGuide(boolean noInit) {}
    
    private static final GameGuide defaultInstance;
    public static GameGuide getDefaultInstance() {
      return defaultInstance;
    }
    
    public GameGuide getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public interface GuideOrBuilder
        extends com.google.protobuf.MessageLiteOrBuilder {
      
      // required int32 id = 1;
      boolean hasId();
      int getId();
      
      // required .message.GameGuide.Guide.ModeType modeType = 2;
      boolean hasModeType();
      message.HSGameGuide.GameGuide.Guide.ModeType getModeType();
      
      // repeated .message.GameGuide.Guide.Rect rect = 3;
      java.util.List<message.HSGameGuide.GameGuide.Guide.Rect> 
          getRectList();
      message.HSGameGuide.GameGuide.Guide.Rect getRect(int index);
      int getRectCount();
      
      // repeated .message.GameGuide.Guide.Point pointList = 4;
      java.util.List<message.HSGameGuide.GameGuide.Guide.Point> 
          getPointListList();
      message.HSGameGuide.GameGuide.Guide.Point getPointList(int index);
      int getPointListCount();
      
      // repeated float diameter = 5;
      java.util.List<java.lang.Float> getDiameterList();
      int getDiameterCount();
      float getDiameter(int index);
      
      // repeated float multiple = 6;
      java.util.List<java.lang.Float> getMultipleList();
      int getMultipleCount();
      float getMultiple(int index);
      
      // optional .message.GameGuide.Guide.Point describePos = 7;
      boolean hasDescribePos();
      message.HSGameGuide.GameGuide.Guide.Point getDescribePos();
      
      // optional .message.GameGuide.Guide.TouchType touchType = 8;
      boolean hasTouchType();
      message.HSGameGuide.GameGuide.Guide.TouchType getTouchType();
      
      // optional string describe = 9 [default = ""];
      boolean hasDescribe();
      String getDescribe();
    }
    public static final class Guide extends
        com.google.protobuf.GeneratedMessageLite
        implements GuideOrBuilder {
      // Use Guide.newBuilder() to construct.
      private Guide(Builder builder) {
        super(builder);
      }
      private Guide(boolean noInit) {}
      
      private static final Guide defaultInstance;
      public static Guide getDefaultInstance() {
        return defaultInstance;
      }
      
      public Guide getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public enum ModeType
          implements com.google.protobuf.Internal.EnumLite {
        ModeType_Round(0, 1),
        ModeType_Rect(1, 2),
        ;
        
        public static final int ModeType_Round_VALUE = 1;
        public static final int ModeType_Rect_VALUE = 2;
        
        
        public final int getNumber() { return value; }
        
        public static ModeType valueOf(int value) {
          switch (value) {
            case 1: return ModeType_Round;
            case 2: return ModeType_Rect;
            default: return null;
          }
        }
        
        public static com.google.protobuf.Internal.EnumLiteMap<ModeType>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static com.google.protobuf.Internal.EnumLiteMap<ModeType>
            internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<ModeType>() {
                public ModeType findValueByNumber(int number) {
                  return ModeType.valueOf(number);
                }
              };
        
        private final int value;
        
        private ModeType(int index, int value) {
          this.value = value;
        }
        
        // @@protoc_insertion_point(enum_scope:message.GameGuide.Guide.ModeType)
      }
      
      public enum TouchType
          implements com.google.protobuf.Internal.EnumLite {
        TouchType_leak(0, 1),
        TouchType_intercept(1, 2),
        ;
        
        public static final int TouchType_leak_VALUE = 1;
        public static final int TouchType_intercept_VALUE = 2;
        
        
        public final int getNumber() { return value; }
        
        public static TouchType valueOf(int value) {
          switch (value) {
            case 1: return TouchType_leak;
            case 2: return TouchType_intercept;
            default: return null;
          }
        }
        
        public static com.google.protobuf.Internal.EnumLiteMap<TouchType>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static com.google.protobuf.Internal.EnumLiteMap<TouchType>
            internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<TouchType>() {
                public TouchType findValueByNumber(int number) {
                  return TouchType.valueOf(number);
                }
              };
        
        private final int value;
        
        private TouchType(int index, int value) {
          this.value = value;
        }
        
        // @@protoc_insertion_point(enum_scope:message.GameGuide.Guide.TouchType)
      }
      
      public interface RectOrBuilder
          extends com.google.protobuf.MessageLiteOrBuilder {
        
        // required float x = 1;
        boolean hasX();
        float getX();
        
        // required float y = 2;
        boolean hasY();
        float getY();
        
        // required float w = 3;
        boolean hasW();
        float getW();
        
        // required float h = 4;
        boolean hasH();
        float getH();
      }
      public static final class Rect extends
          com.google.protobuf.GeneratedMessageLite
          implements RectOrBuilder {
        // Use Rect.newBuilder() to construct.
        private Rect(Builder builder) {
          super(builder);
        }
        private Rect(boolean noInit) {}
        
        private static final Rect defaultInstance;
        public static Rect getDefaultInstance() {
          return defaultInstance;
        }
        
        public Rect getDefaultInstanceForType() {
          return defaultInstance;
        }
        
        private int bitField0_;
        // required float x = 1;
        public static final int X_FIELD_NUMBER = 1;
        private float x_;
        public boolean hasX() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        public float getX() {
          return x_;
        }
        
        // required float y = 2;
        public static final int Y_FIELD_NUMBER = 2;
        private float y_;
        public boolean hasY() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        public float getY() {
          return y_;
        }
        
        // required float w = 3;
        public static final int W_FIELD_NUMBER = 3;
        private float w_;
        public boolean hasW() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        public float getW() {
          return w_;
        }
        
        // required float h = 4;
        public static final int H_FIELD_NUMBER = 4;
        private float h_;
        public boolean hasH() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        public float getH() {
          return h_;
        }
        
        private void initFields() {
          x_ = 0F;
          y_ = 0F;
          w_ = 0F;
          h_ = 0F;
        }
        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized != -1) return isInitialized == 1;
          
          if (!hasX()) {
            memoizedIsInitialized = 0;
            return false;
          }
          if (!hasY()) {
            memoizedIsInitialized = 0;
            return false;
          }
          if (!hasW()) {
            memoizedIsInitialized = 0;
            return false;
          }
          if (!hasH()) {
            memoizedIsInitialized = 0;
            return false;
          }
          memoizedIsInitialized = 1;
          return true;
        }
        
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            output.writeFloat(1, x_);
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            output.writeFloat(2, y_);
          }
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            output.writeFloat(3, w_);
          }
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            output.writeFloat(4, h_);
          }
        }
        
        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
        
          size = 0;
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(1, x_);
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(2, y_);
          }
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(3, w_);
          }
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(4, h_);
          }
          memoizedSerializedSize = size;
          return size;
        }
        
        private static final long serialVersionUID = 0L;
        @java.lang.Override
        protected java.lang.Object writeReplace()
            throws java.io.ObjectStreamException {
          return super.writeReplace();
        }
        
        public static message.HSGameGuide.GameGuide.Guide.Rect parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return newBuilder().mergeFrom(data).buildParsed();
        }
        public static message.HSGameGuide.GameGuide.Guide.Rect parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return newBuilder().mergeFrom(data, extensionRegistry)
                   .buildParsed();
        }
        public static message.HSGameGuide.GameGuide.Guide.Rect parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return newBuilder().mergeFrom(data).buildParsed();
        }
        public static message.HSGameGuide.GameGuide.Guide.Rect parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return newBuilder().mergeFrom(data, extensionRegistry)
                   .buildParsed();
        }
        public static message.HSGameGuide.GameGuide.Guide.Rect parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return newBuilder().mergeFrom(input).buildParsed();
        }
        public static message.HSGameGuide.GameGuide.Guide.Rect parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return newBuilder().mergeFrom(input, extensionRegistry)
                   .buildParsed();
        }
        public static message.HSGameGuide.GameGuide.Guide.Rect parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          Builder builder = newBuilder();
          if (builder.mergeDelimitedFrom(input)) {
            return builder.buildParsed();
          } else {
            return null;
          }
        }
        public static message.HSGameGuide.GameGuide.Guide.Rect parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          Builder builder = newBuilder();
          if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
            return builder.buildParsed();
          } else {
            return null;
          }
        }
        public static message.HSGameGuide.GameGuide.Guide.Rect parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return newBuilder().mergeFrom(input).buildParsed();
        }
        public static message.HSGameGuide.GameGuide.Guide.Rect parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return newBuilder().mergeFrom(input, extensionRegistry)
                   .buildParsed();
        }
        
        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(message.HSGameGuide.GameGuide.Guide.Rect prototype) {
          return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }
        
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageLite.Builder<
              message.HSGameGuide.GameGuide.Guide.Rect, Builder>
            implements message.HSGameGuide.GameGuide.Guide.RectOrBuilder {
          // Construct using message.HSGameGuide.GameGuide.Guide.Rect.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }
          
          private void maybeForceBuilderInitialization() {
          }
          private static Builder create() {
            return new Builder();
          }
          
          public Builder clear() {
            super.clear();
            x_ = 0F;
            bitField0_ = (bitField0_ & ~0x00000001);
            y_ = 0F;
            bitField0_ = (bitField0_ & ~0x00000002);
            w_ = 0F;
            bitField0_ = (bitField0_ & ~0x00000004);
            h_ = 0F;
            bitField0_ = (bitField0_ & ~0x00000008);
            return this;
          }
          
          public Builder clone() {
            return create().mergeFrom(buildPartial());
          }
          
          public message.HSGameGuide.GameGuide.Guide.Rect getDefaultInstanceForType() {
            return message.HSGameGuide.GameGuide.Guide.Rect.getDefaultInstance();
          }
          
          public message.HSGameGuide.GameGuide.Guide.Rect build() {
            message.HSGameGuide.GameGuide.Guide.Rect result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }
          
          private message.HSGameGuide.GameGuide.Guide.Rect buildParsed()
              throws com.google.protobuf.InvalidProtocolBufferException {
            message.HSGameGuide.GameGuide.Guide.Rect result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(
                result).asInvalidProtocolBufferException();
            }
            return result;
          }
          
          public message.HSGameGuide.GameGuide.Guide.Rect buildPartial() {
            message.HSGameGuide.GameGuide.Guide.Rect result = new message.HSGameGuide.GameGuide.Guide.Rect(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
              to_bitField0_ |= 0x00000001;
            }
            result.x_ = x_;
            if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
              to_bitField0_ |= 0x00000002;
            }
            result.y_ = y_;
            if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
              to_bitField0_ |= 0x00000004;
            }
            result.w_ = w_;
            if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
              to_bitField0_ |= 0x00000008;
            }
            result.h_ = h_;
            result.bitField0_ = to_bitField0_;
            return result;
          }
          
          public Builder mergeFrom(message.HSGameGuide.GameGuide.Guide.Rect other) {
            if (other == message.HSGameGuide.GameGuide.Guide.Rect.getDefaultInstance()) return this;
            if (other.hasX()) {
              setX(other.getX());
            }
            if (other.hasY()) {
              setY(other.getY());
            }
            if (other.hasW()) {
              setW(other.getW());
            }
            if (other.hasH()) {
              setH(other.getH());
            }
            return this;
          }
          
          public final boolean isInitialized() {
            if (!hasX()) {
              
              return false;
            }
            if (!hasY()) {
              
              return false;
            }
            if (!hasW()) {
              
              return false;
            }
            if (!hasH()) {
              
              return false;
            }
            return true;
          }
          
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            while (true) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  
                  return this;
                default: {
                  if (!parseUnknownField(input, extensionRegistry, tag)) {
                    
                    return this;
                  }
                  break;
                }
                case 13: {
                  bitField0_ |= 0x00000001;
                  x_ = input.readFloat();
                  break;
                }
                case 21: {
                  bitField0_ |= 0x00000002;
                  y_ = input.readFloat();
                  break;
                }
                case 29: {
                  bitField0_ |= 0x00000004;
                  w_ = input.readFloat();
                  break;
                }
                case 37: {
                  bitField0_ |= 0x00000008;
                  h_ = input.readFloat();
                  break;
                }
              }
            }
          }
          
          private int bitField0_;
          
          // required float x = 1;
          private float x_ ;
          public boolean hasX() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
          }
          public float getX() {
            return x_;
          }
          public Builder setX(float value) {
            bitField0_ |= 0x00000001;
            x_ = value;
            
            return this;
          }
          public Builder clearX() {
            bitField0_ = (bitField0_ & ~0x00000001);
            x_ = 0F;
            
            return this;
          }
          
          // required float y = 2;
          private float y_ ;
          public boolean hasY() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
          }
          public float getY() {
            return y_;
          }
          public Builder setY(float value) {
            bitField0_ |= 0x00000002;
            y_ = value;
            
            return this;
          }
          public Builder clearY() {
            bitField0_ = (bitField0_ & ~0x00000002);
            y_ = 0F;
            
            return this;
          }
          
          // required float w = 3;
          private float w_ ;
          public boolean hasW() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
          }
          public float getW() {
            return w_;
          }
          public Builder setW(float value) {
            bitField0_ |= 0x00000004;
            w_ = value;
            
            return this;
          }
          public Builder clearW() {
            bitField0_ = (bitField0_ & ~0x00000004);
            w_ = 0F;
            
            return this;
          }
          
          // required float h = 4;
          private float h_ ;
          public boolean hasH() {
            return ((bitField0_ & 0x00000008) == 0x00000008);
          }
          public float getH() {
            return h_;
          }
          public Builder setH(float value) {
            bitField0_ |= 0x00000008;
            h_ = value;
            
            return this;
          }
          public Builder clearH() {
            bitField0_ = (bitField0_ & ~0x00000008);
            h_ = 0F;
            
            return this;
          }
          
          // @@protoc_insertion_point(builder_scope:message.GameGuide.Guide.Rect)
        }
        
        static {
          defaultInstance = new Rect(true);
          defaultInstance.initFields();
        }
        
        // @@protoc_insertion_point(class_scope:message.GameGuide.Guide.Rect)
      }
      
      public interface PointOrBuilder
          extends com.google.protobuf.MessageLiteOrBuilder {
        
        // required float x = 1;
        boolean hasX();
        float getX();
        
        // required float y = 2;
        boolean hasY();
        float getY();
      }
      public static final class Point extends
          com.google.protobuf.GeneratedMessageLite
          implements PointOrBuilder {
        // Use Point.newBuilder() to construct.
        private Point(Builder builder) {
          super(builder);
        }
        private Point(boolean noInit) {}
        
        private static final Point defaultInstance;
        public static Point getDefaultInstance() {
          return defaultInstance;
        }
        
        public Point getDefaultInstanceForType() {
          return defaultInstance;
        }
        
        private int bitField0_;
        // required float x = 1;
        public static final int X_FIELD_NUMBER = 1;
        private float x_;
        public boolean hasX() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        public float getX() {
          return x_;
        }
        
        // required float y = 2;
        public static final int Y_FIELD_NUMBER = 2;
        private float y_;
        public boolean hasY() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        public float getY() {
          return y_;
        }
        
        private void initFields() {
          x_ = 0F;
          y_ = 0F;
        }
        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized != -1) return isInitialized == 1;
          
          if (!hasX()) {
            memoizedIsInitialized = 0;
            return false;
          }
          if (!hasY()) {
            memoizedIsInitialized = 0;
            return false;
          }
          memoizedIsInitialized = 1;
          return true;
        }
        
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            output.writeFloat(1, x_);
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            output.writeFloat(2, y_);
          }
        }
        
        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
        
          size = 0;
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(1, x_);
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(2, y_);
          }
          memoizedSerializedSize = size;
          return size;
        }
        
        private static final long serialVersionUID = 0L;
        @java.lang.Override
        protected java.lang.Object writeReplace()
            throws java.io.ObjectStreamException {
          return super.writeReplace();
        }
        
        public static message.HSGameGuide.GameGuide.Guide.Point parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return newBuilder().mergeFrom(data).buildParsed();
        }
        public static message.HSGameGuide.GameGuide.Guide.Point parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return newBuilder().mergeFrom(data, extensionRegistry)
                   .buildParsed();
        }
        public static message.HSGameGuide.GameGuide.Guide.Point parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return newBuilder().mergeFrom(data).buildParsed();
        }
        public static message.HSGameGuide.GameGuide.Guide.Point parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return newBuilder().mergeFrom(data, extensionRegistry)
                   .buildParsed();
        }
        public static message.HSGameGuide.GameGuide.Guide.Point parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return newBuilder().mergeFrom(input).buildParsed();
        }
        public static message.HSGameGuide.GameGuide.Guide.Point parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return newBuilder().mergeFrom(input, extensionRegistry)
                   .buildParsed();
        }
        public static message.HSGameGuide.GameGuide.Guide.Point parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          Builder builder = newBuilder();
          if (builder.mergeDelimitedFrom(input)) {
            return builder.buildParsed();
          } else {
            return null;
          }
        }
        public static message.HSGameGuide.GameGuide.Guide.Point parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          Builder builder = newBuilder();
          if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
            return builder.buildParsed();
          } else {
            return null;
          }
        }
        public static message.HSGameGuide.GameGuide.Guide.Point parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return newBuilder().mergeFrom(input).buildParsed();
        }
        public static message.HSGameGuide.GameGuide.Guide.Point parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return newBuilder().mergeFrom(input, extensionRegistry)
                   .buildParsed();
        }
        
        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(message.HSGameGuide.GameGuide.Guide.Point prototype) {
          return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }
        
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageLite.Builder<
              message.HSGameGuide.GameGuide.Guide.Point, Builder>
            implements message.HSGameGuide.GameGuide.Guide.PointOrBuilder {
          // Construct using message.HSGameGuide.GameGuide.Guide.Point.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }
          
          private void maybeForceBuilderInitialization() {
          }
          private static Builder create() {
            return new Builder();
          }
          
          public Builder clear() {
            super.clear();
            x_ = 0F;
            bitField0_ = (bitField0_ & ~0x00000001);
            y_ = 0F;
            bitField0_ = (bitField0_ & ~0x00000002);
            return this;
          }
          
          public Builder clone() {
            return create().mergeFrom(buildPartial());
          }
          
          public message.HSGameGuide.GameGuide.Guide.Point getDefaultInstanceForType() {
            return message.HSGameGuide.GameGuide.Guide.Point.getDefaultInstance();
          }
          
          public message.HSGameGuide.GameGuide.Guide.Point build() {
            message.HSGameGuide.GameGuide.Guide.Point result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }
          
          private message.HSGameGuide.GameGuide.Guide.Point buildParsed()
              throws com.google.protobuf.InvalidProtocolBufferException {
            message.HSGameGuide.GameGuide.Guide.Point result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(
                result).asInvalidProtocolBufferException();
            }
            return result;
          }
          
          public message.HSGameGuide.GameGuide.Guide.Point buildPartial() {
            message.HSGameGuide.GameGuide.Guide.Point result = new message.HSGameGuide.GameGuide.Guide.Point(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
              to_bitField0_ |= 0x00000001;
            }
            result.x_ = x_;
            if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
              to_bitField0_ |= 0x00000002;
            }
            result.y_ = y_;
            result.bitField0_ = to_bitField0_;
            return result;
          }
          
          public Builder mergeFrom(message.HSGameGuide.GameGuide.Guide.Point other) {
            if (other == message.HSGameGuide.GameGuide.Guide.Point.getDefaultInstance()) return this;
            if (other.hasX()) {
              setX(other.getX());
            }
            if (other.hasY()) {
              setY(other.getY());
            }
            return this;
          }
          
          public final boolean isInitialized() {
            if (!hasX()) {
              
              return false;
            }
            if (!hasY()) {
              
              return false;
            }
            return true;
          }
          
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            while (true) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  
                  return this;
                default: {
                  if (!parseUnknownField(input, extensionRegistry, tag)) {
                    
                    return this;
                  }
                  break;
                }
                case 13: {
                  bitField0_ |= 0x00000001;
                  x_ = input.readFloat();
                  break;
                }
                case 21: {
                  bitField0_ |= 0x00000002;
                  y_ = input.readFloat();
                  break;
                }
              }
            }
          }
          
          private int bitField0_;
          
          // required float x = 1;
          private float x_ ;
          public boolean hasX() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
          }
          public float getX() {
            return x_;
          }
          public Builder setX(float value) {
            bitField0_ |= 0x00000001;
            x_ = value;
            
            return this;
          }
          public Builder clearX() {
            bitField0_ = (bitField0_ & ~0x00000001);
            x_ = 0F;
            
            return this;
          }
          
          // required float y = 2;
          private float y_ ;
          public boolean hasY() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
          }
          public float getY() {
            return y_;
          }
          public Builder setY(float value) {
            bitField0_ |= 0x00000002;
            y_ = value;
            
            return this;
          }
          public Builder clearY() {
            bitField0_ = (bitField0_ & ~0x00000002);
            y_ = 0F;
            
            return this;
          }
          
          // @@protoc_insertion_point(builder_scope:message.GameGuide.Guide.Point)
        }
        
        static {
          defaultInstance = new Point(true);
          defaultInstance.initFields();
        }
        
        // @@protoc_insertion_point(class_scope:message.GameGuide.Guide.Point)
      }
      
      private int bitField0_;
      // required int32 id = 1;
      public static final int ID_FIELD_NUMBER = 1;
      private int id_;
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getId() {
        return id_;
      }
      
      // required .message.GameGuide.Guide.ModeType modeType = 2;
      public static final int MODETYPE_FIELD_NUMBER = 2;
      private message.HSGameGuide.GameGuide.Guide.ModeType modeType_;
      public boolean hasModeType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public message.HSGameGuide.GameGuide.Guide.ModeType getModeType() {
        return modeType_;
      }
      
      // repeated .message.GameGuide.Guide.Rect rect = 3;
      public static final int RECT_FIELD_NUMBER = 3;
      private java.util.List<message.HSGameGuide.GameGuide.Guide.Rect> rect_;
      public java.util.List<message.HSGameGuide.GameGuide.Guide.Rect> getRectList() {
        return rect_;
      }
      public java.util.List<? extends message.HSGameGuide.GameGuide.Guide.RectOrBuilder> 
          getRectOrBuilderList() {
        return rect_;
      }
      public int getRectCount() {
        return rect_.size();
      }
      public message.HSGameGuide.GameGuide.Guide.Rect getRect(int index) {
        return rect_.get(index);
      }
      public message.HSGameGuide.GameGuide.Guide.RectOrBuilder getRectOrBuilder(
          int index) {
        return rect_.get(index);
      }
      
      // repeated .message.GameGuide.Guide.Point pointList = 4;
      public static final int POINTLIST_FIELD_NUMBER = 4;
      private java.util.List<message.HSGameGuide.GameGuide.Guide.Point> pointList_;
      public java.util.List<message.HSGameGuide.GameGuide.Guide.Point> getPointListList() {
        return pointList_;
      }
      public java.util.List<? extends message.HSGameGuide.GameGuide.Guide.PointOrBuilder> 
          getPointListOrBuilderList() {
        return pointList_;
      }
      public int getPointListCount() {
        return pointList_.size();
      }
      public message.HSGameGuide.GameGuide.Guide.Point getPointList(int index) {
        return pointList_.get(index);
      }
      public message.HSGameGuide.GameGuide.Guide.PointOrBuilder getPointListOrBuilder(
          int index) {
        return pointList_.get(index);
      }
      
      // repeated float diameter = 5;
      public static final int DIAMETER_FIELD_NUMBER = 5;
      private java.util.List<java.lang.Float> diameter_;
      public java.util.List<java.lang.Float>
          getDiameterList() {
        return diameter_;
      }
      public int getDiameterCount() {
        return diameter_.size();
      }
      public float getDiameter(int index) {
        return diameter_.get(index);
      }
      
      // repeated float multiple = 6;
      public static final int MULTIPLE_FIELD_NUMBER = 6;
      private java.util.List<java.lang.Float> multiple_;
      public java.util.List<java.lang.Float>
          getMultipleList() {
        return multiple_;
      }
      public int getMultipleCount() {
        return multiple_.size();
      }
      public float getMultiple(int index) {
        return multiple_.get(index);
      }
      
      // optional .message.GameGuide.Guide.Point describePos = 7;
      public static final int DESCRIBEPOS_FIELD_NUMBER = 7;
      private message.HSGameGuide.GameGuide.Guide.Point describePos_;
      public boolean hasDescribePos() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public message.HSGameGuide.GameGuide.Guide.Point getDescribePos() {
        return describePos_;
      }
      
      // optional .message.GameGuide.Guide.TouchType touchType = 8;
      public static final int TOUCHTYPE_FIELD_NUMBER = 8;
      private message.HSGameGuide.GameGuide.Guide.TouchType touchType_;
      public boolean hasTouchType() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public message.HSGameGuide.GameGuide.Guide.TouchType getTouchType() {
        return touchType_;
      }
      
      // optional string describe = 9 [default = ""];
      public static final int DESCRIBE_FIELD_NUMBER = 9;
      private java.lang.Object describe_;
      public boolean hasDescribe() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public String getDescribe() {
        java.lang.Object ref = describe_;
        if (ref instanceof String) {
          return (String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (com.google.protobuf.Internal.isValidUtf8(bs)) {
            describe_ = s;
          }
          return s;
        }
      }
      private com.google.protobuf.ByteString getDescribeBytes() {
        java.lang.Object ref = describe_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8((String) ref);
          describe_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      
      private void initFields() {
        id_ = 0;
        modeType_ = message.HSGameGuide.GameGuide.Guide.ModeType.ModeType_Round;
        rect_ = java.util.Collections.emptyList();
        pointList_ = java.util.Collections.emptyList();
        diameter_ = java.util.Collections.emptyList();;
        multiple_ = java.util.Collections.emptyList();;
        describePos_ = message.HSGameGuide.GameGuide.Guide.Point.getDefaultInstance();
        touchType_ = message.HSGameGuide.GameGuide.Guide.TouchType.TouchType_leak;
        describe_ = "";
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;
        
        if (!hasId()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasModeType()) {
          memoizedIsInitialized = 0;
          return false;
        }
        for (int i = 0; i < getRectCount(); i++) {
          if (!getRect(i).isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
        }
        for (int i = 0; i < getPointListCount(); i++) {
          if (!getPointList(i).isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
        }
        if (hasDescribePos()) {
          if (!getDescribePos().isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
        }
        memoizedIsInitialized = 1;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(1, id_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeEnum(2, modeType_.getNumber());
        }
        for (int i = 0; i < rect_.size(); i++) {
          output.writeMessage(3, rect_.get(i));
        }
        for (int i = 0; i < pointList_.size(); i++) {
          output.writeMessage(4, pointList_.get(i));
        }
        for (int i = 0; i < diameter_.size(); i++) {
          output.writeFloat(5, diameter_.get(i));
        }
        for (int i = 0; i < multiple_.size(); i++) {
          output.writeFloat(6, multiple_.get(i));
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeMessage(7, describePos_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeEnum(8, touchType_.getNumber());
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeBytes(9, getDescribeBytes());
        }
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, id_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(2, modeType_.getNumber());
        }
        for (int i = 0; i < rect_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, rect_.get(i));
        }
        for (int i = 0; i < pointList_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, pointList_.get(i));
        }
        {
          int dataSize = 0;
          dataSize = 4 * getDiameterList().size();
          size += dataSize;
          size += 1 * getDiameterList().size();
        }
        {
          int dataSize = 0;
          dataSize = 4 * getMultipleList().size();
          size += dataSize;
          size += 1 * getMultipleList().size();
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(7, describePos_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(8, touchType_.getNumber());
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(9, getDescribeBytes());
        }
        memoizedSerializedSize = size;
        return size;
      }
      
      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }
      
      public static message.HSGameGuide.GameGuide.Guide parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static message.HSGameGuide.GameGuide.Guide parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static message.HSGameGuide.GameGuide.Guide parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static message.HSGameGuide.GameGuide.Guide parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static message.HSGameGuide.GameGuide.Guide parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static message.HSGameGuide.GameGuide.Guide parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static message.HSGameGuide.GameGuide.Guide parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static message.HSGameGuide.GameGuide.Guide parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static message.HSGameGuide.GameGuide.Guide parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static message.HSGameGuide.GameGuide.Guide parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(message.HSGameGuide.GameGuide.Guide prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            message.HSGameGuide.GameGuide.Guide, Builder>
          implements message.HSGameGuide.GameGuide.GuideOrBuilder {
        // Construct using message.HSGameGuide.GameGuide.Guide.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }
        
        private void maybeForceBuilderInitialization() {
        }
        private static Builder create() {
          return new Builder();
        }
        
        public Builder clear() {
          super.clear();
          id_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          modeType_ = message.HSGameGuide.GameGuide.Guide.ModeType.ModeType_Round;
          bitField0_ = (bitField0_ & ~0x00000002);
          rect_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          pointList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          diameter_ = java.util.Collections.emptyList();;
          bitField0_ = (bitField0_ & ~0x00000010);
          multiple_ = java.util.Collections.emptyList();;
          bitField0_ = (bitField0_ & ~0x00000020);
          describePos_ = message.HSGameGuide.GameGuide.Guide.Point.getDefaultInstance();
          bitField0_ = (bitField0_ & ~0x00000040);
          touchType_ = message.HSGameGuide.GameGuide.Guide.TouchType.TouchType_leak;
          bitField0_ = (bitField0_ & ~0x00000080);
          describe_ = "";
          bitField0_ = (bitField0_ & ~0x00000100);
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }
        
        public message.HSGameGuide.GameGuide.Guide getDefaultInstanceForType() {
          return message.HSGameGuide.GameGuide.Guide.getDefaultInstance();
        }
        
        public message.HSGameGuide.GameGuide.Guide build() {
          message.HSGameGuide.GameGuide.Guide result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }
        
        private message.HSGameGuide.GameGuide.Guide buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          message.HSGameGuide.GameGuide.Guide result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return result;
        }
        
        public message.HSGameGuide.GameGuide.Guide buildPartial() {
          message.HSGameGuide.GameGuide.Guide result = new message.HSGameGuide.GameGuide.Guide(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.id_ = id_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.modeType_ = modeType_;
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            rect_ = java.util.Collections.unmodifiableList(rect_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.rect_ = rect_;
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            pointList_ = java.util.Collections.unmodifiableList(pointList_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.pointList_ = pointList_;
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            diameter_ = java.util.Collections.unmodifiableList(diameter_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.diameter_ = diameter_;
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            multiple_ = java.util.Collections.unmodifiableList(multiple_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.multiple_ = multiple_;
          if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
            to_bitField0_ |= 0x00000004;
          }
          result.describePos_ = describePos_;
          if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
            to_bitField0_ |= 0x00000008;
          }
          result.touchType_ = touchType_;
          if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
            to_bitField0_ |= 0x00000010;
          }
          result.describe_ = describe_;
          result.bitField0_ = to_bitField0_;
          return result;
        }
        
        public Builder mergeFrom(message.HSGameGuide.GameGuide.Guide other) {
          if (other == message.HSGameGuide.GameGuide.Guide.getDefaultInstance()) return this;
          if (other.hasId()) {
            setId(other.getId());
          }
          if (other.hasModeType()) {
            setModeType(other.getModeType());
          }
          if (!other.rect_.isEmpty()) {
            if (rect_.isEmpty()) {
              rect_ = other.rect_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureRectIsMutable();
              rect_.addAll(other.rect_);
            }
            
          }
          if (!other.pointList_.isEmpty()) {
            if (pointList_.isEmpty()) {
              pointList_ = other.pointList_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensurePointListIsMutable();
              pointList_.addAll(other.pointList_);
            }
            
          }
          if (!other.diameter_.isEmpty()) {
            if (diameter_.isEmpty()) {
              diameter_ = other.diameter_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureDiameterIsMutable();
              diameter_.addAll(other.diameter_);
            }
            
          }
          if (!other.multiple_.isEmpty()) {
            if (multiple_.isEmpty()) {
              multiple_ = other.multiple_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureMultipleIsMutable();
              multiple_.addAll(other.multiple_);
            }
            
          }
          if (other.hasDescribePos()) {
            mergeDescribePos(other.getDescribePos());
          }
          if (other.hasTouchType()) {
            setTouchType(other.getTouchType());
          }
          if (other.hasDescribe()) {
            setDescribe(other.getDescribe());
          }
          return this;
        }
        
        public final boolean isInitialized() {
          if (!hasId()) {
            
            return false;
          }
          if (!hasModeType()) {
            
            return false;
          }
          for (int i = 0; i < getRectCount(); i++) {
            if (!getRect(i).isInitialized()) {
              
              return false;
            }
          }
          for (int i = 0; i < getPointListCount(); i++) {
            if (!getPointList(i).isInitialized()) {
              
              return false;
            }
          }
          if (hasDescribePos()) {
            if (!getDescribePos().isInitialized()) {
              
              return false;
            }
          }
          return true;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                
                return this;
              default: {
                if (!parseUnknownField(input, extensionRegistry, tag)) {
                  
                  return this;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                id_ = input.readInt32();
                break;
              }
              case 16: {
                int rawValue = input.readEnum();
                message.HSGameGuide.GameGuide.Guide.ModeType value = message.HSGameGuide.GameGuide.Guide.ModeType.valueOf(rawValue);
                if (value != null) {
                  bitField0_ |= 0x00000002;
                  modeType_ = value;
                }
                break;
              }
              case 26: {
                message.HSGameGuide.GameGuide.Guide.Rect.Builder subBuilder = message.HSGameGuide.GameGuide.Guide.Rect.newBuilder();
                input.readMessage(subBuilder, extensionRegistry);
                addRect(subBuilder.buildPartial());
                break;
              }
              case 34: {
                message.HSGameGuide.GameGuide.Guide.Point.Builder subBuilder = message.HSGameGuide.GameGuide.Guide.Point.newBuilder();
                input.readMessage(subBuilder, extensionRegistry);
                addPointList(subBuilder.buildPartial());
                break;
              }
              case 45: {
                ensureDiameterIsMutable();
                diameter_.add(input.readFloat());
                break;
              }
              case 42: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                while (input.getBytesUntilLimit() > 0) {
                  addDiameter(input.readFloat());
                }
                input.popLimit(limit);
                break;
              }
              case 53: {
                ensureMultipleIsMutable();
                multiple_.add(input.readFloat());
                break;
              }
              case 50: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                while (input.getBytesUntilLimit() > 0) {
                  addMultiple(input.readFloat());
                }
                input.popLimit(limit);
                break;
              }
              case 58: {
                message.HSGameGuide.GameGuide.Guide.Point.Builder subBuilder = message.HSGameGuide.GameGuide.Guide.Point.newBuilder();
                if (hasDescribePos()) {
                  subBuilder.mergeFrom(getDescribePos());
                }
                input.readMessage(subBuilder, extensionRegistry);
                setDescribePos(subBuilder.buildPartial());
                break;
              }
              case 64: {
                int rawValue = input.readEnum();
                message.HSGameGuide.GameGuide.Guide.TouchType value = message.HSGameGuide.GameGuide.Guide.TouchType.valueOf(rawValue);
                if (value != null) {
                  bitField0_ |= 0x00000080;
                  touchType_ = value;
                }
                break;
              }
              case 74: {
                bitField0_ |= 0x00000100;
                describe_ = input.readBytes();
                break;
              }
            }
          }
        }
        
        private int bitField0_;
        
        // required int32 id = 1;
        private int id_ ;
        public boolean hasId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        public int getId() {
          return id_;
        }
        public Builder setId(int value) {
          bitField0_ |= 0x00000001;
          id_ = value;
          
          return this;
        }
        public Builder clearId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          id_ = 0;
          
          return this;
        }
        
        // required .message.GameGuide.Guide.ModeType modeType = 2;
        private message.HSGameGuide.GameGuide.Guide.ModeType modeType_ = message.HSGameGuide.GameGuide.Guide.ModeType.ModeType_Round;
        public boolean hasModeType() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        public message.HSGameGuide.GameGuide.Guide.ModeType getModeType() {
          return modeType_;
        }
        public Builder setModeType(message.HSGameGuide.GameGuide.Guide.ModeType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000002;
          modeType_ = value;
          
          return this;
        }
        public Builder clearModeType() {
          bitField0_ = (bitField0_ & ~0x00000002);
          modeType_ = message.HSGameGuide.GameGuide.Guide.ModeType.ModeType_Round;
          
          return this;
        }
        
        // repeated .message.GameGuide.Guide.Rect rect = 3;
        private java.util.List<message.HSGameGuide.GameGuide.Guide.Rect> rect_ =
          java.util.Collections.emptyList();
        private void ensureRectIsMutable() {
          if (!((bitField0_ & 0x00000004) == 0x00000004)) {
            rect_ = new java.util.ArrayList<message.HSGameGuide.GameGuide.Guide.Rect>(rect_);
            bitField0_ |= 0x00000004;
           }
        }
        
        public java.util.List<message.HSGameGuide.GameGuide.Guide.Rect> getRectList() {
          return java.util.Collections.unmodifiableList(rect_);
        }
        public int getRectCount() {
          return rect_.size();
        }
        public message.HSGameGuide.GameGuide.Guide.Rect getRect(int index) {
          return rect_.get(index);
        }
        public Builder setRect(
            int index, message.HSGameGuide.GameGuide.Guide.Rect value) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRectIsMutable();
          rect_.set(index, value);
          
          return this;
        }
        public Builder setRect(
            int index, message.HSGameGuide.GameGuide.Guide.Rect.Builder builderForValue) {
          ensureRectIsMutable();
          rect_.set(index, builderForValue.build());
          
          return this;
        }
        public Builder addRect(message.HSGameGuide.GameGuide.Guide.Rect value) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRectIsMutable();
          rect_.add(value);
          
          return this;
        }
        public Builder addRect(
            int index, message.HSGameGuide.GameGuide.Guide.Rect value) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRectIsMutable();
          rect_.add(index, value);
          
          return this;
        }
        public Builder addRect(
            message.HSGameGuide.GameGuide.Guide.Rect.Builder builderForValue) {
          ensureRectIsMutable();
          rect_.add(builderForValue.build());
          
          return this;
        }
        public Builder addRect(
            int index, message.HSGameGuide.GameGuide.Guide.Rect.Builder builderForValue) {
          ensureRectIsMutable();
          rect_.add(index, builderForValue.build());
          
          return this;
        }
        public Builder addAllRect(
            java.lang.Iterable<? extends message.HSGameGuide.GameGuide.Guide.Rect> values) {
          ensureRectIsMutable();
          super.addAll(values, rect_);
          
          return this;
        }
        public Builder clearRect() {
          rect_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          
          return this;
        }
        public Builder removeRect(int index) {
          ensureRectIsMutable();
          rect_.remove(index);
          
          return this;
        }
        
        // repeated .message.GameGuide.Guide.Point pointList = 4;
        private java.util.List<message.HSGameGuide.GameGuide.Guide.Point> pointList_ =
          java.util.Collections.emptyList();
        private void ensurePointListIsMutable() {
          if (!((bitField0_ & 0x00000008) == 0x00000008)) {
            pointList_ = new java.util.ArrayList<message.HSGameGuide.GameGuide.Guide.Point>(pointList_);
            bitField0_ |= 0x00000008;
           }
        }
        
        public java.util.List<message.HSGameGuide.GameGuide.Guide.Point> getPointListList() {
          return java.util.Collections.unmodifiableList(pointList_);
        }
        public int getPointListCount() {
          return pointList_.size();
        }
        public message.HSGameGuide.GameGuide.Guide.Point getPointList(int index) {
          return pointList_.get(index);
        }
        public Builder setPointList(
            int index, message.HSGameGuide.GameGuide.Guide.Point value) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePointListIsMutable();
          pointList_.set(index, value);
          
          return this;
        }
        public Builder setPointList(
            int index, message.HSGameGuide.GameGuide.Guide.Point.Builder builderForValue) {
          ensurePointListIsMutable();
          pointList_.set(index, builderForValue.build());
          
          return this;
        }
        public Builder addPointList(message.HSGameGuide.GameGuide.Guide.Point value) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePointListIsMutable();
          pointList_.add(value);
          
          return this;
        }
        public Builder addPointList(
            int index, message.HSGameGuide.GameGuide.Guide.Point value) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePointListIsMutable();
          pointList_.add(index, value);
          
          return this;
        }
        public Builder addPointList(
            message.HSGameGuide.GameGuide.Guide.Point.Builder builderForValue) {
          ensurePointListIsMutable();
          pointList_.add(builderForValue.build());
          
          return this;
        }
        public Builder addPointList(
            int index, message.HSGameGuide.GameGuide.Guide.Point.Builder builderForValue) {
          ensurePointListIsMutable();
          pointList_.add(index, builderForValue.build());
          
          return this;
        }
        public Builder addAllPointList(
            java.lang.Iterable<? extends message.HSGameGuide.GameGuide.Guide.Point> values) {
          ensurePointListIsMutable();
          super.addAll(values, pointList_);
          
          return this;
        }
        public Builder clearPointList() {
          pointList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          
          return this;
        }
        public Builder removePointList(int index) {
          ensurePointListIsMutable();
          pointList_.remove(index);
          
          return this;
        }
        
        // repeated float diameter = 5;
        private java.util.List<java.lang.Float> diameter_ = java.util.Collections.emptyList();;
        private void ensureDiameterIsMutable() {
          if (!((bitField0_ & 0x00000010) == 0x00000010)) {
            diameter_ = new java.util.ArrayList<java.lang.Float>(diameter_);
            bitField0_ |= 0x00000010;
           }
        }
        public java.util.List<java.lang.Float>
            getDiameterList() {
          return java.util.Collections.unmodifiableList(diameter_);
        }
        public int getDiameterCount() {
          return diameter_.size();
        }
        public float getDiameter(int index) {
          return diameter_.get(index);
        }
        public Builder setDiameter(
            int index, float value) {
          ensureDiameterIsMutable();
          diameter_.set(index, value);
          
          return this;
        }
        public Builder addDiameter(float value) {
          ensureDiameterIsMutable();
          diameter_.add(value);
          
          return this;
        }
        public Builder addAllDiameter(
            java.lang.Iterable<? extends java.lang.Float> values) {
          ensureDiameterIsMutable();
          super.addAll(values, diameter_);
          
          return this;
        }
        public Builder clearDiameter() {
          diameter_ = java.util.Collections.emptyList();;
          bitField0_ = (bitField0_ & ~0x00000010);
          
          return this;
        }
        
        // repeated float multiple = 6;
        private java.util.List<java.lang.Float> multiple_ = java.util.Collections.emptyList();;
        private void ensureMultipleIsMutable() {
          if (!((bitField0_ & 0x00000020) == 0x00000020)) {
            multiple_ = new java.util.ArrayList<java.lang.Float>(multiple_);
            bitField0_ |= 0x00000020;
           }
        }
        public java.util.List<java.lang.Float>
            getMultipleList() {
          return java.util.Collections.unmodifiableList(multiple_);
        }
        public int getMultipleCount() {
          return multiple_.size();
        }
        public float getMultiple(int index) {
          return multiple_.get(index);
        }
        public Builder setMultiple(
            int index, float value) {
          ensureMultipleIsMutable();
          multiple_.set(index, value);
          
          return this;
        }
        public Builder addMultiple(float value) {
          ensureMultipleIsMutable();
          multiple_.add(value);
          
          return this;
        }
        public Builder addAllMultiple(
            java.lang.Iterable<? extends java.lang.Float> values) {
          ensureMultipleIsMutable();
          super.addAll(values, multiple_);
          
          return this;
        }
        public Builder clearMultiple() {
          multiple_ = java.util.Collections.emptyList();;
          bitField0_ = (bitField0_ & ~0x00000020);
          
          return this;
        }
        
        // optional .message.GameGuide.Guide.Point describePos = 7;
        private message.HSGameGuide.GameGuide.Guide.Point describePos_ = message.HSGameGuide.GameGuide.Guide.Point.getDefaultInstance();
        public boolean hasDescribePos() {
          return ((bitField0_ & 0x00000040) == 0x00000040);
        }
        public message.HSGameGuide.GameGuide.Guide.Point getDescribePos() {
          return describePos_;
        }
        public Builder setDescribePos(message.HSGameGuide.GameGuide.Guide.Point value) {
          if (value == null) {
            throw new NullPointerException();
          }
          describePos_ = value;
          
          bitField0_ |= 0x00000040;
          return this;
        }
        public Builder setDescribePos(
            message.HSGameGuide.GameGuide.Guide.Point.Builder builderForValue) {
          describePos_ = builderForValue.build();
          
          bitField0_ |= 0x00000040;
          return this;
        }
        public Builder mergeDescribePos(message.HSGameGuide.GameGuide.Guide.Point value) {
          if (((bitField0_ & 0x00000040) == 0x00000040) &&
              describePos_ != message.HSGameGuide.GameGuide.Guide.Point.getDefaultInstance()) {
            describePos_ =
              message.HSGameGuide.GameGuide.Guide.Point.newBuilder(describePos_).mergeFrom(value).buildPartial();
          } else {
            describePos_ = value;
          }
          
          bitField0_ |= 0x00000040;
          return this;
        }
        public Builder clearDescribePos() {
          describePos_ = message.HSGameGuide.GameGuide.Guide.Point.getDefaultInstance();
          
          bitField0_ = (bitField0_ & ~0x00000040);
          return this;
        }
        
        // optional .message.GameGuide.Guide.TouchType touchType = 8;
        private message.HSGameGuide.GameGuide.Guide.TouchType touchType_ = message.HSGameGuide.GameGuide.Guide.TouchType.TouchType_leak;
        public boolean hasTouchType() {
          return ((bitField0_ & 0x00000080) == 0x00000080);
        }
        public message.HSGameGuide.GameGuide.Guide.TouchType getTouchType() {
          return touchType_;
        }
        public Builder setTouchType(message.HSGameGuide.GameGuide.Guide.TouchType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000080;
          touchType_ = value;
          
          return this;
        }
        public Builder clearTouchType() {
          bitField0_ = (bitField0_ & ~0x00000080);
          touchType_ = message.HSGameGuide.GameGuide.Guide.TouchType.TouchType_leak;
          
          return this;
        }
        
        // optional string describe = 9 [default = ""];
        private java.lang.Object describe_ = "";
        public boolean hasDescribe() {
          return ((bitField0_ & 0x00000100) == 0x00000100);
        }
        public String getDescribe() {
          java.lang.Object ref = describe_;
          if (!(ref instanceof String)) {
            String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
            describe_ = s;
            return s;
          } else {
            return (String) ref;
          }
        }
        public Builder setDescribe(String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
          describe_ = value;
          
          return this;
        }
        public Builder clearDescribe() {
          bitField0_ = (bitField0_ & ~0x00000100);
          describe_ = getDefaultInstance().getDescribe();
          
          return this;
        }
        void setDescribe(com.google.protobuf.ByteString value) {
          bitField0_ |= 0x00000100;
          describe_ = value;
          
        }
        
        // @@protoc_insertion_point(builder_scope:message.GameGuide.Guide)
      }
      
      static {
        defaultInstance = new Guide(true);
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:message.GameGuide.Guide)
    }
    
    // repeated .message.GameGuide.Guide guideList = 1;
    public static final int GUIDELIST_FIELD_NUMBER = 1;
    private java.util.List<message.HSGameGuide.GameGuide.Guide> guideList_;
    public java.util.List<message.HSGameGuide.GameGuide.Guide> getGuideListList() {
      return guideList_;
    }
    public java.util.List<? extends message.HSGameGuide.GameGuide.GuideOrBuilder> 
        getGuideListOrBuilderList() {
      return guideList_;
    }
    public int getGuideListCount() {
      return guideList_.size();
    }
    public message.HSGameGuide.GameGuide.Guide getGuideList(int index) {
      return guideList_.get(index);
    }
    public message.HSGameGuide.GameGuide.GuideOrBuilder getGuideListOrBuilder(
        int index) {
      return guideList_.get(index);
    }
    
    private void initFields() {
      guideList_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      for (int i = 0; i < getGuideListCount(); i++) {
        if (!getGuideList(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < guideList_.size(); i++) {
        output.writeMessage(1, guideList_.get(i));
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (int i = 0; i < guideList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, guideList_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static message.HSGameGuide.GameGuide parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static message.HSGameGuide.GameGuide parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static message.HSGameGuide.GameGuide parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static message.HSGameGuide.GameGuide parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static message.HSGameGuide.GameGuide parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static message.HSGameGuide.GameGuide parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static message.HSGameGuide.GameGuide parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static message.HSGameGuide.GameGuide parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static message.HSGameGuide.GameGuide parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static message.HSGameGuide.GameGuide parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(message.HSGameGuide.GameGuide prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          message.HSGameGuide.GameGuide, Builder>
        implements message.HSGameGuide.GameGuideOrBuilder {
      // Construct using message.HSGameGuide.GameGuide.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        guideList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public message.HSGameGuide.GameGuide getDefaultInstanceForType() {
        return message.HSGameGuide.GameGuide.getDefaultInstance();
      }
      
      public message.HSGameGuide.GameGuide build() {
        message.HSGameGuide.GameGuide result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private message.HSGameGuide.GameGuide buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        message.HSGameGuide.GameGuide result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public message.HSGameGuide.GameGuide buildPartial() {
        message.HSGameGuide.GameGuide result = new message.HSGameGuide.GameGuide(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          guideList_ = java.util.Collections.unmodifiableList(guideList_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.guideList_ = guideList_;
        return result;
      }
      
      public Builder mergeFrom(message.HSGameGuide.GameGuide other) {
        if (other == message.HSGameGuide.GameGuide.getDefaultInstance()) return this;
        if (!other.guideList_.isEmpty()) {
          if (guideList_.isEmpty()) {
            guideList_ = other.guideList_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureGuideListIsMutable();
            guideList_.addAll(other.guideList_);
          }
          
        }
        return this;
      }
      
      public final boolean isInitialized() {
        for (int i = 0; i < getGuideListCount(); i++) {
          if (!getGuideList(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 10: {
              message.HSGameGuide.GameGuide.Guide.Builder subBuilder = message.HSGameGuide.GameGuide.Guide.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addGuideList(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // repeated .message.GameGuide.Guide guideList = 1;
      private java.util.List<message.HSGameGuide.GameGuide.Guide> guideList_ =
        java.util.Collections.emptyList();
      private void ensureGuideListIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          guideList_ = new java.util.ArrayList<message.HSGameGuide.GameGuide.Guide>(guideList_);
          bitField0_ |= 0x00000001;
         }
      }
      
      public java.util.List<message.HSGameGuide.GameGuide.Guide> getGuideListList() {
        return java.util.Collections.unmodifiableList(guideList_);
      }
      public int getGuideListCount() {
        return guideList_.size();
      }
      public message.HSGameGuide.GameGuide.Guide getGuideList(int index) {
        return guideList_.get(index);
      }
      public Builder setGuideList(
          int index, message.HSGameGuide.GameGuide.Guide value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureGuideListIsMutable();
        guideList_.set(index, value);
        
        return this;
      }
      public Builder setGuideList(
          int index, message.HSGameGuide.GameGuide.Guide.Builder builderForValue) {
        ensureGuideListIsMutable();
        guideList_.set(index, builderForValue.build());
        
        return this;
      }
      public Builder addGuideList(message.HSGameGuide.GameGuide.Guide value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureGuideListIsMutable();
        guideList_.add(value);
        
        return this;
      }
      public Builder addGuideList(
          int index, message.HSGameGuide.GameGuide.Guide value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureGuideListIsMutable();
        guideList_.add(index, value);
        
        return this;
      }
      public Builder addGuideList(
          message.HSGameGuide.GameGuide.Guide.Builder builderForValue) {
        ensureGuideListIsMutable();
        guideList_.add(builderForValue.build());
        
        return this;
      }
      public Builder addGuideList(
          int index, message.HSGameGuide.GameGuide.Guide.Builder builderForValue) {
        ensureGuideListIsMutable();
        guideList_.add(index, builderForValue.build());
        
        return this;
      }
      public Builder addAllGuideList(
          java.lang.Iterable<? extends message.HSGameGuide.GameGuide.Guide> values) {
        ensureGuideListIsMutable();
        super.addAll(values, guideList_);
        
        return this;
      }
      public Builder clearGuideList() {
        guideList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        
        return this;
      }
      public Builder removeGuideList(int index) {
        ensureGuideListIsMutable();
        guideList_.remove(index);
        
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:message.GameGuide)
    }
    
    static {
      defaultInstance = new GameGuide(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:message.GameGuide)
  }
  
  
  static {
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
