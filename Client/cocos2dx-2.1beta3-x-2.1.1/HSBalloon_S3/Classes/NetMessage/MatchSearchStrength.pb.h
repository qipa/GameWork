// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MatchSearchStrength.proto

#ifndef PROTOBUF_MatchSearchStrength_2eproto__INCLUDED
#define PROTOBUF_MatchSearchStrength_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

namespace message {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_MatchSearchStrength_2eproto();
void protobuf_AssignDesc_MatchSearchStrength_2eproto();
void protobuf_ShutdownFile_MatchSearchStrength_2eproto();

class MatchSearchStrengthRequest;
class MatchSearchStrengthResponse;

// ===================================================================

class MatchSearchStrengthRequest : public ::google::protobuf::MessageLite {
 public:
  MatchSearchStrengthRequest();
  virtual ~MatchSearchStrengthRequest();

  MatchSearchStrengthRequest(const MatchSearchStrengthRequest& from);

  inline MatchSearchStrengthRequest& operator=(const MatchSearchStrengthRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const MatchSearchStrengthRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MatchSearchStrengthRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MatchSearchStrengthRequest* other);

  // implements Message ----------------------------------------------

  MatchSearchStrengthRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MatchSearchStrengthRequest& from);
  void MergeFrom(const MatchSearchStrengthRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string did = 1;
  inline bool has_did() const;
  inline void clear_did();
  static const int kDidFieldNumber = 1;
  inline const ::std::string& did() const;
  inline void set_did(const ::std::string& value);
  inline void set_did(const char* value);
  inline void set_did(const char* value, size_t size);
  inline ::std::string* mutable_did();
  inline ::std::string* release_did();
  inline void set_allocated_did(::std::string* did);

  // @@protoc_insertion_point(class_scope:message.MatchSearchStrengthRequest)
 private:
  inline void set_has_did();
  inline void clear_has_did();

  ::std::string* did_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_MatchSearchStrength_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_MatchSearchStrength_2eproto();
  #endif
  friend void protobuf_AssignDesc_MatchSearchStrength_2eproto();
  friend void protobuf_ShutdownFile_MatchSearchStrength_2eproto();

  void InitAsDefaultInstance();
  static MatchSearchStrengthRequest* default_instance_;
};
// -------------------------------------------------------------------

class MatchSearchStrengthResponse : public ::google::protobuf::MessageLite {
 public:
  MatchSearchStrengthResponse();
  virtual ~MatchSearchStrengthResponse();

  MatchSearchStrengthResponse(const MatchSearchStrengthResponse& from);

  inline MatchSearchStrengthResponse& operator=(const MatchSearchStrengthResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const MatchSearchStrengthResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MatchSearchStrengthResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MatchSearchStrengthResponse* other);

  // implements Message ----------------------------------------------

  MatchSearchStrengthResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MatchSearchStrengthResponse& from);
  void MergeFrom(const MatchSearchStrengthResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 strength = 1;
  inline bool has_strength() const;
  inline void clear_strength();
  static const int kStrengthFieldNumber = 1;
  inline ::google::protobuf::int32 strength() const;
  inline void set_strength(::google::protobuf::int32 value);

  // optional int32 seconds = 2;
  inline bool has_seconds() const;
  inline void clear_seconds();
  static const int kSecondsFieldNumber = 2;
  inline ::google::protobuf::int32 seconds() const;
  inline void set_seconds(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:message.MatchSearchStrengthResponse)
 private:
  inline void set_has_strength();
  inline void clear_has_strength();
  inline void set_has_seconds();
  inline void clear_has_seconds();

  ::google::protobuf::int32 strength_;
  ::google::protobuf::int32 seconds_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_MatchSearchStrength_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_MatchSearchStrength_2eproto();
  #endif
  friend void protobuf_AssignDesc_MatchSearchStrength_2eproto();
  friend void protobuf_ShutdownFile_MatchSearchStrength_2eproto();

  void InitAsDefaultInstance();
  static MatchSearchStrengthResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// MatchSearchStrengthRequest

// optional string did = 1;
inline bool MatchSearchStrengthRequest::has_did() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MatchSearchStrengthRequest::set_has_did() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MatchSearchStrengthRequest::clear_has_did() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MatchSearchStrengthRequest::clear_did() {
  if (did_ != &::google::protobuf::internal::kEmptyString) {
    did_->clear();
  }
  clear_has_did();
}
inline const ::std::string& MatchSearchStrengthRequest::did() const {
  return *did_;
}
inline void MatchSearchStrengthRequest::set_did(const ::std::string& value) {
  set_has_did();
  if (did_ == &::google::protobuf::internal::kEmptyString) {
    did_ = new ::std::string;
  }
  did_->assign(value);
}
inline void MatchSearchStrengthRequest::set_did(const char* value) {
  set_has_did();
  if (did_ == &::google::protobuf::internal::kEmptyString) {
    did_ = new ::std::string;
  }
  did_->assign(value);
}
inline void MatchSearchStrengthRequest::set_did(const char* value, size_t size) {
  set_has_did();
  if (did_ == &::google::protobuf::internal::kEmptyString) {
    did_ = new ::std::string;
  }
  did_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MatchSearchStrengthRequest::mutable_did() {
  set_has_did();
  if (did_ == &::google::protobuf::internal::kEmptyString) {
    did_ = new ::std::string;
  }
  return did_;
}
inline ::std::string* MatchSearchStrengthRequest::release_did() {
  clear_has_did();
  if (did_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = did_;
    did_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MatchSearchStrengthRequest::set_allocated_did(::std::string* did) {
  if (did_ != &::google::protobuf::internal::kEmptyString) {
    delete did_;
  }
  if (did) {
    set_has_did();
    did_ = did;
  } else {
    clear_has_did();
    did_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// MatchSearchStrengthResponse

// optional int32 strength = 1;
inline bool MatchSearchStrengthResponse::has_strength() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MatchSearchStrengthResponse::set_has_strength() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MatchSearchStrengthResponse::clear_has_strength() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MatchSearchStrengthResponse::clear_strength() {
  strength_ = 0;
  clear_has_strength();
}
inline ::google::protobuf::int32 MatchSearchStrengthResponse::strength() const {
  return strength_;
}
inline void MatchSearchStrengthResponse::set_strength(::google::protobuf::int32 value) {
  set_has_strength();
  strength_ = value;
}

// optional int32 seconds = 2;
inline bool MatchSearchStrengthResponse::has_seconds() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MatchSearchStrengthResponse::set_has_seconds() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MatchSearchStrengthResponse::clear_has_seconds() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MatchSearchStrengthResponse::clear_seconds() {
  seconds_ = 0;
  clear_has_seconds();
}
inline ::google::protobuf::int32 MatchSearchStrengthResponse::seconds() const {
  return seconds_;
}
inline void MatchSearchStrengthResponse::set_seconds(::google::protobuf::int32 value) {
  set_has_seconds();
  seconds_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace message

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MatchSearchStrength_2eproto__INCLUDED
