// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: LanJoinRoom.proto

#ifndef PROTOBUF_LanJoinRoom_2eproto__INCLUDED
#define PROTOBUF_LanJoinRoom_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

namespace message {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_LanJoinRoom_2eproto();
void protobuf_AssignDesc_LanJoinRoom_2eproto();
void protobuf_ShutdownFile_LanJoinRoom_2eproto();

class LanJoinLanRoomRequest;
class LanJoinRoomResponse;

// ===================================================================

class LanJoinLanRoomRequest : public ::google::protobuf::MessageLite {
 public:
  LanJoinLanRoomRequest();
  virtual ~LanJoinLanRoomRequest();

  LanJoinLanRoomRequest(const LanJoinLanRoomRequest& from);

  inline LanJoinLanRoomRequest& operator=(const LanJoinLanRoomRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const LanJoinLanRoomRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const LanJoinLanRoomRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(LanJoinLanRoomRequest* other);

  // implements Message ----------------------------------------------

  LanJoinLanRoomRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const LanJoinLanRoomRequest& from);
  void MergeFrom(const LanJoinLanRoomRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 jsonID = 1;
  inline bool has_jsonid() const;
  inline void clear_jsonid();
  static const int kJsonIDFieldNumber = 1;
  inline ::google::protobuf::int32 jsonid() const;
  inline void set_jsonid(::google::protobuf::int32 value);

  // required string JNI_EGG_USER_NAME = 2;
  inline bool has_jni_egg_user_name() const;
  inline void clear_jni_egg_user_name();
  static const int kJNIEGGUSERNAMEFieldNumber = 2;
  inline const ::std::string& jni_egg_user_name() const;
  inline void set_jni_egg_user_name(const ::std::string& value);
  inline void set_jni_egg_user_name(const char* value);
  inline void set_jni_egg_user_name(const char* value, size_t size);
  inline ::std::string* mutable_jni_egg_user_name();
  inline ::std::string* release_jni_egg_user_name();
  inline void set_allocated_jni_egg_user_name(::std::string* jni_egg_user_name);

  // required string JNI_EGG_ROOM_NAME = 3;
  inline bool has_jni_egg_room_name() const;
  inline void clear_jni_egg_room_name();
  static const int kJNIEGGROOMNAMEFieldNumber = 3;
  inline const ::std::string& jni_egg_room_name() const;
  inline void set_jni_egg_room_name(const ::std::string& value);
  inline void set_jni_egg_room_name(const char* value);
  inline void set_jni_egg_room_name(const char* value, size_t size);
  inline ::std::string* mutable_jni_egg_room_name();
  inline ::std::string* release_jni_egg_room_name();
  inline void set_allocated_jni_egg_room_name(::std::string* jni_egg_room_name);

  // required string JNI_EGG_SSID = 4;
  inline bool has_jni_egg_ssid() const;
  inline void clear_jni_egg_ssid();
  static const int kJNIEGGSSIDFieldNumber = 4;
  inline const ::std::string& jni_egg_ssid() const;
  inline void set_jni_egg_ssid(const ::std::string& value);
  inline void set_jni_egg_ssid(const char* value);
  inline void set_jni_egg_ssid(const char* value, size_t size);
  inline ::std::string* mutable_jni_egg_ssid();
  inline ::std::string* release_jni_egg_ssid();
  inline void set_allocated_jni_egg_ssid(::std::string* jni_egg_ssid);

  // @@protoc_insertion_point(class_scope:message.LanJoinLanRoomRequest)
 private:
  inline void set_has_jsonid();
  inline void clear_has_jsonid();
  inline void set_has_jni_egg_user_name();
  inline void clear_has_jni_egg_user_name();
  inline void set_has_jni_egg_room_name();
  inline void clear_has_jni_egg_room_name();
  inline void set_has_jni_egg_ssid();
  inline void clear_has_jni_egg_ssid();

  ::std::string* jni_egg_user_name_;
  ::std::string* jni_egg_room_name_;
  ::std::string* jni_egg_ssid_;
  ::google::protobuf::int32 jsonid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_LanJoinRoom_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_LanJoinRoom_2eproto();
  #endif
  friend void protobuf_AssignDesc_LanJoinRoom_2eproto();
  friend void protobuf_ShutdownFile_LanJoinRoom_2eproto();

  void InitAsDefaultInstance();
  static LanJoinLanRoomRequest* default_instance_;
};
// -------------------------------------------------------------------

class LanJoinRoomResponse : public ::google::protobuf::MessageLite {
 public:
  LanJoinRoomResponse();
  virtual ~LanJoinRoomResponse();

  LanJoinRoomResponse(const LanJoinRoomResponse& from);

  inline LanJoinRoomResponse& operator=(const LanJoinRoomResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const LanJoinRoomResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const LanJoinRoomResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(LanJoinRoomResponse* other);

  // implements Message ----------------------------------------------

  LanJoinRoomResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const LanJoinRoomResponse& from);
  void MergeFrom(const LanJoinRoomResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 jsonID = 1;
  inline bool has_jsonid() const;
  inline void clear_jsonid();
  static const int kJsonIDFieldNumber = 1;
  inline ::google::protobuf::int32 jsonid() const;
  inline void set_jsonid(::google::protobuf::int32 value);

  // required int32 JNI_EGG_RESULT = 2;
  inline bool has_jni_egg_result() const;
  inline void clear_jni_egg_result();
  static const int kJNIEGGRESULTFieldNumber = 2;
  inline ::google::protobuf::int32 jni_egg_result() const;
  inline void set_jni_egg_result(::google::protobuf::int32 value);

  // required int32 JNI_EGG_STATUS = 3;
  inline bool has_jni_egg_status() const;
  inline void clear_jni_egg_status();
  static const int kJNIEGGSTATUSFieldNumber = 3;
  inline ::google::protobuf::int32 jni_egg_status() const;
  inline void set_jni_egg_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:message.LanJoinRoomResponse)
 private:
  inline void set_has_jsonid();
  inline void clear_has_jsonid();
  inline void set_has_jni_egg_result();
  inline void clear_has_jni_egg_result();
  inline void set_has_jni_egg_status();
  inline void clear_has_jni_egg_status();

  ::google::protobuf::int32 jsonid_;
  ::google::protobuf::int32 jni_egg_result_;
  ::google::protobuf::int32 jni_egg_status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_LanJoinRoom_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_LanJoinRoom_2eproto();
  #endif
  friend void protobuf_AssignDesc_LanJoinRoom_2eproto();
  friend void protobuf_ShutdownFile_LanJoinRoom_2eproto();

  void InitAsDefaultInstance();
  static LanJoinRoomResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// LanJoinLanRoomRequest

// required int32 jsonID = 1;
inline bool LanJoinLanRoomRequest::has_jsonid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LanJoinLanRoomRequest::set_has_jsonid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LanJoinLanRoomRequest::clear_has_jsonid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LanJoinLanRoomRequest::clear_jsonid() {
  jsonid_ = 0;
  clear_has_jsonid();
}
inline ::google::protobuf::int32 LanJoinLanRoomRequest::jsonid() const {
  return jsonid_;
}
inline void LanJoinLanRoomRequest::set_jsonid(::google::protobuf::int32 value) {
  set_has_jsonid();
  jsonid_ = value;
}

// required string JNI_EGG_USER_NAME = 2;
inline bool LanJoinLanRoomRequest::has_jni_egg_user_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LanJoinLanRoomRequest::set_has_jni_egg_user_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LanJoinLanRoomRequest::clear_has_jni_egg_user_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LanJoinLanRoomRequest::clear_jni_egg_user_name() {
  if (jni_egg_user_name_ != &::google::protobuf::internal::kEmptyString) {
    jni_egg_user_name_->clear();
  }
  clear_has_jni_egg_user_name();
}
inline const ::std::string& LanJoinLanRoomRequest::jni_egg_user_name() const {
  return *jni_egg_user_name_;
}
inline void LanJoinLanRoomRequest::set_jni_egg_user_name(const ::std::string& value) {
  set_has_jni_egg_user_name();
  if (jni_egg_user_name_ == &::google::protobuf::internal::kEmptyString) {
    jni_egg_user_name_ = new ::std::string;
  }
  jni_egg_user_name_->assign(value);
}
inline void LanJoinLanRoomRequest::set_jni_egg_user_name(const char* value) {
  set_has_jni_egg_user_name();
  if (jni_egg_user_name_ == &::google::protobuf::internal::kEmptyString) {
    jni_egg_user_name_ = new ::std::string;
  }
  jni_egg_user_name_->assign(value);
}
inline void LanJoinLanRoomRequest::set_jni_egg_user_name(const char* value, size_t size) {
  set_has_jni_egg_user_name();
  if (jni_egg_user_name_ == &::google::protobuf::internal::kEmptyString) {
    jni_egg_user_name_ = new ::std::string;
  }
  jni_egg_user_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* LanJoinLanRoomRequest::mutable_jni_egg_user_name() {
  set_has_jni_egg_user_name();
  if (jni_egg_user_name_ == &::google::protobuf::internal::kEmptyString) {
    jni_egg_user_name_ = new ::std::string;
  }
  return jni_egg_user_name_;
}
inline ::std::string* LanJoinLanRoomRequest::release_jni_egg_user_name() {
  clear_has_jni_egg_user_name();
  if (jni_egg_user_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = jni_egg_user_name_;
    jni_egg_user_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void LanJoinLanRoomRequest::set_allocated_jni_egg_user_name(::std::string* jni_egg_user_name) {
  if (jni_egg_user_name_ != &::google::protobuf::internal::kEmptyString) {
    delete jni_egg_user_name_;
  }
  if (jni_egg_user_name) {
    set_has_jni_egg_user_name();
    jni_egg_user_name_ = jni_egg_user_name;
  } else {
    clear_has_jni_egg_user_name();
    jni_egg_user_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string JNI_EGG_ROOM_NAME = 3;
inline bool LanJoinLanRoomRequest::has_jni_egg_room_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LanJoinLanRoomRequest::set_has_jni_egg_room_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LanJoinLanRoomRequest::clear_has_jni_egg_room_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LanJoinLanRoomRequest::clear_jni_egg_room_name() {
  if (jni_egg_room_name_ != &::google::protobuf::internal::kEmptyString) {
    jni_egg_room_name_->clear();
  }
  clear_has_jni_egg_room_name();
}
inline const ::std::string& LanJoinLanRoomRequest::jni_egg_room_name() const {
  return *jni_egg_room_name_;
}
inline void LanJoinLanRoomRequest::set_jni_egg_room_name(const ::std::string& value) {
  set_has_jni_egg_room_name();
  if (jni_egg_room_name_ == &::google::protobuf::internal::kEmptyString) {
    jni_egg_room_name_ = new ::std::string;
  }
  jni_egg_room_name_->assign(value);
}
inline void LanJoinLanRoomRequest::set_jni_egg_room_name(const char* value) {
  set_has_jni_egg_room_name();
  if (jni_egg_room_name_ == &::google::protobuf::internal::kEmptyString) {
    jni_egg_room_name_ = new ::std::string;
  }
  jni_egg_room_name_->assign(value);
}
inline void LanJoinLanRoomRequest::set_jni_egg_room_name(const char* value, size_t size) {
  set_has_jni_egg_room_name();
  if (jni_egg_room_name_ == &::google::protobuf::internal::kEmptyString) {
    jni_egg_room_name_ = new ::std::string;
  }
  jni_egg_room_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* LanJoinLanRoomRequest::mutable_jni_egg_room_name() {
  set_has_jni_egg_room_name();
  if (jni_egg_room_name_ == &::google::protobuf::internal::kEmptyString) {
    jni_egg_room_name_ = new ::std::string;
  }
  return jni_egg_room_name_;
}
inline ::std::string* LanJoinLanRoomRequest::release_jni_egg_room_name() {
  clear_has_jni_egg_room_name();
  if (jni_egg_room_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = jni_egg_room_name_;
    jni_egg_room_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void LanJoinLanRoomRequest::set_allocated_jni_egg_room_name(::std::string* jni_egg_room_name) {
  if (jni_egg_room_name_ != &::google::protobuf::internal::kEmptyString) {
    delete jni_egg_room_name_;
  }
  if (jni_egg_room_name) {
    set_has_jni_egg_room_name();
    jni_egg_room_name_ = jni_egg_room_name;
  } else {
    clear_has_jni_egg_room_name();
    jni_egg_room_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string JNI_EGG_SSID = 4;
inline bool LanJoinLanRoomRequest::has_jni_egg_ssid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LanJoinLanRoomRequest::set_has_jni_egg_ssid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LanJoinLanRoomRequest::clear_has_jni_egg_ssid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LanJoinLanRoomRequest::clear_jni_egg_ssid() {
  if (jni_egg_ssid_ != &::google::protobuf::internal::kEmptyString) {
    jni_egg_ssid_->clear();
  }
  clear_has_jni_egg_ssid();
}
inline const ::std::string& LanJoinLanRoomRequest::jni_egg_ssid() const {
  return *jni_egg_ssid_;
}
inline void LanJoinLanRoomRequest::set_jni_egg_ssid(const ::std::string& value) {
  set_has_jni_egg_ssid();
  if (jni_egg_ssid_ == &::google::protobuf::internal::kEmptyString) {
    jni_egg_ssid_ = new ::std::string;
  }
  jni_egg_ssid_->assign(value);
}
inline void LanJoinLanRoomRequest::set_jni_egg_ssid(const char* value) {
  set_has_jni_egg_ssid();
  if (jni_egg_ssid_ == &::google::protobuf::internal::kEmptyString) {
    jni_egg_ssid_ = new ::std::string;
  }
  jni_egg_ssid_->assign(value);
}
inline void LanJoinLanRoomRequest::set_jni_egg_ssid(const char* value, size_t size) {
  set_has_jni_egg_ssid();
  if (jni_egg_ssid_ == &::google::protobuf::internal::kEmptyString) {
    jni_egg_ssid_ = new ::std::string;
  }
  jni_egg_ssid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* LanJoinLanRoomRequest::mutable_jni_egg_ssid() {
  set_has_jni_egg_ssid();
  if (jni_egg_ssid_ == &::google::protobuf::internal::kEmptyString) {
    jni_egg_ssid_ = new ::std::string;
  }
  return jni_egg_ssid_;
}
inline ::std::string* LanJoinLanRoomRequest::release_jni_egg_ssid() {
  clear_has_jni_egg_ssid();
  if (jni_egg_ssid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = jni_egg_ssid_;
    jni_egg_ssid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void LanJoinLanRoomRequest::set_allocated_jni_egg_ssid(::std::string* jni_egg_ssid) {
  if (jni_egg_ssid_ != &::google::protobuf::internal::kEmptyString) {
    delete jni_egg_ssid_;
  }
  if (jni_egg_ssid) {
    set_has_jni_egg_ssid();
    jni_egg_ssid_ = jni_egg_ssid;
  } else {
    clear_has_jni_egg_ssid();
    jni_egg_ssid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// LanJoinRoomResponse

// required int32 jsonID = 1;
inline bool LanJoinRoomResponse::has_jsonid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LanJoinRoomResponse::set_has_jsonid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LanJoinRoomResponse::clear_has_jsonid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LanJoinRoomResponse::clear_jsonid() {
  jsonid_ = 0;
  clear_has_jsonid();
}
inline ::google::protobuf::int32 LanJoinRoomResponse::jsonid() const {
  return jsonid_;
}
inline void LanJoinRoomResponse::set_jsonid(::google::protobuf::int32 value) {
  set_has_jsonid();
  jsonid_ = value;
}

// required int32 JNI_EGG_RESULT = 2;
inline bool LanJoinRoomResponse::has_jni_egg_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LanJoinRoomResponse::set_has_jni_egg_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LanJoinRoomResponse::clear_has_jni_egg_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LanJoinRoomResponse::clear_jni_egg_result() {
  jni_egg_result_ = 0;
  clear_has_jni_egg_result();
}
inline ::google::protobuf::int32 LanJoinRoomResponse::jni_egg_result() const {
  return jni_egg_result_;
}
inline void LanJoinRoomResponse::set_jni_egg_result(::google::protobuf::int32 value) {
  set_has_jni_egg_result();
  jni_egg_result_ = value;
}

// required int32 JNI_EGG_STATUS = 3;
inline bool LanJoinRoomResponse::has_jni_egg_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LanJoinRoomResponse::set_has_jni_egg_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LanJoinRoomResponse::clear_has_jni_egg_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LanJoinRoomResponse::clear_jni_egg_status() {
  jni_egg_status_ = 0;
  clear_has_jni_egg_status();
}
inline ::google::protobuf::int32 LanJoinRoomResponse::jni_egg_status() const {
  return jni_egg_status_;
}
inline void LanJoinRoomResponse::set_jni_egg_status(::google::protobuf::int32 value) {
  set_has_jni_egg_status();
  jni_egg_status_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace message

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_LanJoinRoom_2eproto__INCLUDED
