// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BattleReady.proto

#ifndef PROTOBUF_BattleReady_2eproto__INCLUDED
#define PROTOBUF_BattleReady_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

namespace message {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_BattleReady_2eproto();
void protobuf_AssignDesc_BattleReady_2eproto();
void protobuf_ShutdownFile_BattleReady_2eproto();

class BattleReadyRequest;
class BattleReadyResponse;

enum BattleReadyRequest_TYPE_ACTION {
  BattleReadyRequest_TYPE_ACTION_ACTION_UNKONW = 1,
  BattleReadyRequest_TYPE_ACTION_ACTION_READY = 2,
  BattleReadyRequest_TYPE_ACTION_ACTION_CANCLE = 3
};
bool BattleReadyRequest_TYPE_ACTION_IsValid(int value);
const BattleReadyRequest_TYPE_ACTION BattleReadyRequest_TYPE_ACTION_TYPE_ACTION_MIN = BattleReadyRequest_TYPE_ACTION_ACTION_UNKONW;
const BattleReadyRequest_TYPE_ACTION BattleReadyRequest_TYPE_ACTION_TYPE_ACTION_MAX = BattleReadyRequest_TYPE_ACTION_ACTION_CANCLE;
const int BattleReadyRequest_TYPE_ACTION_TYPE_ACTION_ARRAYSIZE = BattleReadyRequest_TYPE_ACTION_TYPE_ACTION_MAX + 1;

enum BattleReadyResponse_BattleReadyStatus {
  BattleReadyResponse_BattleReadyStatus_OK = 1
};
bool BattleReadyResponse_BattleReadyStatus_IsValid(int value);
const BattleReadyResponse_BattleReadyStatus BattleReadyResponse_BattleReadyStatus_BattleReadyStatus_MIN = BattleReadyResponse_BattleReadyStatus_OK;
const BattleReadyResponse_BattleReadyStatus BattleReadyResponse_BattleReadyStatus_BattleReadyStatus_MAX = BattleReadyResponse_BattleReadyStatus_OK;
const int BattleReadyResponse_BattleReadyStatus_BattleReadyStatus_ARRAYSIZE = BattleReadyResponse_BattleReadyStatus_BattleReadyStatus_MAX + 1;

enum BattleReadyResponse_RequestPlayer {
  BattleReadyResponse_RequestPlayer_SELF = 1,
  BattleReadyResponse_RequestPlayer_TARGET = 2
};
bool BattleReadyResponse_RequestPlayer_IsValid(int value);
const BattleReadyResponse_RequestPlayer BattleReadyResponse_RequestPlayer_RequestPlayer_MIN = BattleReadyResponse_RequestPlayer_SELF;
const BattleReadyResponse_RequestPlayer BattleReadyResponse_RequestPlayer_RequestPlayer_MAX = BattleReadyResponse_RequestPlayer_TARGET;
const int BattleReadyResponse_RequestPlayer_RequestPlayer_ARRAYSIZE = BattleReadyResponse_RequestPlayer_RequestPlayer_MAX + 1;

// ===================================================================

class BattleReadyRequest : public ::google::protobuf::MessageLite {
 public:
  BattleReadyRequest();
  virtual ~BattleReadyRequest();

  BattleReadyRequest(const BattleReadyRequest& from);

  inline BattleReadyRequest& operator=(const BattleReadyRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const BattleReadyRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const BattleReadyRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(BattleReadyRequest* other);

  // implements Message ----------------------------------------------

  BattleReadyRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const BattleReadyRequest& from);
  void MergeFrom(const BattleReadyRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  typedef BattleReadyRequest_TYPE_ACTION TYPE_ACTION;
  static const TYPE_ACTION ACTION_UNKONW = BattleReadyRequest_TYPE_ACTION_ACTION_UNKONW;
  static const TYPE_ACTION ACTION_READY = BattleReadyRequest_TYPE_ACTION_ACTION_READY;
  static const TYPE_ACTION ACTION_CANCLE = BattleReadyRequest_TYPE_ACTION_ACTION_CANCLE;
  static inline bool TYPE_ACTION_IsValid(int value) {
    return BattleReadyRequest_TYPE_ACTION_IsValid(value);
  }
  static const TYPE_ACTION TYPE_ACTION_MIN =
    BattleReadyRequest_TYPE_ACTION_TYPE_ACTION_MIN;
  static const TYPE_ACTION TYPE_ACTION_MAX =
    BattleReadyRequest_TYPE_ACTION_TYPE_ACTION_MAX;
  static const int TYPE_ACTION_ARRAYSIZE =
    BattleReadyRequest_TYPE_ACTION_TYPE_ACTION_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // required string did = 1;
  inline bool has_did() const;
  inline void clear_did();
  static const int kDidFieldNumber = 1;
  inline const ::std::string& did() const;
  inline void set_did(const ::std::string& value);
  inline void set_did(const char* value);
  inline void set_did(const char* value, size_t size);
  inline ::std::string* mutable_did();
  inline ::std::string* release_did();
  inline void set_allocated_did(::std::string* did);

  // required .message.BattleReadyRequest.TYPE_ACTION type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::message::BattleReadyRequest_TYPE_ACTION type() const;
  inline void set_type(::message::BattleReadyRequest_TYPE_ACTION value);

  // @@protoc_insertion_point(class_scope:message.BattleReadyRequest)
 private:
  inline void set_has_did();
  inline void clear_has_did();
  inline void set_has_type();
  inline void clear_has_type();

  ::std::string* did_;
  int type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_BattleReady_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_BattleReady_2eproto();
  #endif
  friend void protobuf_AssignDesc_BattleReady_2eproto();
  friend void protobuf_ShutdownFile_BattleReady_2eproto();

  void InitAsDefaultInstance();
  static BattleReadyRequest* default_instance_;
};
// -------------------------------------------------------------------

class BattleReadyResponse : public ::google::protobuf::MessageLite {
 public:
  BattleReadyResponse();
  virtual ~BattleReadyResponse();

  BattleReadyResponse(const BattleReadyResponse& from);

  inline BattleReadyResponse& operator=(const BattleReadyResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const BattleReadyResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const BattleReadyResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(BattleReadyResponse* other);

  // implements Message ----------------------------------------------

  BattleReadyResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const BattleReadyResponse& from);
  void MergeFrom(const BattleReadyResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  typedef BattleReadyResponse_BattleReadyStatus BattleReadyStatus;
  static const BattleReadyStatus OK = BattleReadyResponse_BattleReadyStatus_OK;
  static inline bool BattleReadyStatus_IsValid(int value) {
    return BattleReadyResponse_BattleReadyStatus_IsValid(value);
  }
  static const BattleReadyStatus BattleReadyStatus_MIN =
    BattleReadyResponse_BattleReadyStatus_BattleReadyStatus_MIN;
  static const BattleReadyStatus BattleReadyStatus_MAX =
    BattleReadyResponse_BattleReadyStatus_BattleReadyStatus_MAX;
  static const int BattleReadyStatus_ARRAYSIZE =
    BattleReadyResponse_BattleReadyStatus_BattleReadyStatus_ARRAYSIZE;

  typedef BattleReadyResponse_RequestPlayer RequestPlayer;
  static const RequestPlayer SELF = BattleReadyResponse_RequestPlayer_SELF;
  static const RequestPlayer TARGET = BattleReadyResponse_RequestPlayer_TARGET;
  static inline bool RequestPlayer_IsValid(int value) {
    return BattleReadyResponse_RequestPlayer_IsValid(value);
  }
  static const RequestPlayer RequestPlayer_MIN =
    BattleReadyResponse_RequestPlayer_RequestPlayer_MIN;
  static const RequestPlayer RequestPlayer_MAX =
    BattleReadyResponse_RequestPlayer_RequestPlayer_MAX;
  static const int RequestPlayer_ARRAYSIZE =
    BattleReadyResponse_RequestPlayer_RequestPlayer_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // required .message.BattleReadyResponse.BattleReadyStatus status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::message::BattleReadyResponse_BattleReadyStatus status() const;
  inline void set_status(::message::BattleReadyResponse_BattleReadyStatus value);

  // required .message.BattleReadyResponse.RequestPlayer player = 2;
  inline bool has_player() const;
  inline void clear_player();
  static const int kPlayerFieldNumber = 2;
  inline ::message::BattleReadyResponse_RequestPlayer player() const;
  inline void set_player(::message::BattleReadyResponse_RequestPlayer value);

  // @@protoc_insertion_point(class_scope:message.BattleReadyResponse)
 private:
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_player();
  inline void clear_has_player();

  int status_;
  int player_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_BattleReady_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_BattleReady_2eproto();
  #endif
  friend void protobuf_AssignDesc_BattleReady_2eproto();
  friend void protobuf_ShutdownFile_BattleReady_2eproto();

  void InitAsDefaultInstance();
  static BattleReadyResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// BattleReadyRequest

// required string did = 1;
inline bool BattleReadyRequest::has_did() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BattleReadyRequest::set_has_did() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BattleReadyRequest::clear_has_did() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BattleReadyRequest::clear_did() {
  if (did_ != &::google::protobuf::internal::kEmptyString) {
    did_->clear();
  }
  clear_has_did();
}
inline const ::std::string& BattleReadyRequest::did() const {
  return *did_;
}
inline void BattleReadyRequest::set_did(const ::std::string& value) {
  set_has_did();
  if (did_ == &::google::protobuf::internal::kEmptyString) {
    did_ = new ::std::string;
  }
  did_->assign(value);
}
inline void BattleReadyRequest::set_did(const char* value) {
  set_has_did();
  if (did_ == &::google::protobuf::internal::kEmptyString) {
    did_ = new ::std::string;
  }
  did_->assign(value);
}
inline void BattleReadyRequest::set_did(const char* value, size_t size) {
  set_has_did();
  if (did_ == &::google::protobuf::internal::kEmptyString) {
    did_ = new ::std::string;
  }
  did_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BattleReadyRequest::mutable_did() {
  set_has_did();
  if (did_ == &::google::protobuf::internal::kEmptyString) {
    did_ = new ::std::string;
  }
  return did_;
}
inline ::std::string* BattleReadyRequest::release_did() {
  clear_has_did();
  if (did_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = did_;
    did_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void BattleReadyRequest::set_allocated_did(::std::string* did) {
  if (did_ != &::google::protobuf::internal::kEmptyString) {
    delete did_;
  }
  if (did) {
    set_has_did();
    did_ = did;
  } else {
    clear_has_did();
    did_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required .message.BattleReadyRequest.TYPE_ACTION type = 2;
inline bool BattleReadyRequest::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BattleReadyRequest::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BattleReadyRequest::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BattleReadyRequest::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::message::BattleReadyRequest_TYPE_ACTION BattleReadyRequest::type() const {
  return static_cast< ::message::BattleReadyRequest_TYPE_ACTION >(type_);
}
inline void BattleReadyRequest::set_type(::message::BattleReadyRequest_TYPE_ACTION value) {
  assert(::message::BattleReadyRequest_TYPE_ACTION_IsValid(value));
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// BattleReadyResponse

// required .message.BattleReadyResponse.BattleReadyStatus status = 1;
inline bool BattleReadyResponse::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BattleReadyResponse::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BattleReadyResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BattleReadyResponse::clear_status() {
  status_ = 1;
  clear_has_status();
}
inline ::message::BattleReadyResponse_BattleReadyStatus BattleReadyResponse::status() const {
  return static_cast< ::message::BattleReadyResponse_BattleReadyStatus >(status_);
}
inline void BattleReadyResponse::set_status(::message::BattleReadyResponse_BattleReadyStatus value) {
  assert(::message::BattleReadyResponse_BattleReadyStatus_IsValid(value));
  set_has_status();
  status_ = value;
}

// required .message.BattleReadyResponse.RequestPlayer player = 2;
inline bool BattleReadyResponse::has_player() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BattleReadyResponse::set_has_player() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BattleReadyResponse::clear_has_player() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BattleReadyResponse::clear_player() {
  player_ = 1;
  clear_has_player();
}
inline ::message::BattleReadyResponse_RequestPlayer BattleReadyResponse::player() const {
  return static_cast< ::message::BattleReadyResponse_RequestPlayer >(player_);
}
inline void BattleReadyResponse::set_player(::message::BattleReadyResponse_RequestPlayer value) {
  assert(::message::BattleReadyResponse_RequestPlayer_IsValid(value));
  set_has_player();
  player_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace message

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_BattleReady_2eproto__INCLUDED
