// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MatchBuyFigure.proto

#ifndef PROTOBUF_MatchBuyFigure_2eproto__INCLUDED
#define PROTOBUF_MatchBuyFigure_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

namespace message {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_MatchBuyFigure_2eproto();
void protobuf_AssignDesc_MatchBuyFigure_2eproto();
void protobuf_ShutdownFile_MatchBuyFigure_2eproto();

class MatchBuyFigureRequest;
class MatchBuyFigureResponse;

enum MatchBuyFigureResponse_ResultState {
  MatchBuyFigureResponse_ResultState_SUCCESS = 1,
  MatchBuyFigureResponse_ResultState_FAIL = 2
};
bool MatchBuyFigureResponse_ResultState_IsValid(int value);
const MatchBuyFigureResponse_ResultState MatchBuyFigureResponse_ResultState_ResultState_MIN = MatchBuyFigureResponse_ResultState_SUCCESS;
const MatchBuyFigureResponse_ResultState MatchBuyFigureResponse_ResultState_ResultState_MAX = MatchBuyFigureResponse_ResultState_FAIL;
const int MatchBuyFigureResponse_ResultState_ResultState_ARRAYSIZE = MatchBuyFigureResponse_ResultState_ResultState_MAX + 1;

// ===================================================================

class MatchBuyFigureRequest : public ::google::protobuf::MessageLite {
 public:
  MatchBuyFigureRequest();
  virtual ~MatchBuyFigureRequest();

  MatchBuyFigureRequest(const MatchBuyFigureRequest& from);

  inline MatchBuyFigureRequest& operator=(const MatchBuyFigureRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const MatchBuyFigureRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MatchBuyFigureRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MatchBuyFigureRequest* other);

  // implements Message ----------------------------------------------

  MatchBuyFigureRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MatchBuyFigureRequest& from);
  void MergeFrom(const MatchBuyFigureRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string did = 1;
  inline bool has_did() const;
  inline void clear_did();
  static const int kDidFieldNumber = 1;
  inline const ::std::string& did() const;
  inline void set_did(const ::std::string& value);
  inline void set_did(const char* value);
  inline void set_did(const char* value, size_t size);
  inline ::std::string* mutable_did();
  inline ::std::string* release_did();
  inline void set_allocated_did(::std::string* did);

  // required uint32 figureId = 2;
  inline bool has_figureid() const;
  inline void clear_figureid();
  static const int kFigureIdFieldNumber = 2;
  inline ::google::protobuf::uint32 figureid() const;
  inline void set_figureid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:message.MatchBuyFigureRequest)
 private:
  inline void set_has_did();
  inline void clear_has_did();
  inline void set_has_figureid();
  inline void clear_has_figureid();

  ::std::string* did_;
  ::google::protobuf::uint32 figureid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_MatchBuyFigure_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_MatchBuyFigure_2eproto();
  #endif
  friend void protobuf_AssignDesc_MatchBuyFigure_2eproto();
  friend void protobuf_ShutdownFile_MatchBuyFigure_2eproto();

  void InitAsDefaultInstance();
  static MatchBuyFigureRequest* default_instance_;
};
// -------------------------------------------------------------------

class MatchBuyFigureResponse : public ::google::protobuf::MessageLite {
 public:
  MatchBuyFigureResponse();
  virtual ~MatchBuyFigureResponse();

  MatchBuyFigureResponse(const MatchBuyFigureResponse& from);

  inline MatchBuyFigureResponse& operator=(const MatchBuyFigureResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const MatchBuyFigureResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MatchBuyFigureResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MatchBuyFigureResponse* other);

  // implements Message ----------------------------------------------

  MatchBuyFigureResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MatchBuyFigureResponse& from);
  void MergeFrom(const MatchBuyFigureResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  typedef MatchBuyFigureResponse_ResultState ResultState;
  static const ResultState SUCCESS = MatchBuyFigureResponse_ResultState_SUCCESS;
  static const ResultState FAIL = MatchBuyFigureResponse_ResultState_FAIL;
  static inline bool ResultState_IsValid(int value) {
    return MatchBuyFigureResponse_ResultState_IsValid(value);
  }
  static const ResultState ResultState_MIN =
    MatchBuyFigureResponse_ResultState_ResultState_MIN;
  static const ResultState ResultState_MAX =
    MatchBuyFigureResponse_ResultState_ResultState_MAX;
  static const int ResultState_ARRAYSIZE =
    MatchBuyFigureResponse_ResultState_ResultState_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // required .message.MatchBuyFigureResponse.ResultState state = 1;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 1;
  inline ::message::MatchBuyFigureResponse_ResultState state() const;
  inline void set_state(::message::MatchBuyFigureResponse_ResultState value);

  // @@protoc_insertion_point(class_scope:message.MatchBuyFigureResponse)
 private:
  inline void set_has_state();
  inline void clear_has_state();

  int state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_MatchBuyFigure_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_MatchBuyFigure_2eproto();
  #endif
  friend void protobuf_AssignDesc_MatchBuyFigure_2eproto();
  friend void protobuf_ShutdownFile_MatchBuyFigure_2eproto();

  void InitAsDefaultInstance();
  static MatchBuyFigureResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// MatchBuyFigureRequest

// optional string did = 1;
inline bool MatchBuyFigureRequest::has_did() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MatchBuyFigureRequest::set_has_did() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MatchBuyFigureRequest::clear_has_did() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MatchBuyFigureRequest::clear_did() {
  if (did_ != &::google::protobuf::internal::kEmptyString) {
    did_->clear();
  }
  clear_has_did();
}
inline const ::std::string& MatchBuyFigureRequest::did() const {
  return *did_;
}
inline void MatchBuyFigureRequest::set_did(const ::std::string& value) {
  set_has_did();
  if (did_ == &::google::protobuf::internal::kEmptyString) {
    did_ = new ::std::string;
  }
  did_->assign(value);
}
inline void MatchBuyFigureRequest::set_did(const char* value) {
  set_has_did();
  if (did_ == &::google::protobuf::internal::kEmptyString) {
    did_ = new ::std::string;
  }
  did_->assign(value);
}
inline void MatchBuyFigureRequest::set_did(const char* value, size_t size) {
  set_has_did();
  if (did_ == &::google::protobuf::internal::kEmptyString) {
    did_ = new ::std::string;
  }
  did_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MatchBuyFigureRequest::mutable_did() {
  set_has_did();
  if (did_ == &::google::protobuf::internal::kEmptyString) {
    did_ = new ::std::string;
  }
  return did_;
}
inline ::std::string* MatchBuyFigureRequest::release_did() {
  clear_has_did();
  if (did_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = did_;
    did_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MatchBuyFigureRequest::set_allocated_did(::std::string* did) {
  if (did_ != &::google::protobuf::internal::kEmptyString) {
    delete did_;
  }
  if (did) {
    set_has_did();
    did_ = did;
  } else {
    clear_has_did();
    did_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 figureId = 2;
inline bool MatchBuyFigureRequest::has_figureid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MatchBuyFigureRequest::set_has_figureid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MatchBuyFigureRequest::clear_has_figureid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MatchBuyFigureRequest::clear_figureid() {
  figureid_ = 0u;
  clear_has_figureid();
}
inline ::google::protobuf::uint32 MatchBuyFigureRequest::figureid() const {
  return figureid_;
}
inline void MatchBuyFigureRequest::set_figureid(::google::protobuf::uint32 value) {
  set_has_figureid();
  figureid_ = value;
}

// -------------------------------------------------------------------

// MatchBuyFigureResponse

// required .message.MatchBuyFigureResponse.ResultState state = 1;
inline bool MatchBuyFigureResponse::has_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MatchBuyFigureResponse::set_has_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MatchBuyFigureResponse::clear_has_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MatchBuyFigureResponse::clear_state() {
  state_ = 1;
  clear_has_state();
}
inline ::message::MatchBuyFigureResponse_ResultState MatchBuyFigureResponse::state() const {
  return static_cast< ::message::MatchBuyFigureResponse_ResultState >(state_);
}
inline void MatchBuyFigureResponse::set_state(::message::MatchBuyFigureResponse_ResultState value) {
  assert(::message::MatchBuyFigureResponse_ResultState_IsValid(value));
  set_has_state();
  state_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace message

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MatchBuyFigure_2eproto__INCLUDED
