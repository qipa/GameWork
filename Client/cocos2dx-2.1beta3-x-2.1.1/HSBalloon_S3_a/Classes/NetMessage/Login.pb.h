// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Login.proto

#ifndef PROTOBUF_Login_2eproto__INCLUDED
#define PROTOBUF_Login_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "Address.pb.h"
#include "DailyRewardSystem.pb.h"
// @@protoc_insertion_point(includes)

namespace message {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Login_2eproto();
void protobuf_AssignDesc_Login_2eproto();
void protobuf_ShutdownFile_Login_2eproto();

class LoginRequest;
class LoginResponse;

enum LoginResponse_LoginStatus {
  LoginResponse_LoginStatus_LoginStatus_SUCCESS = 1,
  LoginResponse_LoginStatus_LoginStatus_FAIL = 0
};
bool LoginResponse_LoginStatus_IsValid(int value);
const LoginResponse_LoginStatus LoginResponse_LoginStatus_LoginStatus_MIN = LoginResponse_LoginStatus_LoginStatus_FAIL;
const LoginResponse_LoginStatus LoginResponse_LoginStatus_LoginStatus_MAX = LoginResponse_LoginStatus_LoginStatus_SUCCESS;
const int LoginResponse_LoginStatus_LoginStatus_ARRAYSIZE = LoginResponse_LoginStatus_LoginStatus_MAX + 1;

// ===================================================================

class LoginRequest : public ::google::protobuf::MessageLite {
 public:
  LoginRequest();
  virtual ~LoginRequest();

  LoginRequest(const LoginRequest& from);

  inline LoginRequest& operator=(const LoginRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const LoginRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const LoginRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(LoginRequest* other);

  // implements Message ----------------------------------------------

  LoginRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const LoginRequest& from);
  void MergeFrom(const LoginRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:message.LoginRequest)
 private:


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_Login_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_Login_2eproto();
  #endif
  friend void protobuf_AssignDesc_Login_2eproto();
  friend void protobuf_ShutdownFile_Login_2eproto();

  void InitAsDefaultInstance();
  static LoginRequest* default_instance_;
};
// -------------------------------------------------------------------

class LoginResponse : public ::google::protobuf::MessageLite {
 public:
  LoginResponse();
  virtual ~LoginResponse();

  LoginResponse(const LoginResponse& from);

  inline LoginResponse& operator=(const LoginResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const LoginResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const LoginResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(LoginResponse* other);

  // implements Message ----------------------------------------------

  LoginResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const LoginResponse& from);
  void MergeFrom(const LoginResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  typedef LoginResponse_LoginStatus LoginStatus;
  static const LoginStatus LoginStatus_SUCCESS = LoginResponse_LoginStatus_LoginStatus_SUCCESS;
  static const LoginStatus LoginStatus_FAIL = LoginResponse_LoginStatus_LoginStatus_FAIL;
  static inline bool LoginStatus_IsValid(int value) {
    return LoginResponse_LoginStatus_IsValid(value);
  }
  static const LoginStatus LoginStatus_MIN =
    LoginResponse_LoginStatus_LoginStatus_MIN;
  static const LoginStatus LoginStatus_MAX =
    LoginResponse_LoginStatus_LoginStatus_MAX;
  static const int LoginStatus_ARRAYSIZE =
    LoginResponse_LoginStatus_LoginStatus_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // required .message.LoginResponse.LoginStatus status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::message::LoginResponse_LoginStatus status() const;
  inline void set_status(::message::LoginResponse_LoginStatus value);

  // optional .message.NetAddress address = 2;
  inline bool has_address() const;
  inline void clear_address();
  static const int kAddressFieldNumber = 2;
  inline const ::message::NetAddress& address() const;
  inline ::message::NetAddress* mutable_address();
  inline ::message::NetAddress* release_address();
  inline void set_allocated_address(::message::NetAddress* address);

  // optional .message.DailyRewardSystemData dailyRewardData = 3;
  inline bool has_dailyrewarddata() const;
  inline void clear_dailyrewarddata();
  static const int kDailyRewardDataFieldNumber = 3;
  inline const ::message::DailyRewardSystemData& dailyrewarddata() const;
  inline ::message::DailyRewardSystemData* mutable_dailyrewarddata();
  inline ::message::DailyRewardSystemData* release_dailyrewarddata();
  inline void set_allocated_dailyrewarddata(::message::DailyRewardSystemData* dailyrewarddata);

  // @@protoc_insertion_point(class_scope:message.LoginResponse)
 private:
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_address();
  inline void clear_has_address();
  inline void set_has_dailyrewarddata();
  inline void clear_has_dailyrewarddata();

  ::message::NetAddress* address_;
  ::message::DailyRewardSystemData* dailyrewarddata_;
  int status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_Login_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_Login_2eproto();
  #endif
  friend void protobuf_AssignDesc_Login_2eproto();
  friend void protobuf_ShutdownFile_Login_2eproto();

  void InitAsDefaultInstance();
  static LoginResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// LoginRequest

// -------------------------------------------------------------------

// LoginResponse

// required .message.LoginResponse.LoginStatus status = 1;
inline bool LoginResponse::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginResponse::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginResponse::clear_status() {
  status_ = 1;
  clear_has_status();
}
inline ::message::LoginResponse_LoginStatus LoginResponse::status() const {
  return static_cast< ::message::LoginResponse_LoginStatus >(status_);
}
inline void LoginResponse::set_status(::message::LoginResponse_LoginStatus value) {
  assert(::message::LoginResponse_LoginStatus_IsValid(value));
  set_has_status();
  status_ = value;
}

// optional .message.NetAddress address = 2;
inline bool LoginResponse::has_address() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoginResponse::set_has_address() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LoginResponse::clear_has_address() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LoginResponse::clear_address() {
  if (address_ != NULL) address_->::message::NetAddress::Clear();
  clear_has_address();
}
inline const ::message::NetAddress& LoginResponse::address() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return address_ != NULL ? *address_ : *default_instance().address_;
#else
  return address_ != NULL ? *address_ : *default_instance_->address_;
#endif
}
inline ::message::NetAddress* LoginResponse::mutable_address() {
  set_has_address();
  if (address_ == NULL) address_ = new ::message::NetAddress;
  return address_;
}
inline ::message::NetAddress* LoginResponse::release_address() {
  clear_has_address();
  ::message::NetAddress* temp = address_;
  address_ = NULL;
  return temp;
}
inline void LoginResponse::set_allocated_address(::message::NetAddress* address) {
  delete address_;
  address_ = address;
  if (address) {
    set_has_address();
  } else {
    clear_has_address();
  }
}

// optional .message.DailyRewardSystemData dailyRewardData = 3;
inline bool LoginResponse::has_dailyrewarddata() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LoginResponse::set_has_dailyrewarddata() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LoginResponse::clear_has_dailyrewarddata() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LoginResponse::clear_dailyrewarddata() {
  if (dailyrewarddata_ != NULL) dailyrewarddata_->::message::DailyRewardSystemData::Clear();
  clear_has_dailyrewarddata();
}
inline const ::message::DailyRewardSystemData& LoginResponse::dailyrewarddata() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return dailyrewarddata_ != NULL ? *dailyrewarddata_ : *default_instance().dailyrewarddata_;
#else
  return dailyrewarddata_ != NULL ? *dailyrewarddata_ : *default_instance_->dailyrewarddata_;
#endif
}
inline ::message::DailyRewardSystemData* LoginResponse::mutable_dailyrewarddata() {
  set_has_dailyrewarddata();
  if (dailyrewarddata_ == NULL) dailyrewarddata_ = new ::message::DailyRewardSystemData;
  return dailyrewarddata_;
}
inline ::message::DailyRewardSystemData* LoginResponse::release_dailyrewarddata() {
  clear_has_dailyrewarddata();
  ::message::DailyRewardSystemData* temp = dailyrewarddata_;
  dailyrewarddata_ = NULL;
  return temp;
}
inline void LoginResponse::set_allocated_dailyrewarddata(::message::DailyRewardSystemData* dailyrewarddata) {
  delete dailyrewarddata_;
  dailyrewarddata_ = dailyrewarddata;
  if (dailyrewarddata) {
    set_has_dailyrewarddata();
  } else {
    clear_has_dailyrewarddata();
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace message

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Login_2eproto__INCLUDED
