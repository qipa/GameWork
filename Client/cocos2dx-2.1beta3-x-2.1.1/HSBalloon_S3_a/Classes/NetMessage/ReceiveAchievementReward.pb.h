// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ReceiveAchievementReward.proto

#ifndef PROTOBUF_ReceiveAchievementReward_2eproto__INCLUDED
#define PROTOBUF_ReceiveAchievementReward_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

namespace message {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ReceiveAchievementReward_2eproto();
void protobuf_AssignDesc_ReceiveAchievementReward_2eproto();
void protobuf_ShutdownFile_ReceiveAchievementReward_2eproto();

class ReceiveAchievementRewardRequest;
class ReceiveAchievementRewardResponse;

enum ReceiveAchievementRewardResponse_GetState {
  ReceiveAchievementRewardResponse_GetState_GetState_Fail = 0,
  ReceiveAchievementRewardResponse_GetState_GetState_Success = 1,
  ReceiveAchievementRewardResponse_GetState_GetState_Repetition = 2
};
bool ReceiveAchievementRewardResponse_GetState_IsValid(int value);
const ReceiveAchievementRewardResponse_GetState ReceiveAchievementRewardResponse_GetState_GetState_MIN = ReceiveAchievementRewardResponse_GetState_GetState_Fail;
const ReceiveAchievementRewardResponse_GetState ReceiveAchievementRewardResponse_GetState_GetState_MAX = ReceiveAchievementRewardResponse_GetState_GetState_Repetition;
const int ReceiveAchievementRewardResponse_GetState_GetState_ARRAYSIZE = ReceiveAchievementRewardResponse_GetState_GetState_MAX + 1;

// ===================================================================

class ReceiveAchievementRewardRequest : public ::google::protobuf::MessageLite {
 public:
  ReceiveAchievementRewardRequest();
  virtual ~ReceiveAchievementRewardRequest();

  ReceiveAchievementRewardRequest(const ReceiveAchievementRewardRequest& from);

  inline ReceiveAchievementRewardRequest& operator=(const ReceiveAchievementRewardRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ReceiveAchievementRewardRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const ReceiveAchievementRewardRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(ReceiveAchievementRewardRequest* other);

  // implements Message ----------------------------------------------

  ReceiveAchievementRewardRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const ReceiveAchievementRewardRequest& from);
  void MergeFrom(const ReceiveAchievementRewardRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 achievementID = 1;
  inline bool has_achievementid() const;
  inline void clear_achievementid();
  static const int kAchievementIDFieldNumber = 1;
  inline ::google::protobuf::int32 achievementid() const;
  inline void set_achievementid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:message.ReceiveAchievementRewardRequest)
 private:
  inline void set_has_achievementid();
  inline void clear_has_achievementid();

  ::google::protobuf::int32 achievementid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ReceiveAchievementReward_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ReceiveAchievementReward_2eproto();
  #endif
  friend void protobuf_AssignDesc_ReceiveAchievementReward_2eproto();
  friend void protobuf_ShutdownFile_ReceiveAchievementReward_2eproto();

  void InitAsDefaultInstance();
  static ReceiveAchievementRewardRequest* default_instance_;
};
// -------------------------------------------------------------------

class ReceiveAchievementRewardResponse : public ::google::protobuf::MessageLite {
 public:
  ReceiveAchievementRewardResponse();
  virtual ~ReceiveAchievementRewardResponse();

  ReceiveAchievementRewardResponse(const ReceiveAchievementRewardResponse& from);

  inline ReceiveAchievementRewardResponse& operator=(const ReceiveAchievementRewardResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ReceiveAchievementRewardResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const ReceiveAchievementRewardResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(ReceiveAchievementRewardResponse* other);

  // implements Message ----------------------------------------------

  ReceiveAchievementRewardResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const ReceiveAchievementRewardResponse& from);
  void MergeFrom(const ReceiveAchievementRewardResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  typedef ReceiveAchievementRewardResponse_GetState GetState;
  static const GetState GetState_Fail = ReceiveAchievementRewardResponse_GetState_GetState_Fail;
  static const GetState GetState_Success = ReceiveAchievementRewardResponse_GetState_GetState_Success;
  static const GetState GetState_Repetition = ReceiveAchievementRewardResponse_GetState_GetState_Repetition;
  static inline bool GetState_IsValid(int value) {
    return ReceiveAchievementRewardResponse_GetState_IsValid(value);
  }
  static const GetState GetState_MIN =
    ReceiveAchievementRewardResponse_GetState_GetState_MIN;
  static const GetState GetState_MAX =
    ReceiveAchievementRewardResponse_GetState_GetState_MAX;
  static const int GetState_ARRAYSIZE =
    ReceiveAchievementRewardResponse_GetState_GetState_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // required .message.ReceiveAchievementRewardResponse.GetState state = 1;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 1;
  inline ::message::ReceiveAchievementRewardResponse_GetState state() const;
  inline void set_state(::message::ReceiveAchievementRewardResponse_GetState value);

  // optional int32 addGoldNumber = 2;
  inline bool has_addgoldnumber() const;
  inline void clear_addgoldnumber();
  static const int kAddGoldNumberFieldNumber = 2;
  inline ::google::protobuf::int32 addgoldnumber() const;
  inline void set_addgoldnumber(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:message.ReceiveAchievementRewardResponse)
 private:
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_addgoldnumber();
  inline void clear_has_addgoldnumber();

  int state_;
  ::google::protobuf::int32 addgoldnumber_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ReceiveAchievementReward_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ReceiveAchievementReward_2eproto();
  #endif
  friend void protobuf_AssignDesc_ReceiveAchievementReward_2eproto();
  friend void protobuf_ShutdownFile_ReceiveAchievementReward_2eproto();

  void InitAsDefaultInstance();
  static ReceiveAchievementRewardResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// ReceiveAchievementRewardRequest

// required int32 achievementID = 1;
inline bool ReceiveAchievementRewardRequest::has_achievementid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReceiveAchievementRewardRequest::set_has_achievementid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReceiveAchievementRewardRequest::clear_has_achievementid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReceiveAchievementRewardRequest::clear_achievementid() {
  achievementid_ = 0;
  clear_has_achievementid();
}
inline ::google::protobuf::int32 ReceiveAchievementRewardRequest::achievementid() const {
  return achievementid_;
}
inline void ReceiveAchievementRewardRequest::set_achievementid(::google::protobuf::int32 value) {
  set_has_achievementid();
  achievementid_ = value;
}

// -------------------------------------------------------------------

// ReceiveAchievementRewardResponse

// required .message.ReceiveAchievementRewardResponse.GetState state = 1;
inline bool ReceiveAchievementRewardResponse::has_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReceiveAchievementRewardResponse::set_has_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReceiveAchievementRewardResponse::clear_has_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReceiveAchievementRewardResponse::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::message::ReceiveAchievementRewardResponse_GetState ReceiveAchievementRewardResponse::state() const {
  return static_cast< ::message::ReceiveAchievementRewardResponse_GetState >(state_);
}
inline void ReceiveAchievementRewardResponse::set_state(::message::ReceiveAchievementRewardResponse_GetState value) {
  assert(::message::ReceiveAchievementRewardResponse_GetState_IsValid(value));
  set_has_state();
  state_ = value;
}

// optional int32 addGoldNumber = 2;
inline bool ReceiveAchievementRewardResponse::has_addgoldnumber() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReceiveAchievementRewardResponse::set_has_addgoldnumber() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReceiveAchievementRewardResponse::clear_has_addgoldnumber() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReceiveAchievementRewardResponse::clear_addgoldnumber() {
  addgoldnumber_ = 0;
  clear_has_addgoldnumber();
}
inline ::google::protobuf::int32 ReceiveAchievementRewardResponse::addgoldnumber() const {
  return addgoldnumber_;
}
inline void ReceiveAchievementRewardResponse::set_addgoldnumber(::google::protobuf::int32 value) {
  set_has_addgoldnumber();
  addgoldnumber_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace message

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ReceiveAchievementReward_2eproto__INCLUDED
